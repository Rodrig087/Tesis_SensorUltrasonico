;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/06/2017 15:38:24
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EFA1  	GOTO        1346
_interrupt:
;Master.c,48 :: 		void interrupt(void){
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;Master.c,49 :: 		if(PIR1.F5==1){
0x0010	0xF017CFE1  	MOVFF       FSR1L, 23
0x0014	0xF018CFE2  	MOVFF       FSR1H, 24
0x0018	0xAA9E      	BTFSS       PIR1, 5 
0x001A	0xD039      	BRA         L_interrupt0
;Master.c,51 :: 		Dato = UART1_Read();
0x001C	0xD8CE      	RCALL       _UART1_Read
0x001E	0xF04CC000  	MOVFF       R0, _Dato
;Master.c,53 :: 		if ((Dato==Hdr)&&(ir==0)){                   //Verifica que el primer dato en llegar sea el identificador de inicio de trama
0x0022	0x5000      	MOVF        R0, 0 
0x0024	0x0A3A      	XORLW       58
0x0026	0xE111      	BNZ         L_interrupt3
0x0028	0x504E      	MOVF        _ir, 0 
0x002A	0x0A00      	XORLW       0
0x002C	0xE10E      	BNZ         L_interrupt3
L__interrupt38:
;Master.c,54 :: 		BanT = 1;                                 //Activa una bandera de trama
0x002E	0x0E01      	MOVLW       1
0x0030	0x6E4D      	MOVWF       _BanT 
;Master.c,55 :: 		Rspt[ir] = Dato;                          //Almacena el Dato en la trama de respuesta
0x0032	0x0E25      	MOVLW       _Rspt
0x0034	0x6EE1      	MOVWF       FSR1L 
0x0036	0x0E00      	MOVLW       hi_addr(_Rspt)
0x0038	0x6EE2      	MOVWF       FSR1H 
0x003A	0x504E      	MOVF        _ir, 0 
0x003C	0x26E1      	ADDWF       FSR1L, 1 
0x003E	0x0E00      	MOVLW       0
0x0040	0xBE4E      	BTFSC       _ir, 7 
0x0042	0x0EFF      	MOVLW       255
0x0044	0x22E2      	ADDWFC      FSR1H, 1 
0x0046	0xFFE6C04C  	MOVFF       _Dato, POSTINC1
;Master.c,56 :: 		}
L_interrupt3:
;Master.c,57 :: 		if ((Dato!=Hdr)&&(ir==0)){                   //Verifica si el primer dato en llegar es diferente al identificador del inicio de trama
0x004A	0x504C      	MOVF        _Dato, 0 
0x004C	0x0A3A      	XORLW       58
0x004E	0xE005      	BZ          L_interrupt6
0x0050	0x504E      	MOVF        _ir, 0 
0x0052	0x0A00      	XORLW       0
0x0054	0xE102      	BNZ         L_interrupt6
L__interrupt37:
;Master.c,58 :: 		ir=-1;                                    //Si es asi, reduce el subindice en una unidad
0x0056	0x0EFF      	MOVLW       255
0x0058	0x6E4E      	MOVWF       _ir 
;Master.c,59 :: 		}
L_interrupt6:
;Master.c,60 :: 		if ((BanT==1)&&(ir!=0)){
0x005A	0x504D      	MOVF        _BanT, 0 
0x005C	0x0A01      	XORLW       1
0x005E	0xE10F      	BNZ         L_interrupt9
0x0060	0x504E      	MOVF        _ir, 0 
0x0062	0x0A00      	XORLW       0
0x0064	0xE00C      	BZ          L_interrupt9
L__interrupt36:
;Master.c,61 :: 		Rspt[ir] = Dato;                          //Almacena el resto de datos en la trama de respuesta si la bandera de trama esta activada
0x0066	0x0E25      	MOVLW       _Rspt
0x0068	0x6EE1      	MOVWF       FSR1L 
0x006A	0x0E00      	MOVLW       hi_addr(_Rspt)
0x006C	0x6EE2      	MOVWF       FSR1H 
0x006E	0x504E      	MOVF        _ir, 0 
0x0070	0x26E1      	ADDWF       FSR1L, 1 
0x0072	0x0E00      	MOVLW       0
0x0074	0xBE4E      	BTFSC       _ir, 7 
0x0076	0x0EFF      	MOVLW       255
0x0078	0x22E2      	ADDWFC      FSR1H, 1 
0x007A	0xFFE6C04C  	MOVFF       _Dato, POSTINC1
;Master.c,62 :: 		}
L_interrupt9:
;Master.c,64 :: 		ir++;                                        //Aumenta el subindice una unidad
0x007E	0x2A4E      	INCF        _ir, 1 
;Master.c,65 :: 		if (ir==Rsize){                              //Verifica que se haya terminado de llenar la trama de datos
0x0080	0x504E      	MOVF        _ir, 0 
0x0082	0x0A06      	XORLW       6
0x0084	0xE103      	BNZ         L_interrupt10
;Master.c,66 :: 		BanP = 1;                                 //Habilita la bandera de lectura de datos
0x0086	0x0E01      	MOVLW       1
0x0088	0x6E3C      	MOVWF       _BanP 
;Master.c,67 :: 		ir=0;                                     //Limpia el subindice de la trama de peticion para permitir una nueva secuencia de recepcion de datos
0x008A	0x6A4E      	CLRF        _ir 
;Master.c,68 :: 		}
L_interrupt10:
;Master.c,70 :: 		PIR1.F5 = 0;                                 //Limpia la bandera de interrupcion
0x008C	0x9A9E      	BCF         PIR1, 5 
;Master.c,71 :: 		}
L_interrupt0:
;Master.c,72 :: 		}
L_end_interrupt:
L__interrupt42:
0x008E	0xF000C016  	MOVFF       22, R0
0x0092	0xF001C015  	MOVFF       21, R1
0x0096	0xFFE1C017  	MOVFF       23, FSR1L
0x009A	0xFFE2C018  	MOVFF       24, FSR1H
0x009E	0x0011      	RETFIE      1
; end of _interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x00A0	0x0000      	NOP
0x00A2	0x0000      	NOP
0x00A4	0x0000      	NOP
0x00A6	0x0000      	NOP
0x00A8	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x00AA	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x00AC	0x0E24      	MOVLW       36
0x00AE	0x6E0C      	MOVWF       R12, 0
0x00B0	0x0EB5      	MOVLW       181
0x00B2	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x00B4	0x2E0D      	DECFSZ      R13, 1, 0
0x00B6	0xD7FE      	BRA         L_Delay_5500us5
0x00B8	0x2E0C      	DECFSZ      R12, 1, 0
0x00BA	0xD7FC      	BRA         L_Delay_5500us5
0x00BC	0x0000      	NOP
0x00BE	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x00C0	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x00C2	0x0E53      	MOVLW       83
0x00C4	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x00C6	0x2E0D      	DECFSZ      R13, 1, 0
0x00C8	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x00CA	0x0012      	RETURN      0
; end of _Delay_50us
_UART2_Data_Ready:
;__Lib_UART_c67b67.c,136 :: 		
;__Lib_UART_c67b67.c,137 :: 		
0x00CC	0x0E00      	MOVLW       0
0x00CE	0xBAA4      	BTFSC       RC2IF_bit, BitPos(RC2IF_bit+0) 
0x00D0	0x0E01      	MOVLW       1
0x00D2	0x6E00      	MOVWF       R0 
;__Lib_UART_c67b67.c,138 :: 		
L_end_UART2_Data_Ready:
0x00D4	0x0012      	RETURN      0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_c67b67.c,154 :: 		
;__Lib_UART_c67b67.c,155 :: 		
0x00D6	0x0E00      	MOVLW       0
0x00D8	0xB272      	BTFSC       TXSTA2, 1 
0x00DA	0x0E01      	MOVLW       1
0x00DC	0x6E00      	MOVWF       R0 
;__Lib_UART_c67b67.c,156 :: 		
L_end_UART2_Tx_Idle:
0x00DE	0x0012      	RETURN      0
; end of _UART2_Tx_Idle
_UART2_Read:
;__Lib_UART_c67b67.c,141 :: 		
;__Lib_UART_c67b67.c,144 :: 		
0x00E0	0xF001CF74  	MOVFF       RCREG2, R1
;__Lib_UART_c67b67.c,145 :: 		
0x00E4	0xA271      	BTFSS       RCSTA2, 1 
0x00E6	0xD002      	BRA         L_UART2_Read18
;__Lib_UART_c67b67.c,146 :: 		
0x00E8	0x9871      	BCF         RCSTA2, 4 
;__Lib_UART_c67b67.c,147 :: 		
0x00EA	0x8871      	BSF         RCSTA2, 4 
;__Lib_UART_c67b67.c,148 :: 		
L_UART2_Read18:
;__Lib_UART_c67b67.c,149 :: 		
0x00EC	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67b67.c,150 :: 		
L_end_UART2_Read:
0x00F0	0x0012      	RETURN      0
; end of _UART2_Read
_UART1_Data_Ready:
;__Lib_UART_c67b67.c,39 :: 		
;__Lib_UART_c67b67.c,40 :: 		
0x00F2	0x0E00      	MOVLW       0
0x00F4	0xBA9E      	BTFSC       PIR1, 5 
0x00F6	0x0E01      	MOVLW       1
0x00F8	0x6E00      	MOVWF       R0 
;__Lib_UART_c67b67.c,41 :: 		
L_end_UART1_Data_Ready:
0x00FA	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_c67b67.c,57 :: 		
;__Lib_UART_c67b67.c,58 :: 		
0x00FC	0x0E00      	MOVLW       0
0x00FE	0xB2AC      	BTFSC       TXSTA, 1 
0x0100	0x0E01      	MOVLW       1
0x0102	0x6E00      	MOVWF       R0 
;__Lib_UART_c67b67.c,59 :: 		
L_end_UART1_Tx_Idle:
0x0104	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0106	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0108	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x010A	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x010C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x010E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0110	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0112	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0114	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0116	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0118	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x011A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x011C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x011E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0120	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0122	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0124	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0126	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0128	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x012A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x012C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x012E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0130	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0132	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0134	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0136	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0138	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x013A	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x013C	0x0100      	MOVLB       0
0x013E	0xBF60      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0140	0xD002      	BRA         L__Lcd_Cmd21
0x0142	0x9081      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0144	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0146	0x8081      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0148	0xBD60      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x014A	0xD002      	BRA         L__Lcd_Cmd23
0x014C	0x9281      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x014E	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0150	0x8281      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0152	0xBB60      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0154	0xD002      	BRA         L__Lcd_Cmd25
0x0156	0x9481      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0158	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x015A	0x8481      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x015C	0xB960      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x015E	0xD002      	BRA         L__Lcd_Cmd27
0x0160	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0162	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0164	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0166	0xB03B      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0168	0xD002      	BRA         L__Lcd_Cmd29
0x016A	0x8A81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x016C	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x016E	0x9A81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0170	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0172	0xDF96      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0174	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0176	0xB760      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0178	0xD002      	BRA         L__Lcd_Cmd31
0x017A	0x9081      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x017C	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x017E	0x8081      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x0180	0xB560      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x0182	0xD002      	BRA         L__Lcd_Cmd33
0x0184	0x9281      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0186	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0188	0x8281      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x018A	0xB360      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x018C	0xD002      	BRA         L__Lcd_Cmd35
0x018E	0x9481      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0190	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0192	0x8481      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0194	0xB160      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x0196	0xD002      	BRA         L__Lcd_Cmd37
0x0198	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x019A	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x019C	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x019E	0xB03B      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01A0	0xD002      	BRA         L__Lcd_Cmd39
0x01A2	0x8A81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01A4	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x01A6	0x9A81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x01A8	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x01AA	0xDF7A      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x01AC	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x01AE	0xA03B      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01B0	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x01B2	0xDF7C      	RCALL       _Delay_5500us
0x01B4	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x01B6	0xDF85      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x01B8	0x0012      	RETURN      0
; end of _Lcd_Cmd
_UART1_Read:
;__Lib_UART_c67b67.c,44 :: 		
;__Lib_UART_c67b67.c,47 :: 		
0x01BA	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67b67.c,48 :: 		
0x01BE	0xA2AB      	BTFSS       RCSTA, 1 
0x01C0	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67b67.c,49 :: 		
0x01C2	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67b67.c,50 :: 		
0x01C4	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67b67.c,51 :: 		
L_UART1_Read2:
;__Lib_UART_c67b67.c,52 :: 		
0x01C6	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67b67.c,53 :: 		
L_end_UART1_Read:
0x01CA	0x0012      	RETURN      0
; end of _UART1_Read
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x01CC	0x6A5F      	CLRF        WordToStr_len_L0 
L_WordToStr6:
0x01CE	0x0E05      	MOVLW       5
0x01D0	0x5C5F      	SUBWF       WordToStr_len_L0, 0 
0x01D2	0xE20B      	BC          L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x01D4	0x505F      	MOVF        WordToStr_len_L0, 0 
0x01D6	0x0100      	MOVLB       0
0x01D8	0x2565      	ADDWF       FARG_WordToStr_output, 0, 1
0x01DA	0x6EE1      	MOVWF       FSR1L 
0x01DC	0x0E00      	MOVLW       0
0x01DE	0x2166      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x01E0	0x6EE2      	MOVWF       FSR1H 
0x01E2	0x0E20      	MOVLW       32
0x01E4	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x01E6	0x2A5F      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,90 :: 		
0x01E8	0xD7F2      	BRA         L_WordToStr6
L_WordToStr7:
0x01EA	0x0100      	MOVLB       0
;__Lib_Conversions.c,91 :: 		
0x01EC	0x505F      	MOVF        WordToStr_len_L0, 0 
0x01EE	0x2565      	ADDWF       FARG_WordToStr_output, 0, 1
0x01F0	0x6EE1      	MOVWF       FSR1L 
0x01F2	0x0E00      	MOVLW       0
0x01F4	0x2166      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x01F6	0x6EE2      	MOVWF       FSR1H 
0x01F8	0x6AE6      	CLRF        POSTINC1 
0x01FA	0x065F      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x01FC	0x505F      	MOVF        WordToStr_len_L0, 0 
0x01FE	0x2565      	ADDWF       FARG_WordToStr_output, 0, 1
0x0200	0x6F67      	MOVWF       FLOC__WordToStr, 1
0x0202	0x0E00      	MOVLW       0
0x0204	0x2166      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0206	0x6F68      	MOVWF       FLOC__WordToStr+1, 1
0x0208	0x0E0A      	MOVLW       10
0x020A	0x6E04      	MOVWF       R4 
0x020C	0x0E00      	MOVLW       0
0x020E	0x6E05      	MOVWF       R5 
0x0210	0xF000C063  	MOVFF       FARG_WordToStr_input, R0
0x0214	0xF001C064  	MOVFF       FARG_WordToStr_input+1, R1
0x0218	0xDF76      	RCALL       _Div_16X16_U
0x021A	0xF000C008  	MOVFF       R8, R0
0x021E	0xF001C009  	MOVFF       R9, R1
0x0222	0x0E30      	MOVLW       48
0x0224	0x2600      	ADDWF       R0, 1 
0x0226	0xFFE1C067  	MOVFF       FLOC__WordToStr, FSR1L
0x022A	0xFFE2C068  	MOVFF       FLOC__WordToStr+1, FSR1H
0x022E	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,95 :: 		
0x0232	0x0E0A      	MOVLW       10
0x0234	0x6E04      	MOVWF       R4 
0x0236	0x0E00      	MOVLW       0
0x0238	0x6E05      	MOVWF       R5 
0x023A	0xF000C063  	MOVFF       FARG_WordToStr_input, R0
0x023E	0xF001C064  	MOVFF       FARG_WordToStr_input+1, R1
0x0242	0xDF61      	RCALL       _Div_16X16_U
0x0244	0xF063C000  	MOVFF       R0, FARG_WordToStr_input
0x0248	0xF064C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x024C	0x0E00      	MOVLW       0
0x024E	0x1801      	XORWF       R1, 0 
0x0250	0xE102      	BNZ         L__WordToStr109
0x0252	0x0E00      	MOVLW       0
0x0254	0x1800      	XORWF       R0, 0 
L__WordToStr109:
0x0256	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x0258	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x025A	0x065F      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,99 :: 		
0x025C	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x025E	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0260	0x9893      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0262	0x9A93      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0264	0x9693      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0266	0x9493      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0268	0x9293      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x026A	0x9093      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x026C	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x026E	0x9A81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0270	0x9081      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0272	0x9281      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0274	0x9481      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0276	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0278	0xDF19      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x027A	0xDF18      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x027C	0xDF17      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x027E	0x8481      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0280	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0282	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0284	0xDF0D      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0286	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0288	0xDF11      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x028A	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x028C	0xDF09      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x028E	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0290	0xDF0D      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0292	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0294	0xDF05      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0296	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x0298	0xDF09      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x029A	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x029C	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x029E	0xDF00      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x02A0	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x02A2	0xDF04      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x02A4	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x02A6	0xDEFC      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x02A8	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x02AA	0x9481      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x02AC	0x8081      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x02AE	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x02B0	0xDEF7      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x02B2	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x02B4	0xDEFB      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x02B6	0x9081      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x02B8	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x02BA	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x02BC	0xDEF1      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x02BE	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x02C0	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x02C2	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x02C4	0xDEED      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x02C6	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x02C8	0xDEF1      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x02CA	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x02CC	0xDEE9      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x02CE	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x02D0	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x02D2	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x02D4	0xDEE5      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x02D6	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x02D8	0xDEE9      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x02DA	0x9681      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x02DC	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x02DE	0xDEE0      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x02E0	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x02E2	0x8081      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x02E4	0x8281      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x02E6	0x8481      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x02E8	0x8681      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x02EA	0x8881      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x02EC	0xDED9      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x02EE	0x9881      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x02F0	0xDEDD      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x02F2	0x803B      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x02F4	0x0012      	RETURN      0
; end of _Lcd_Init
_UART1_Init:
;__Lib_UART_c67b67.c,20 :: 		
;__Lib_UART_c67b67.c,23 :: 		
0x02F6	0x0ED4      	MOVLW       _UART1_Write
0x02F8	0x6E4F      	MOVWF       _UART_Wr_Ptr 
0x02FA	0x0E03      	MOVLW       hi_addr(_UART1_Write)
0x02FC	0x6E50      	MOVWF       _UART_Wr_Ptr+1 
0x02FE	0x0E57      	MOVLW       FARG_UART1_Write_data_
0x0300	0x6E51      	MOVWF       _UART_Wr_Ptr+2 
0x0302	0x0E00      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0304	0x6E52      	MOVWF       _UART_Wr_Ptr+3 
;__Lib_UART_c67b67.c,24 :: 		
0x0306	0x0EBA      	MOVLW       _UART1_Read
0x0308	0x6E48      	MOVWF       _UART_Rd_Ptr 
0x030A	0x0E01      	MOVLW       hi_addr(_UART1_Read)
0x030C	0x6E49      	MOVWF       _UART_Rd_Ptr+1 
0x030E	0x0E00      	MOVLW       0
0x0310	0x6E4A      	MOVWF       _UART_Rd_Ptr+2 
0x0312	0x0E00      	MOVLW       0
0x0314	0x6E4B      	MOVWF       _UART_Rd_Ptr+3 
;__Lib_UART_c67b67.c,25 :: 		
0x0316	0x0EF2      	MOVLW       _UART1_Data_Ready
0x0318	0x6E44      	MOVWF       _UART_Rdy_Ptr 
0x031A	0x0E00      	MOVLW       hi_addr(_UART1_Data_Ready)
0x031C	0x6E45      	MOVWF       _UART_Rdy_Ptr+1 
0x031E	0x0E00      	MOVLW       0
0x0320	0x6E46      	MOVWF       _UART_Rdy_Ptr+2 
0x0322	0x0E00      	MOVLW       0
0x0324	0x6E47      	MOVWF       _UART_Rdy_Ptr+3 
;__Lib_UART_c67b67.c,26 :: 		
0x0326	0x0EFC      	MOVLW       _UART1_Tx_Idle
0x0328	0x6E53      	MOVWF       _UART_Tx_Idle_Ptr 
0x032A	0x0E00      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x032C	0x6E54      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x032E	0x0E00      	MOVLW       0
0x0330	0x6E55      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x0332	0x0E00      	MOVLW       0
0x0334	0x6E56      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67b67.c,28 :: 		
0x0336	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67b67.c,29 :: 		
0x0338	0x0E90      	MOVLW       144
0x033A	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67b67.c,30 :: 		
0x033C	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67b67.c,31 :: 		
0x033E	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67b67.c,33 :: 		
L_UART1_Init0:
0x0340	0xAA9E      	BTFSS       PIR1, 5 
0x0342	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67b67.c,34 :: 		
0x0344	0xF000CFAE  	MOVFF       RCREG, R0
0x0348	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67b67.c,35 :: 		
L_end_UART1_Init:
0x034A	0x0012      	RETURN      0
; end of _UART1_Init
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x034C	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x034E	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x0350	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x0352	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x0354	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x0356	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x0358	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x035A	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x035C	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x035E	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x0360	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x0362	0x0012      	RETURN      0
; end of _____DoIFC
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0364	0x903B      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x0366	0xF060C05F  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x036A	0xDEE8      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x036C	0x803B      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x036E	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0370	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0372	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0376	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0378	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x037A	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x037C	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x037E	0x0012      	RETURN      0
; end of ___CC2DW
_Configuracion:
;Master.c,75 :: 		void Configuracion(){
;Master.c,77 :: 		ANSELA = 0;                                       //Configura el PORTA como digital
0x0380	0x010F      	MOVLB       15
0x0382	0x6B38      	CLRF        ANSELA, 1
;Master.c,78 :: 		ANSELB = 0;                                       //Configura el PORTB como digital
0x0384	0x6B39      	CLRF        ANSELB, 1
;Master.c,79 :: 		ANSELC = 0;                                       //Configura el PORTC como digital
0x0386	0x6B3A      	CLRF        ANSELC, 1
;Master.c,81 :: 		TRISC5_bit = 0;                                   //Configura el pin C5 como salida
0x0388	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;Master.c,82 :: 		TRISA0_bit = 1;
0x038A	0x8092      	BSF         TRISA0_bit, BitPos(TRISA0_bit+0) 
;Master.c,83 :: 		TRISA1_bit = 0;
0x038C	0x9292      	BCF         TRISA1_bit, BitPos(TRISA1_bit+0) 
;Master.c,85 :: 		INTCON.GIE = 1;                                   //Habilita las interrupciones globales
0x038E	0x8EF2      	BSF         INTCON, 7 
;Master.c,86 :: 		INTCON.PEIE = 1;                                  //Habilita las interrupciones perifericas
0x0390	0x8CF2      	BSF         INTCON, 6 
;Master.c,87 :: 		INTCON.RBIF = 0;
0x0392	0x90F2      	BCF         INTCON, 0 
;Master.c,89 :: 		PIE1.RC1IE = 1;                                   //Habilita la interrupcion en UART1 receive
0x0394	0x8A9D      	BSF         PIE1, 5 
;Master.c,90 :: 		PIR1.F5 = 0;                                      //Limpia la bandera de interrupcion
0x0396	0x9A9E      	BCF         PIR1, 5 
;Master.c,92 :: 		UART1_Init(9600);                                 //Inicializa el UART a 9600 bps
0x0398	0x86B8      	BSF         BAUDCON, 3, 0
0x039A	0x0E02      	MOVLW       2
0x039C	0x6EB0      	MOVWF       SPBRGH 
0x039E	0x0E08      	MOVLW       8
0x03A0	0x6EAF      	MOVWF       SPBRG 
0x03A2	0x84AC      	BSF         TXSTA, 2, 0
0x03A4	0xDFA8      	RCALL       _UART1_Init
;Master.c,93 :: 		Delay_ms(100);                                    //Espera para que el modulo UART se estabilice
0x03A6	0x0E03      	MOVLW       3
0x03A8	0x6E0B      	MOVWF       R11, 0
0x03AA	0x0E8A      	MOVLW       138
0x03AC	0x6E0C      	MOVWF       R12, 0
0x03AE	0x0E55      	MOVLW       85
0x03B0	0x6E0D      	MOVWF       R13, 0
L_Configuracion11:
0x03B2	0x2E0D      	DECFSZ      R13, 1, 0
0x03B4	0xD7FE      	BRA         L_Configuracion11
0x03B6	0x2E0C      	DECFSZ      R12, 1, 0
0x03B8	0xD7FC      	BRA         L_Configuracion11
0x03BA	0x2E0B      	DECFSZ      R11, 1, 0
0x03BC	0xD7FA      	BRA         L_Configuracion11
0x03BE	0x0000      	NOP
0x03C0	0x0000      	NOP
;Master.c,95 :: 		Lcd_Init();                                       // Initialize LCD
0x03C2	0xDF4E      	RCALL       _Lcd_Init
;Master.c,96 :: 		Lcd_Cmd(_LCD_CLEAR);                              // Clear display
0x03C4	0x0E01      	MOVLW       1
0x03C6	0x0100      	MOVLB       0
0x03C8	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x03CA	0xDEB8      	RCALL       _Lcd_Cmd
;Master.c,97 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                         // Cursor off
0x03CC	0x0E0C      	MOVLW       12
0x03CE	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x03D0	0xDEB5      	RCALL       _Lcd_Cmd
;Master.c,98 :: 		}
L_end_Configuracion:
0x03D2	0x0012      	RETURN      0
; end of _Configuracion
_UART1_Write:
;__Lib_UART_c67b67.c,63 :: 		
;__Lib_UART_c67b67.c,64 :: 		
L_UART1_Write3:
0x03D4	0xB2AC      	BTFSC       TXSTA, 1 
0x03D6	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67b67.c,65 :: 		
0x03D8	0x0000      	NOP
0x03DA	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67b67.c,66 :: 		
0x03DC	0xFFADC057  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67b67.c,67 :: 		
L_end_UART1_Write:
0x03E0	0x0012      	RETURN      0
; end of _UART1_Write
_IntToStr:
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x03E2	0x6A5D      	CLRF        IntToStr_negative_L0 
0x03E4	0x6A5E      	CLRF        IntToStr_negative_L0+1 
;__Lib_Conversions.c,153 :: 		
0x03E6	0xF061C057  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x03EA	0xF062C058  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,154 :: 		
0x03EE	0x0E80      	MOVLW       128
0x03F0	0x1858      	XORWF       FARG_IntToStr_input+1, 0 
0x03F2	0x6E00      	MOVWF       R0 
0x03F4	0x0E80      	MOVLW       128
0x03F6	0x5C00      	SUBWF       R0, 0 
0x03F8	0xE102      	BNZ         L__IntToStr115
0x03FA	0x0E00      	MOVLW       0
0x03FC	0x5C57      	SUBWF       FARG_IntToStr_input, 0 
L__IntToStr115:
0x03FE	0xE20C      	BC          L_IntToStr23
;__Lib_Conversions.c,155 :: 		
0x0400	0x0E01      	MOVLW       1
0x0402	0x6E5D      	MOVWF       IntToStr_negative_L0 
0x0404	0x0E00      	MOVLW       0
0x0406	0x6E5E      	MOVWF       IntToStr_negative_L0+1 
;__Lib_Conversions.c,156 :: 		
0x0408	0x5057      	MOVF        FARG_IntToStr_input, 0 
0x040A	0x0800      	SUBLW       0
0x040C	0x0100      	MOVLB       0
0x040E	0x6F61      	MOVWF       IntToStr_inword_L0, 1
0x0410	0xF062C058  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x0414	0x0E00      	MOVLW       0
0x0416	0x5762      	SUBFWB      IntToStr_inword_L0+1, 1, 1
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
0x0418	0xF063C061  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x041C	0xF064C062  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x0420	0xF065C059  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x0424	0xF066C05A  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x0428	0xDED1      	RCALL       _WordToStr
;__Lib_Conversions.c,160 :: 		
0x042A	0x0E06      	MOVLW       6
0x042C	0x6E5B      	MOVWF       IntToStr_i_L0 
0x042E	0x0E00      	MOVLW       0
0x0430	0x6E5C      	MOVWF       IntToStr_i_L0+1 
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
0x0432	0x0E00      	MOVLW       0
0x0434	0x6E00      	MOVWF       R0 
0x0436	0x505C      	MOVF        IntToStr_i_L0+1, 0 
0x0438	0x5C00      	SUBWF       R0, 0 
0x043A	0xE102      	BNZ         L__IntToStr116
0x043C	0x505B      	MOVF        IntToStr_i_L0, 0 
0x043E	0x0800      	SUBLW       0
L__IntToStr116:
0x0440	0xE219      	BC          L_IntToStr25
;__Lib_Conversions.c,162 :: 		
0x0442	0x505B      	MOVF        IntToStr_i_L0, 0 
0x0444	0x2459      	ADDWF       FARG_IntToStr_output, 0 
0x0446	0x6EE1      	MOVWF       FSR1L 
0x0448	0x505C      	MOVF        IntToStr_i_L0+1, 0 
0x044A	0x205A      	ADDWFC      FARG_IntToStr_output+1, 0 
0x044C	0x6EE2      	MOVWF       FSR1H 
0x044E	0x0E01      	MOVLW       1
0x0450	0x5C5B      	SUBWF       IntToStr_i_L0, 0 
0x0452	0x6E00      	MOVWF       R0 
0x0454	0x0E00      	MOVLW       0
0x0456	0x585C      	SUBWFB      IntToStr_i_L0+1, 0 
0x0458	0x6E01      	MOVWF       R1 
0x045A	0x5000      	MOVF        R0, 0 
0x045C	0x2459      	ADDWF       FARG_IntToStr_output, 0 
0x045E	0x6EE9      	MOVWF       FSR0L 
0x0460	0x5001      	MOVF        R1, 0 
0x0462	0x205A      	ADDWFC      FARG_IntToStr_output+1, 0 
0x0464	0x6EEA      	MOVWF       FSR0H 
0x0466	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,163 :: 		
0x046A	0x0E01      	MOVLW       1
0x046C	0x5E5B      	SUBWF       IntToStr_i_L0, 1 
0x046E	0x0E00      	MOVLW       0
0x0470	0x5A5C      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,164 :: 		
0x0472	0xD7DF      	BRA         L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x0474	0xFFE1C059  	MOVFF       FARG_IntToStr_output, FSR1L
0x0478	0xFFE2C05A  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x047C	0x0E20      	MOVLW       32
0x047E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,166 :: 		
0x0480	0x505D      	MOVF        IntToStr_negative_L0, 0 
0x0482	0x105E      	IORWF       IntToStr_negative_L0+1, 0 
0x0484	0xE01A      	BZ          L_IntToStr26
;__Lib_Conversions.c,167 :: 		
0x0486	0x6A5B      	CLRF        IntToStr_i_L0 
0x0488	0x6A5C      	CLRF        IntToStr_i_L0+1 
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
0x048A	0x505B      	MOVF        IntToStr_i_L0, 0 
0x048C	0x2459      	ADDWF       FARG_IntToStr_output, 0 
0x048E	0x6EE9      	MOVWF       FSR0L 
0x0490	0x505C      	MOVF        IntToStr_i_L0+1, 0 
0x0492	0x205A      	ADDWFC      FARG_IntToStr_output+1, 0 
0x0494	0x6EEA      	MOVWF       FSR0H 
0x0496	0x50EE      	MOVF        POSTINC0, 0 
0x0498	0x0A20      	XORLW       32
0x049A	0xE103      	BNZ         L_IntToStr28
0x049C	0x4A5B      	INFSNZ      IntToStr_i_L0, 1 
0x049E	0x2A5C      	INCF        IntToStr_i_L0+1, 1 
0x04A0	0xD7F4      	BRA         L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x04A2	0x0E01      	MOVLW       1
0x04A4	0x5E5B      	SUBWF       IntToStr_i_L0, 1 
0x04A6	0x0E00      	MOVLW       0
0x04A8	0x5A5C      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,170 :: 		
0x04AA	0x505B      	MOVF        IntToStr_i_L0, 0 
0x04AC	0x2459      	ADDWF       FARG_IntToStr_output, 0 
0x04AE	0x6EE1      	MOVWF       FSR1L 
0x04B0	0x505C      	MOVF        IntToStr_i_L0+1, 0 
0x04B2	0x205A      	ADDWFC      FARG_IntToStr_output+1, 0 
0x04B4	0x6EE2      	MOVWF       FSR1H 
0x04B6	0x0E2D      	MOVLW       45
0x04B8	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x04BA	0x0012      	RETURN      0
; end of _IntToStr
_UART_Tx_Idle:
;__Lib_UART_c67b67.c,277 :: 		
;__Lib_UART_c67b67.c,278 :: 		
0x04BC	0xF000C053  	MOVFF       _UART_Tx_Idle_Ptr, R0
0x04C0	0xF001C054  	MOVFF       _UART_Tx_Idle_Ptr+1, R1
0x04C4	0xDF43      	RCALL       _____DoIFC
;__Lib_UART_c67b67.c,279 :: 		
L_end_UART_Tx_Idle:
0x04C6	0x0012      	RETURN      0
; end of _UART_Tx_Idle
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x04C8	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x04CA	0x0E80      	MOVLW       128
0x04CC	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x04CE	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x04D0	0x0EC0      	MOVLW       192
0x04D2	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x04D4	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x04D6	0x0E94      	MOVLW       148
0x04D8	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x04DA	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x04DC	0x0ED4      	MOVLW       212
0x04DE	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x04E0	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x04E2	0x0E80      	MOVLW       128
0x04E4	0x6E57      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x04E6	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x04E8	0x5057      	MOVF        FARG_Lcd_Out_row, 0 
0x04EA	0x0A01      	XORLW       1
0x04EC	0xE0EE      	BZ          L_Lcd_Out13
0x04EE	0x5057      	MOVF        FARG_Lcd_Out_row, 0 
0x04F0	0x0A02      	XORLW       2
0x04F2	0xE0EE      	BZ          L_Lcd_Out14
0x04F4	0x5057      	MOVF        FARG_Lcd_Out_row, 0 
0x04F6	0x0A03      	XORLW       3
0x04F8	0xE0EE      	BZ          L_Lcd_Out15
0x04FA	0x5057      	MOVF        FARG_Lcd_Out_row, 0 
0x04FC	0x0A04      	XORLW       4
0x04FE	0xE0EE      	BZ          L_Lcd_Out16
0x0500	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0502	0x0458      	DECF        FARG_Lcd_Out_column, 0 
0x0504	0x6E00      	MOVWF       R0 
0x0506	0x5057      	MOVF        FARG_Lcd_Out_row, 0 
0x0508	0x2600      	ADDWF       R0, 1 
0x050A	0xF057C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x050E	0xF060C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0512	0xDE14      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0514	0x903B      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0516	0x6A5B      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0518	0x505B      	MOVF        Lcd_Out_i_L0, 0 
0x051A	0x2459      	ADDWF       FARG_Lcd_Out_text, 0 
0x051C	0x6EE9      	MOVWF       FSR0L 
0x051E	0x0E00      	MOVLW       0
0x0520	0x205A      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0522	0x6EEA      	MOVWF       FSR0H 
0x0524	0x52EE      	MOVF        POSTINC0, 1 
0x0526	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0528	0x505B      	MOVF        Lcd_Out_i_L0, 0 
0x052A	0x2459      	ADDWF       FARG_Lcd_Out_text, 0 
0x052C	0x6EE9      	MOVWF       FSR0L 
0x052E	0x0E00      	MOVLW       0
0x0530	0x205A      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0532	0x6EEA      	MOVWF       FSR0H 
0x0534	0xF05FCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0538	0xDF15      	RCALL       _Lcd_Chr_CP
0x053A	0x2A5B      	INCF        Lcd_Out_i_L0, 1 
0x053C	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x053E	0x803B      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0540	0x0012      	RETURN      0
; end of _Lcd_Out
_main:
0x0542	0x0E44      	MOVLW       68
0x0544	0x6E19      	MOVWF       ?lstr1_Master 
0x0546	0x0E69      	MOVLW       105
0x0548	0x6E1A      	MOVWF       26 
0x054A	0x0E73      	MOVLW       115
0x054C	0x6E1B      	MOVWF       27 
0x054E	0x0E74      	MOVLW       116
0x0550	0x6E1C      	MOVWF       28 
0x0552	0x0E61      	MOVLW       97
0x0554	0x6E1D      	MOVWF       29 
0x0556	0x0E6E      	MOVLW       110
0x0558	0x6E1E      	MOVWF       30 
0x055A	0x0E63      	MOVLW       99
0x055C	0x6E1F      	MOVWF       31 
0x055E	0x0E69      	MOVLW       105
0x0560	0x6E20      	MOVWF       32 
0x0562	0x0E61      	MOVLW       97
0x0564	0x6E21      	MOVWF       33 
0x0566	0x0E3A      	MOVLW       58
0x0568	0x6E22      	MOVWF       34 
0x056A	0x6A23      	CLRF        35 
;Master.c,100 :: 		void main() {
;Master.c,102 :: 		Configuracion();
0x056C	0xDF09      	RCALL       _Configuracion
;Master.c,103 :: 		RC5_bit = 0;                                                   //Establece el Max485 en modo de lectura;
0x056E	0x9A82      	BCF         RC5_bit, BitPos(RC5_bit+0) 
;Master.c,105 :: 		ptrDst = &Dst;
0x0570	0x0E3D      	MOVLW       _Dst
0x0572	0x6E3F      	MOVWF       _ptrDst 
0x0574	0x0E00      	MOVLW       hi_addr(_Dst)
0x0576	0x6E40      	MOVWF       _ptrDst+1 
;Master.c,107 :: 		Ptcn[0]=Hdr;
0x0578	0x0E3A      	MOVLW       58
0x057A	0x6E41      	MOVWF       _Ptcn 
;Master.c,114 :: 		Bb=0;
0x057C	0x6A43      	CLRF        _Bb 
;Master.c,115 :: 		Dst=0;
0x057E	0x6A3D      	CLRF        _Dst 
0x0580	0x6A3E      	CLRF        _Dst+1 
;Master.c,117 :: 		while (1){
L_main12:
;Master.c,119 :: 		if ((RA0_bit==1)&&(Bb==0)){
0x0582	0xA080      	BTFSS       RA0_bit, BitPos(RA0_bit+0) 
0x0584	0xD026      	BRA         L_main16
0x0586	0x5043      	MOVF        _Bb, 0 
0x0588	0x0A00      	XORLW       0
0x058A	0xE123      	BNZ         L_main16
L__main40:
;Master.c,120 :: 		Bb = 1;
0x058C	0x0E01      	MOVLW       1
0x058E	0x6E43      	MOVWF       _Bb 
;Master.c,121 :: 		RC5_bit = 1;                                         //Establece el Max485 en modo de escritura
0x0590	0x8A82      	BSF         RC5_bit, BitPos(RC5_bit+0) 
;Master.c,122 :: 		for (ip=0;ip<Psize;ip++){
0x0592	0x6A42      	CLRF        _ip 
L_main17:
0x0594	0x0E80      	MOVLW       128
0x0596	0x1842      	XORWF       _ip, 0 
0x0598	0x6E00      	MOVWF       R0 
0x059A	0x0E80      	MOVLW       128
0x059C	0x0A01      	XORLW       1
0x059E	0x5C00      	SUBWF       R0, 0 
0x05A0	0xE20F      	BC          L_main18
;Master.c,123 :: 		UART1_WRITE(Ptcn[ip]);                          //Manda por Uart la trama de peticion
0x05A2	0x0E41      	MOVLW       _Ptcn
0x05A4	0x6EE9      	MOVWF       FSR0L 
0x05A6	0x0E00      	MOVLW       hi_addr(_Ptcn)
0x05A8	0x6EEA      	MOVWF       FSR0H 
0x05AA	0x5042      	MOVF        _ip, 0 
0x05AC	0x26E9      	ADDWF       FSR0L, 1 
0x05AE	0x0E00      	MOVLW       0
0x05B0	0xBE42      	BTFSC       _ip, 7 
0x05B2	0x0EFF      	MOVLW       255
0x05B4	0x22EA      	ADDWFC      FSR0H, 1 
0x05B6	0xF057CFEE  	MOVFF       POSTINC0, FARG_UART1_Write_data_
0x05BA	0xDF0C      	RCALL       _UART1_Write
;Master.c,122 :: 		for (ip=0;ip<Psize;ip++){
0x05BC	0x2A42      	INCF        _ip, 1 
;Master.c,124 :: 		}
0x05BE	0xD7EA      	BRA         L_main17
L_main18:
;Master.c,125 :: 		Dst = 0;
0x05C0	0x6A3D      	CLRF        _Dst 
0x05C2	0x6A3E      	CLRF        _Dst+1 
;Master.c,126 :: 		while(UART_Tx_Idle()==0);                            //Espera hasta que se haya terminado de enviar todo el dato por UART antes de continuar
L_main20:
0x05C4	0xDF7B      	RCALL       _UART_Tx_Idle
0x05C6	0x5000      	MOVF        R0, 0 
0x05C8	0x0A00      	XORLW       0
0x05CA	0xE101      	BNZ         L_main21
0x05CC	0xD7FB      	BRA         L_main20
L_main21:
;Master.c,127 :: 		RC5_bit = 0;                                         //Establece el Max485 en modo de lectura;
0x05CE	0x9A82      	BCF         RC5_bit, BitPos(RC5_bit+0) 
;Master.c,128 :: 		} else if (RA0_bit==0){
0x05D0	0xD002      	BRA         L_main22
L_main16:
0x05D2	0xA080      	BTFSS       RA0_bit, BitPos(RA0_bit+0) 
;Master.c,129 :: 		Bb = 0;
0x05D4	0x6A43      	CLRF        _Bb 
;Master.c,130 :: 		}
L_main23:
L_main22:
;Master.c,132 :: 		if (BanP==1){
0x05D6	0x503C      	MOVF        _BanP, 0 
0x05D8	0x0A01      	XORLW       1
0x05DA	0xE141      	BNZ         L_main24
;Master.c,133 :: 		if ((Rspt[1]==Id)&&(Rspt[Rsize-1]==End)){
0x05DC	0x5026      	MOVF        _Rspt+1, 0 
0x05DE	0x0A01      	XORLW       1
0x05E0	0xE128      	BNZ         L_main27
0x05E2	0x502A      	MOVF        _Rspt+5, 0 
0x05E4	0x0A0D      	XORLW       13
0x05E6	0xE125      	BNZ         L_main27
L__main39:
;Master.c,135 :: 		*ptrDst = Rspt[4];
0x05E8	0xFFE1C03F  	MOVFF       _ptrDst, FSR1L
0x05EC	0xFFE2C040  	MOVFF       _ptrDst+1, FSR1H
0x05F0	0xFFE6C029  	MOVFF       _Rspt+4, POSTINC1
;Master.c,136 :: 		*(ptrDst+1) = Rspt[3];
0x05F4	0x0E01      	MOVLW       1
0x05F6	0x243F      	ADDWF       _ptrDst, 0 
0x05F8	0x6EE1      	MOVWF       FSR1L 
0x05FA	0x0E00      	MOVLW       0
0x05FC	0x2040      	ADDWFC      _ptrDst+1, 0 
0x05FE	0x6EE2      	MOVWF       FSR1H 
0x0600	0xFFE6C028  	MOVFF       _Rspt+3, POSTINC1
;Master.c,138 :: 		for (irr=0;irr<(Rsize-1);irr++){
0x0604	0x6A24      	CLRF        _irr 
L_main28:
0x0606	0x0E80      	MOVLW       128
0x0608	0x1824      	XORWF       _irr, 0 
0x060A	0x6E00      	MOVWF       R0 
0x060C	0x0E80      	MOVLW       128
0x060E	0x0A05      	XORLW       5
0x0610	0x5C00      	SUBWF       R0, 0 
0x0612	0xE20D      	BC          L_main29
;Master.c,139 :: 		Rspt[irr]=0;;                            //Limpia los bits de datos de la trama de respuesta
0x0614	0x0E25      	MOVLW       _Rspt
0x0616	0x6EE1      	MOVWF       FSR1L 
0x0618	0x0E00      	MOVLW       hi_addr(_Rspt)
0x061A	0x6EE2      	MOVWF       FSR1H 
0x061C	0x5024      	MOVF        _irr, 0 
0x061E	0x26E1      	ADDWF       FSR1L, 1 
0x0620	0x0E00      	MOVLW       0
0x0622	0xBE24      	BTFSC       _irr, 7 
0x0624	0x0EFF      	MOVLW       255
0x0626	0x22E2      	ADDWFC      FSR1H, 1 
0x0628	0x6AE6      	CLRF        POSTINC1 
;Master.c,138 :: 		for (irr=0;irr<(Rsize-1);irr++){
0x062A	0x2A24      	INCF        _irr, 1 
;Master.c,140 :: 		}
0x062C	0xD7EC      	BRA         L_main28
L_main29:
;Master.c,141 :: 		BanP = 0;
0x062E	0x6A3C      	CLRF        _BanP 
;Master.c,144 :: 		} else {
0x0630	0xD016      	BRA         L_main31
L_main27:
;Master.c,146 :: 		for (irr=0;irr<(Rsize-1);irr++){
0x0632	0x6A24      	CLRF        _irr 
L_main32:
0x0634	0x0E80      	MOVLW       128
0x0636	0x1824      	XORWF       _irr, 0 
0x0638	0x6E00      	MOVWF       R0 
0x063A	0x0E80      	MOVLW       128
0x063C	0x0A05      	XORLW       5
0x063E	0x5C00      	SUBWF       R0, 0 
0x0640	0xE20D      	BC          L_main33
;Master.c,147 :: 		Rspt[irr]=0;;                            //Limpia los bits de datos de la trama de respuesta
0x0642	0x0E25      	MOVLW       _Rspt
0x0644	0x6EE1      	MOVWF       FSR1L 
0x0646	0x0E00      	MOVLW       hi_addr(_Rspt)
0x0648	0x6EE2      	MOVWF       FSR1H 
0x064A	0x5024      	MOVF        _irr, 0 
0x064C	0x26E1      	ADDWF       FSR1L, 1 
0x064E	0x0E00      	MOVLW       0
0x0650	0xBE24      	BTFSC       _irr, 7 
0x0652	0x0EFF      	MOVLW       255
0x0654	0x22E2      	ADDWFC      FSR1H, 1 
0x0656	0x6AE6      	CLRF        POSTINC1 
;Master.c,146 :: 		for (irr=0;irr<(Rsize-1);irr++){
0x0658	0x2A24      	INCF        _irr, 1 
;Master.c,148 :: 		}
0x065A	0xD7EC      	BRA         L_main32
L_main33:
;Master.c,149 :: 		BanP = 0;
0x065C	0x6A3C      	CLRF        _BanP 
;Master.c,151 :: 		}
L_main31:
;Master.c,152 :: 		}
L_main24:
;Master.c,155 :: 		IntToStr(Dst,txt1);
0x065E	0xF057C03D  	MOVFF       _Dst, FARG_IntToStr_input
0x0662	0xF058C03E  	MOVFF       _Dst+1, FARG_IntToStr_input+1
0x0666	0x0E2B      	MOVLW       _txt1
0x0668	0x6E59      	MOVWF       FARG_IntToStr_output 
0x066A	0x0E00      	MOVLW       hi_addr(_txt1)
0x066C	0x6E5A      	MOVWF       FARG_IntToStr_output+1 
0x066E	0xDEB9      	RCALL       _IntToStr
;Master.c,157 :: 		Lcd_Out(1,1,"Distancia:");
0x0670	0x0E01      	MOVLW       1
0x0672	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x0674	0x0E01      	MOVLW       1
0x0676	0x6E58      	MOVWF       FARG_Lcd_Out_column 
0x0678	0x0E19      	MOVLW       ?lstr1_Master
0x067A	0x6E59      	MOVWF       FARG_Lcd_Out_text 
0x067C	0x0E00      	MOVLW       hi_addr(?lstr1_Master)
0x067E	0x6E5A      	MOVWF       FARG_Lcd_Out_text+1 
0x0680	0xDF23      	RCALL       _Lcd_Out
;Master.c,158 :: 		Lcd_Out(2,1,txt1);
0x0682	0x0E02      	MOVLW       2
0x0684	0x6E57      	MOVWF       FARG_Lcd_Out_row 
0x0686	0x0E01      	MOVLW       1
0x0688	0x6E58      	MOVWF       FARG_Lcd_Out_column 
0x068A	0x0E2B      	MOVLW       _txt1
0x068C	0x6E59      	MOVWF       FARG_Lcd_Out_text 
0x068E	0x0E00      	MOVLW       hi_addr(_txt1)
0x0690	0x6E5A      	MOVWF       FARG_Lcd_Out_text+1 
0x0692	0xDF1A      	RCALL       _Lcd_Out
;Master.c,160 :: 		Delay_ms(20);
0x0694	0x0E82      	MOVLW       130
0x0696	0x6E0C      	MOVWF       R12, 0
0x0698	0x0EDD      	MOVLW       221
0x069A	0x6E0D      	MOVWF       R13, 0
L_main35:
0x069C	0x2E0D      	DECFSZ      R13, 1, 0
0x069E	0xD7FE      	BRA         L_main35
0x06A0	0x2E0C      	DECFSZ      R12, 1, 0
0x06A2	0xD7FC      	BRA         L_main35
0x06A4	0x0000      	NOP
0x06A6	0x0000      	NOP
;Master.c,162 :: 		}
0x06A8	0xD76C      	BRA         L_main12
;Master.c,163 :: 		}
L_end_main:
0x06AA	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [152]    _interrupt
0x00A0      [12]    _Delay_1us
0x00AC      [22]    _Delay_5500us
0x00C2      [10]    _Delay_50us
0x00CC      [10]    _UART2_Data_Ready
0x00D6      [10]    _UART2_Tx_Idle
0x00E0      [18]    _UART2_Read
0x00F2      [10]    _UART1_Data_Ready
0x00FC      [10]    _UART1_Tx_Idle
0x0106      [54]    _Div_16X16_U
0x013C     [126]    _Lcd_Cmd
0x01BA      [18]    _UART1_Read
0x01CC     [148]    _WordToStr
0x0260     [150]    _Lcd_Init
0x02F6      [86]    _UART1_Init
0x034C      [24]    _____DoIFC
0x0364      [12]    _Lcd_Chr_CP
0x0370      [16]    ___CC2DW
0x0380      [84]    _Configuracion
0x03D4      [14]    _UART1_Write
0x03E2     [218]    _IntToStr
0x04BC      [12]    _UART_Tx_Idle
0x04C8     [122]    _Lcd_Out
0x0542     [362]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART2_Init_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    UART2_Read___tmp_UART2_Read_L0
0x0001       [1]    R1
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [1]    R5
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0019      [11]    ?lstr1_Master
0x0024       [1]    _irr
0x0025       [6]    _Rspt
0x002B      [16]    _txt1
0x003B       [0]    __Lib_Lcd_cmd_status
0x003C       [1]    _BanP
0x003D       [2]    _Dst
0x003F       [2]    _ptrDst
0x0041       [1]    _Ptcn
0x0042       [1]    _ip
0x0043       [1]    _Bb
0x0044       [4]    _UART_Rdy_Ptr
0x0048       [4]    _UART_Rd_Ptr
0x004C       [1]    _Dato
0x004D       [1]    _BanT
0x004E       [1]    _ir
0x004F       [4]    _UART_Wr_Ptr
0x0053       [4]    _UART_Tx_Idle_Ptr
0x0057       [1]    FARG_Lcd_Out_row
0x0057       [2]    FARG_IntToStr_input
0x0057       [1]    FARG_UART1_Write_data_
0x0058       [1]    FARG_Lcd_Out_column
0x0059       [2]    FARG_Lcd_Out_text
0x0059       [2]    FARG_IntToStr_output
0x005B       [2]    IntToStr_i_L0
0x005B       [1]    Lcd_Out_i_L0
0x005D       [2]    IntToStr_negative_L0
0x005F       [1]    WordToStr_len_L0
0x005F       [1]    FARG_Lcd_Chr_CP_out_char
0x0060       [1]    FARG_Lcd_Cmd_out_char
0x0061       [2]    IntToStr_inword_L0
0x0063       [2]    FARG_WordToStr_input
0x0065       [2]    FARG_WordToStr_output
0x0067       [2]    FLOC__WordToStr
0x0F38       [1]    ANSELA
0x0F39       [1]    ANSELB
0x0F3A       [1]    ANSELC
0x0F71       [1]    RCSTA2
0x0F72       [1]    TXSTA2
0x0F74       [1]    RCREG2
0x0F80       [0]    RA0_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D5
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_RS
0x0F81       [0]    LCD_EN
0x0F81       [0]    LCD_D6
0x0F82       [0]    RC5_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA0_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC6_bit
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0FA4       [0]    RC2IF_bit
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
