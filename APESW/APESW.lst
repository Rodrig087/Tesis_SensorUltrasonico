;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/10/2016 10:33:55
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF005EF3C  	GOTO        2680
_Interrupt:
;APESW.c,56 :: 		void Interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;APESW.c,59 :: 		if (TMR2IF_bit){                             //Verifica si ocurrio una interrupcion por desbordamiento del TMR2.
0x000C	0xF016CFE1  	MOVFF       FSR1L, 22
0x0010	0xF017CFE2  	MOVFF       FSR1H, 23
0x0014	0xA29E      	BTFSS       TMR2IF_bit, BitPos(TMR2IF_bit+0) 
0x0016	0xD044      	BRA         L_Interrupt0
;APESW.c,61 :: 		RD1_bit = ~RD1_bit;                       //Genera un tren de pulsos de 40KHz en el pin RD1
0x0018	0x7283      	BTG         RD1_bit, BitPos(RD1_bit+0) 
;APESW.c,63 :: 		if (contw<=65){                           //Controla el numero total de pulsos de exitacion del transductor ultrasonico. (43)
0x001A	0x0E00      	MOVLW       0
0x001C	0x6E00      	MOVWF       R0 
0x001E	0x5046      	MOVF        _contw+1, 0 
0x0020	0x5C00      	SUBWF       R0, 0 
0x0022	0xE102      	BNZ         L__Interrupt20
0x0024	0x5045      	MOVF        _contw, 0 
0x0026	0x0841      	SUBLW       65
L__Interrupt20:
0x0028	0xE327      	BNC         L_Interrupt1
;APESW.c,64 :: 		BS = ~BS;                              //Variable auxiliar para establecer el cambio de estado en el bit RD0.
0x002A	0x1C50      	COMF        _BS, 0 
0x002C	0x6E00      	MOVWF       R0 
0x002E	0xF050C000  	MOVFF       R0, _BS
;APESW.c,65 :: 		RD0_bit = BS;
0x0032	0xB000      	BTFSC       R0, 0 
0x0034	0xD002      	BRA         L__Interrupt21
0x0036	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
0x0038	0xD001      	BRA         L__Interrupt22
L__Interrupt21:
0x003A	0x8083      	BSF         RD0_bit, BitPos(RD0_bit+0) 
L__Interrupt22:
;APESW.c,67 :: 		if (contw==25){                        //Se empieza a contar el tiempo desde el primer pulso en alto despues del cambio de fase. 25
0x003C	0x0E00      	MOVLW       0
0x003E	0x1846      	XORWF       _contw+1, 0 
0x0040	0xE102      	BNZ         L__Interrupt23
0x0042	0x0E19      	MOVLW       25
0x0044	0x1845      	XORWF       _contw, 0 
L__Interrupt23:
0x0046	0xE103      	BNZ         L_Interrupt2
;APESW.c,68 :: 		TMR1ON_bit=1;                       //Enciende el TMR1.
0x0048	0x80CD      	BSF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;APESW.c,69 :: 		TMR1L=0X00;                         //Limpia los bits menos significativos del TMR1.
0x004A	0x6ACE      	CLRF        TMR1L 
;APESW.c,70 :: 		TMR1H=0X00;                         //Limpia los bits mas significativos del TMR1.
0x004C	0x6ACF      	CLRF        TMR1H 
;APESW.c,71 :: 		}
L_Interrupt2:
;APESW.c,72 :: 		if ((contw==22)||(contw==44)||(contw==66)){                        //Cambia el valor de la variable auxiliar para producir  (22)
0x004E	0x0E00      	MOVLW       0
0x0050	0x1846      	XORWF       _contw+1, 0 
0x0052	0xE102      	BNZ         L__Interrupt24
0x0054	0x0E16      	MOVLW       22
0x0056	0x1845      	XORWF       _contw, 0 
L__Interrupt24:
0x0058	0xE00D      	BZ          L__Interrupt17
0x005A	0x0E00      	MOVLW       0
0x005C	0x1846      	XORWF       _contw+1, 0 
0x005E	0xE102      	BNZ         L__Interrupt25
0x0060	0x0E2C      	MOVLW       44
0x0062	0x1845      	XORWF       _contw, 0 
L__Interrupt25:
0x0064	0xE007      	BZ          L__Interrupt17
0x0066	0x0E00      	MOVLW       0
0x0068	0x1846      	XORWF       _contw+1, 0 
0x006A	0xE102      	BNZ         L__Interrupt26
0x006C	0x0E42      	MOVLW       66
0x006E	0x1845      	XORWF       _contw, 0 
L__Interrupt26:
0x0070	0xE001      	BZ          L__Interrupt17
0x0072	0xD001      	BRA         L_Interrupt5
L__Interrupt17:
;APESW.c,73 :: 		BS = 0;                          //el cambio de fase en la siguiente iteracion.
0x0074	0x6A50      	CLRF        _BS 
;APESW.c,74 :: 		}
L_Interrupt5:
;APESW.c,76 :: 		} else {
0x0076	0xD003      	BRA         L_Interrupt6
L_Interrupt1:
;APESW.c,77 :: 		RD0_bit = 0;                           //Pone a cero despues de enviar todos los pulsos de exitacion.
0x0078	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
;APESW.c,78 :: 		FP = 1;                                //Habilita la bandera de deteccion de fase para permitir la deteccion una vez que se hayan terminado de enviar todos los pulsos de exitacion
0x007A	0x0E01      	MOVLW       1
0x007C	0x6E4F      	MOVWF       _FP 
;APESW.c,79 :: 		}
L_Interrupt6:
;APESW.c,81 :: 		if (contw>=800){                          //Limpia el contador cada 800 interrupciones (10ms) para el reenvio de los pulsos
0x007E	0x0E03      	MOVLW       3
0x0080	0x5C46      	SUBWF       _contw+1, 0 
0x0082	0xE102      	BNZ         L__Interrupt27
0x0084	0x0E20      	MOVLW       32
0x0086	0x5C45      	SUBWF       _contw, 0 
L__Interrupt27:
0x0088	0xE308      	BNC         L_Interrupt7
;APESW.c,82 :: 		contw = 0;                             //de exitacion del transductor ultrasonico.
0x008A	0x6A45      	CLRF        _contw 
0x008C	0x6A46      	CLRF        _contw+1 
;APESW.c,83 :: 		T1=0;
0x008E	0x6A4D      	CLRF        _T1 
0x0090	0x6A4E      	CLRF        _T1+1 
;APESW.c,84 :: 		T2=0;
0x0092	0x6A43      	CLRF        _T2 
0x0094	0x6A44      	CLRF        _T2+1 
;APESW.c,85 :: 		DT=0;
0x0096	0x6A52      	CLRF        _DT 
0x0098	0x6A53      	CLRF        _DT+1 
;APESW.c,86 :: 		}
L_Interrupt7:
;APESW.c,88 :: 		contw++;                                  //Aumenta el contador en una unidad.
0x009A	0x4A45      	INFSNZ      _contw, 1 
0x009C	0x2A46      	INCF        _contw+1, 1 
;APESW.c,89 :: 		TMR2IF_bit = 0;                           //Limpia la bandera de interrupcion de Timer2
0x009E	0x929E      	BCF         TMR2IF_bit, BitPos(TMR2IF_bit+0) 
;APESW.c,90 :: 		}
L_Interrupt0:
;APESW.c,94 :: 		if (INTCON.INT0IF == 1){                     //Verifica si ocurrio una interrupcion externa en INT0.
0x00A0	0xA2F2      	BTFSS       INTCON, 1 
0x00A2	0xD03C      	BRA         L_Interrupt8
;APESW.c,95 :: 		*(punT1) = TMR1L;                         //Carga el valor actual de TMR1L en los 8 bits menos significativos de la variable contT de tipo entero.
0x00A4	0xFFE1C049  	MOVFF       _punT1, FSR1L
0x00A8	0xFFE2C04A  	MOVFF       _punT1+1, FSR1H
0x00AC	0xFFE6CFCE  	MOVFF       TMR1L, POSTINC1
;APESW.c,96 :: 		*(punT1+1) = TMR1H;                       //Carga el valor actual de TMR1H en los 8 bits mas significativos de la variable  contT de tipo entero.
0x00B0	0x0E01      	MOVLW       1
0x00B2	0x2449      	ADDWF       _punT1, 0 
0x00B4	0x6EE1      	MOVWF       FSR1L 
0x00B6	0x0E00      	MOVLW       0
0x00B8	0x204A      	ADDWFC      _punT1+1, 0 
0x00BA	0x6EE2      	MOVWF       FSR1H 
0x00BC	0xFFE6CFCF  	MOVFF       TMR1H, POSTINC1
;APESW.c,97 :: 		T2 = contw;                               //Carga el valor actual del contador contw en la variable T2.
0x00C0	0xF043C045  	MOVFF       _contw, _T2
0x00C4	0xF044C046  	MOVFF       _contw+1, _T2+1
;APESW.c,98 :: 		DT = T2-T1;                               //Halla la diferencia entre los valores actual y anterior del contador contw.
0x00C8	0x504D      	MOVF        _T1, 0 
0x00CA	0x5C45      	SUBWF       _contw, 0 
0x00CC	0x6E52      	MOVWF       _DT 
0x00CE	0x504E      	MOVF        _T1+1, 0 
0x00D0	0x5846      	SUBWFB      _contw+1, 0 
0x00D2	0x6E53      	MOVWF       _DT+1 
;APESW.c,100 :: 		if ((FP==1)&&(T2>43)&&(DT!=T2)&&(DT!=2)){          //Detecta el cambio de fase segun el resultado de la diferencia.
0x00D4	0x504F      	MOVF        _FP, 0 
0x00D6	0x0A01      	XORLW       1
0x00D8	0xE11C      	BNZ         L_Interrupt11
0x00DA	0x0E00      	MOVLW       0
0x00DC	0x6E00      	MOVWF       R0 
0x00DE	0x5044      	MOVF        _T2+1, 0 
0x00E0	0x5C00      	SUBWF       R0, 0 
0x00E2	0xE102      	BNZ         L__Interrupt28
0x00E4	0x5043      	MOVF        _T2, 0 
0x00E6	0x082B      	SUBLW       43
L__Interrupt28:
0x00E8	0xE214      	BC          L_Interrupt11
0x00EA	0x5053      	MOVF        _DT+1, 0 
0x00EC	0x1844      	XORWF       _T2+1, 0 
0x00EE	0xE102      	BNZ         L__Interrupt29
0x00F0	0x5043      	MOVF        _T2, 0 
0x00F2	0x1852      	XORWF       _DT, 0 
L__Interrupt29:
0x00F4	0xE00E      	BZ          L_Interrupt11
0x00F6	0x0E00      	MOVLW       0
0x00F8	0x1853      	XORWF       _DT+1, 0 
0x00FA	0xE102      	BNZ         L__Interrupt30
0x00FC	0x0E02      	MOVLW       2
0x00FE	0x1852      	XORWF       _DT, 0 
L__Interrupt30:
0x0100	0xE008      	BZ          L_Interrupt11
L__Interrupt16:
;APESW.c,101 :: 		contT1 = contT;                        //Carga el contenido de la variable contT en la variable contT1.
0x0102	0xF04BC047  	MOVFF       _contT, _contT1
0x0106	0xF04CC048  	MOVFF       _contT+1, _contT1+1
;APESW.c,102 :: 		TMR1ON_bit=0;                          //Apaga el TMR1.
0x010A	0x90CD      	BCF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;APESW.c,103 :: 		contT = 0;
0x010C	0x6A47      	CLRF        _contT 
0x010E	0x6A48      	CLRF        _contT+1 
;APESW.c,104 :: 		FP = 0;                             //Limpia el contenido de la variable contT.
0x0110	0x6A4F      	CLRF        _FP 
;APESW.c,105 :: 		}
L_Interrupt11:
;APESW.c,107 :: 		T1 = contw;                               //Actualiza T1 con el valor actual del contador contw.
0x0112	0xF04DC045  	MOVFF       _contw, _T1
0x0116	0xF04EC046  	MOVFF       _contw+1, _T1+1
;APESW.c,108 :: 		INTCON.INT0IF = 0;                        //Limpia la bandera de interrupcion de INT0.
0x011A	0x92F2      	BCF         INTCON, 1 
;APESW.c,109 :: 		}
L_Interrupt8:
;APESW.c,111 :: 		if (TMR1IF_bit){
0x011C	0xB09E      	BTFSC       TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;APESW.c,112 :: 		TMR1IF_bit=0;                             //Limpia la bandera de interrupcion de Timer1.
0x011E	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;APESW.c,113 :: 		}
L_Interrupt12:
;APESW.c,114 :: 		}
L_end_Interrupt:
L__Interrupt19:
0x0120	0xF000C015  	MOVFF       21, R0
0x0124	0xFFE1C016  	MOVFF       22, FSR1L
0x0128	0xFFE2C017  	MOVFF       23, FSR1H
0x012C	0x0011      	RETFIE      1
; end of _Interrupt
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x012E	0x0000      	NOP
0x0130	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0132	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0134	0x0E0F      	MOVLW       15
0x0136	0x6E0C      	MOVWF       R12, 0
0x0138	0x0E47      	MOVLW       71
0x013A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x013C	0x2E0D      	DECFSZ      R13, 1, 0
0x013E	0xD7FE      	BRA         L_Delay_5500us5
0x0140	0x2E0C      	DECFSZ      R12, 1, 0
0x0142	0xD7FC      	BRA         L_Delay_5500us5
0x0144	0x0000      	NOP
0x0146	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0148	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x014A	0x0E21      	MOVLW       33
0x014C	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x014E	0x2E0D      	DECFSZ      R13, 1, 0
0x0150	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0152	0x0012      	RETURN      0
; end of _Delay_50us
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0154	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0156	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0158	0xF000EFB5  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x015C	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x015E	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0160	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x0162	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0164	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0166	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0168	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x016A	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x016C	0x0012      	RETURN      0
; end of _SETFUN32
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x016E	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0170	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0172	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x0174	0x0012      	RETURN      0
; end of _FIXSIGN32
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x0176	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x0178	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x017A	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x017C	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x017E	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x0180	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x0182	0x0012      	RETURN      0
; end of _RES032
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x0184	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x0186	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x0188	0xF000EFCC  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x018C	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x018E	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x0190	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x0192	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x0194	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x0196	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x0198	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x019A	0x0012      	RETURN      0
; end of _SETFOV32
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x019C	0x0100      	MOVLB       0
0x019E	0xBF66      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x01A0	0xD002      	BRA         L__Lcd_Cmd21
0x01A2	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x01A4	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x01A6	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x01A8	0xBD66      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x01AA	0xD002      	BRA         L__Lcd_Cmd23
0x01AC	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x01AE	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x01B0	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x01B2	0xBB66      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x01B4	0xD002      	BRA         L__Lcd_Cmd25
0x01B6	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x01B8	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x01BA	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x01BC	0xB966      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x01BE	0xD002      	BRA         L__Lcd_Cmd27
0x01C0	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x01C2	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x01C4	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x01C6	0xB051      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01C8	0xD002      	BRA         L__Lcd_Cmd29
0x01CA	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01CC	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x01CE	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x01D0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x01D2	0xDFAD      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x01D4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x01D6	0xB766      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x01D8	0xD002      	BRA         L__Lcd_Cmd31
0x01DA	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x01DC	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x01DE	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x01E0	0xB566      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x01E2	0xD002      	BRA         L__Lcd_Cmd33
0x01E4	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x01E6	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x01E8	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x01EA	0xB366      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x01EC	0xD002      	BRA         L__Lcd_Cmd35
0x01EE	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x01F0	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x01F2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x01F4	0xB166      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x01F6	0xD002      	BRA         L__Lcd_Cmd37
0x01F8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x01FA	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x01FC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x01FE	0xB051      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0200	0xD002      	BRA         L__Lcd_Cmd39
0x0202	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0204	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0206	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0208	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x020A	0xDF91      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x020C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x020E	0xA051      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0210	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0212	0xDF90      	RCALL       _Delay_5500us
0x0214	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0216	0xDF99      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0218	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x021A	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x021C	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x021E	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0220	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0222	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0224	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0226	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0228	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x022A	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x022C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x022E	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0230	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0232	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0234	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x0236	0x0012      	RETURN      0
; end of _Div_8X8_U
_Mul_32x32_FP:
;__Lib_MathDouble.c,1130 :: 		
;__Lib_MathDouble.c,1148 :: 		
0x0238	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1149 :: 		
0x023A	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1151 :: 		
0x023C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1152 :: 		
0x023E	0x6207      	CPFSEQ      R7, 0
;__Lib_MathDouble.c,1153 :: 		
0x0240	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,1154 :: 		
0x0242	0xF001EFA1  	GOTO        MULJPRES032
;__Lib_MathDouble.c,1157 :: 		
0x0246	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1158 :: 		
0x0248	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1159 :: 		
0x024A	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1161 :: 		
0x024C	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1162 :: 		
0x024E	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1163 :: 		
0x0250	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1164 :: 		
0x0252	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1165 :: 		
0x0254	0xF001EF32  	GOTO        MTUN32
;__Lib_MathDouble.c,1167 :: 		
0x0258	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1168 :: 		
0x025A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1169 :: 		
0x025C	0xF001EFA5  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1170 :: 		
0x0260	0xF001EF36  	GOTO        MOK32
;__Lib_MathDouble.c,1172 :: 		
MTUN32:
;__Lib_MathDouble.c,1173 :: 		
0x0264	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1174 :: 		
0x0266	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1175 :: 		
0x0268	0xF001EFA9  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1177 :: 		
MOK32:
;__Lib_MathDouble.c,1178 :: 		
0x026C	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1179 :: 		
0x026E	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1181 :: 		
0x0270	0xF00EC002  	MOVFF       R2, R14
;__Lib_MathDouble.c,1182 :: 		
0x0274	0xF00BC001  	MOVFF       R1, R11
;__Lib_MathDouble.c,1183 :: 		
0x0278	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1185 :: 		
0x027C	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1186 :: 		
0x027E	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1187 :: 		
0x0280	0xF00CCFF4  	MOVFF       PRODH, R12
;__Lib_MathDouble.c,1189 :: 		
0x0284	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1190 :: 		
0x0286	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1191 :: 		
0x0288	0xF000CFF4  	MOVFF       PRODH, R0
;__Lib_MathDouble.c,1192 :: 		
0x028C	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_MathDouble.c,1194 :: 		
0x0290	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1195 :: 		
0x0292	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1196 :: 		
0x0294	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1197 :: 		
0x0296	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1198 :: 		
0x0298	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1199 :: 		
0x029A	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1200 :: 		
0x029C	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1202 :: 		
0x029E	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1203 :: 		
0x02A0	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1204 :: 		
0x02A2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1205 :: 		
0x02A4	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1206 :: 		
0x02A6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1207 :: 		
0x02A8	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1208 :: 		
0x02AA	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1209 :: 		
0x02AC	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1211 :: 		
0x02AE	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1212 :: 		
0x02B0	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1213 :: 		
0x02B2	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1214 :: 		
0x02B4	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1215 :: 		
0x02B6	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1216 :: 		
0x02B8	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1217 :: 		
0x02BA	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1218 :: 		
0x02BC	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1219 :: 		
0x02BE	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1220 :: 		
0x02C0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1221 :: 		
0x02C2	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1222 :: 		
0x02C4	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1223 :: 		
0x02C6	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1224 :: 		
0x02C8	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1225 :: 		
0x02CA	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1227 :: 		
0x02CC	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1228 :: 		
0x02CE	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1229 :: 		
0x02D0	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1230 :: 		
0x02D2	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1231 :: 		
0x02D4	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1232 :: 		
0x02D6	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1233 :: 		
0x02D8	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1234 :: 		
0x02DA	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1235 :: 		
0x02DC	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1236 :: 		
0x02DE	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1238 :: 		
0x02E0	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,1239 :: 		
0x02E2	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1240 :: 		
0x02E4	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1241 :: 		
0x02E6	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1242 :: 		
0x02E8	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1243 :: 		
0x02EA	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1244 :: 		
0x02EC	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1245 :: 		
0x02EE	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1247 :: 		
0x02F0	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,1248 :: 		
0x02F2	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1249 :: 		
0x02F4	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1250 :: 		
0x02F6	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1251 :: 		
0x02F8	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1252 :: 		
0x02FA	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1254 :: 		
0x02FC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1255 :: 		
0x02FE	0xF001EF89  	GOTO        MROUND32
;__Lib_MathDouble.c,1256 :: 		
0x0302	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1257 :: 		
0x0304	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1258 :: 		
0x0306	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1259 :: 		
0x0308	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1260 :: 		
0x030A	0x0603      	DECF        R3, 1, 0
;__Lib_MathDouble.c,1261 :: 		
0x030C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1262 :: 		
0x030E	0xF001EFA9  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1264 :: 		
MROUND32:
;__Lib_MathDouble.c,1267 :: 		
0x0312	0xF001EF9C  	GOTO        MUL32OK
;__Lib_MathDouble.c,1268 :: 		
0x0316	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,1269 :: 		
0x0318	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,1270 :: 		
0x031A	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,1271 :: 		
0x031C	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,1272 :: 		
0x031E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1273 :: 		
0x0320	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1274 :: 		
0x0322	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1275 :: 		
0x0324	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1277 :: 		
0x0326	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1278 :: 		
0x0328	0xF001EF9C  	GOTO        MUL32OK
;__Lib_MathDouble.c,1279 :: 		
0x032C	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1280 :: 		
0x032E	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1281 :: 		
0x0330	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1282 :: 		
0x0332	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,1283 :: 		
0x0334	0xF001EFA5  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1285 :: 		
MUL32OK:
;__Lib_MathDouble.c,1286 :: 		
0x0338	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1287 :: 		
0x033A	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,1289 :: 		
0x033C	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1290 :: 		
0x033E	0xF001EFAB  	GOTO        MULEEE
;__Lib_MathDouble.c,1291 :: 		
MULJPRES032:
;__Lib_MathDouble.c,1292 :: 		
0x0342	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1295 :: 		
0x0344	0xDF18      	RCALL       _RES032
;__Lib_MathDouble.c,1297 :: 		
0x0346	0xF001EFAB  	GOTO        MULEEE
;__Lib_MathDouble.c,1298 :: 		
MULJPSETFOV32:
;__Lib_MathDouble.c,1299 :: 		
0x034A	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1302 :: 		
0x034C	0xDF1B      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1304 :: 		
0x034E	0xF001EFAB  	GOTO        MULEEE
;__Lib_MathDouble.c,1305 :: 		
MULJPSETFUN32:
;__Lib_MathDouble.c,1306 :: 		
0x0352	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1309 :: 		
0x0354	0xDEFF      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1311 :: 		
MULEEE:
;__Lib_MathDouble.c,1318 :: 		
L_end_Mul_32x32_FP:
0x0356	0x0012      	RETURN      0
; end of _Mul_32x32_FP
_strcpy:
;__Lib_CString.c,133 :: 		
;__Lib_CString.c,136 :: 		
0x0358	0xF004C062  	MOVFF       FARG_strcpy_to, R4
0x035C	0xF005C063  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,137 :: 		
L_strcpy34:
0x0360	0xF002C004  	MOVFF       R4, R2
0x0364	0xF003C005  	MOVFF       R5, R3
0x0368	0x4A04      	INFSNZ      R4, 1 
0x036A	0x2A05      	INCF        R5, 1 
0x036C	0xF000C064  	MOVFF       FARG_strcpy_from, R0
0x0370	0xF001C065  	MOVFF       FARG_strcpy_from+1, R1
0x0374	0x0100      	MOVLB       0
0x0376	0x4B64      	INFSNZ      FARG_strcpy_from, 1, 1
0x0378	0x2B65      	INCF        FARG_strcpy_from+1, 1, 1
0x037A	0xFFE9C000  	MOVFF       R0, FSR0L
0x037E	0xFFEAC001  	MOVFF       R1, FSR0H
0x0382	0xFFE1C002  	MOVFF       R2, FSR1L
0x0386	0xFFE2C003  	MOVFF       R3, FSR1H
0x038A	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x038E	0xFFE9C002  	MOVFF       R2, FSR0L
0x0392	0xFFEAC003  	MOVFF       R3, FSR0H
0x0396	0x52EE      	MOVF        POSTINC0, 1 
0x0398	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,138 :: 		
0x039A	0xD7E2      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,139 :: 		
0x039C	0xF000C062  	MOVFF       FARG_strcpy_to, R0
0x03A0	0xF001C063  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,140 :: 		
L_end_strcpy:
0x03A4	0x0012      	RETURN      0
; end of _strcpy
_Compare_Double:
;__Lib_MathDouble.c,2518 :: 		
;__Lib_MathDouble.c,2529 :: 		
0x03A6	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2530 :: 		
0x03A8	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2531 :: 		
0x03AA	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2532 :: 		
0x03AC	0x800A      	BSF         R10, 0, 0
;__Lib_MathDouble.c,2533 :: 		
0x03AE	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2534 :: 		
0x03B0	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2535 :: 		
0x03B2	0x820A      	BSF         R10, 1, 0
;__Lib_MathDouble.c,2537 :: 		
0x03B4	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2538 :: 		
0x03B6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2539 :: 		
0x03B8	0xF002EF36  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2540 :: 		
0x03BC	0x0A03      	XORLW       3
;__Lib_MathDouble.c,2541 :: 		
0x03BE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2542 :: 		
0x03C0	0xF001EFEF  	GOTO        COMPARE_NOTZERO
;__Lib_MathDouble.c,2544 :: 		
0x03C4	0xB00A      	BTFSC       R10, 0, 0
;__Lib_MathDouble.c,2545 :: 		
0x03C6	0xF001EFEA  	GOTO        COMPARE_XNOTZERO
;__Lib_MathDouble.c,2547 :: 		
0x03CA	0xAE06      	BTFSS       R6, 7, 0
;__Lib_MathDouble.c,2548 :: 		
0x03CC	0xF002EF34  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2549 :: 		
0x03D0	0xF002EF32  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2550 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2551 :: 		
0x03D4	0xAE02      	BTFSS       R2, 7, 0
;__Lib_MathDouble.c,2552 :: 		
0x03D6	0xF002EF32  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2553 :: 		
0x03DA	0xF002EF34  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2555 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2556 :: 		
0x03DE	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2557 :: 		
0x03E0	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2558 :: 		
0x03E2	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,2559 :: 		
0x03E4	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,2561 :: 		
0x03E6	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2562 :: 		
0x03E8	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2563 :: 		
0x03EA	0x9E06      	BCF         R6, 7, 0
;__Lib_MathDouble.c,2565 :: 		
0x03EC	0x180A      	XORWF       R10, 0, 0
;__Lib_MathDouble.c,2566 :: 		
0x03EE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2567 :: 		
0x03F0	0xF002EF00  	GOTO        COMPARE_TESTALL
;__Lib_MathDouble.c,2569 :: 		
0x03F4	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2570 :: 		
0x03F6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2571 :: 		
0x03F8	0xF002EF32  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2572 :: 		
0x03FC	0xF002EF34  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2574 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2575 :: 		
0x0400	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2576 :: 		
0x0402	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2577 :: 		
0x0404	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2578 :: 		
0x0406	0xF002EF0A  	GOTO        COMPARE_C1
;__Lib_MathDouble.c,2579 :: 		
0x040A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2580 :: 		
0x040C	0xF002EF26  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2581 :: 		
0x0410	0xF002EF2C  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2582 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2583 :: 		
0x0414	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2584 :: 		
0x0416	0x5C02      	SUBWF       R2, 0, 0
;__Lib_MathDouble.c,2585 :: 		
0x0418	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2586 :: 		
0x041A	0xF002EF14  	GOTO        COMPARE_C2
;__Lib_MathDouble.c,2587 :: 		
0x041E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2588 :: 		
0x0420	0xF002EF26  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2589 :: 		
0x0424	0xF002EF2C  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2590 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2591 :: 		
0x0428	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,2592 :: 		
0x042A	0x5C01      	SUBWF       R1, 0, 0
;__Lib_MathDouble.c,2593 :: 		
0x042C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2594 :: 		
0x042E	0xF002EF1E  	GOTO        COMPARE_C3
;__Lib_MathDouble.c,2595 :: 		
0x0432	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2596 :: 		
0x0434	0xF002EF26  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2597 :: 		
0x0438	0xF002EF2C  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2598 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2599 :: 		
0x043C	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,2600 :: 		
0x043E	0x5C00      	SUBWF       R0, 0, 0
;__Lib_MathDouble.c,2601 :: 		
0x0440	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2602 :: 		
0x0442	0xF002EF36  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2603 :: 		
0x0446	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,2604 :: 		
0x0448	0xF002EF2C  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2606 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2607 :: 		
0x044C	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2608 :: 		
0x044E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2609 :: 		
0x0450	0xF002EF34  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2610 :: 		
0x0454	0xF002EF32  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2611 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2612 :: 		
0x0458	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2613 :: 		
0x045A	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2614 :: 		
0x045C	0xF002EF32  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2615 :: 		
0x0460	0xF002EF34  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2617 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2620 :: 		
0x0464	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2621 :: 		
0x0466	0x0012      	RETURN      0
;__Lib_MathDouble.c,2622 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2625 :: 		
0x0468	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2626 :: 		
0x046A	0x0012      	RETURN      0
;__Lib_MathDouble.c,2627 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2630 :: 		
0x046C	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2631 :: 		
0x046E	0x84D8      	BSF         STATUS, 2, 0
;__Lib_MathDouble.c,2632 :: 		
0x0470	0x0012      	RETURN      0
;__Lib_MathDouble.c,2634 :: 		
L_end_Compare_Double:
0x0472	0x0012      	RETURN      0
; end of _Compare_Double
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0474	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x0476	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x0478	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x047A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x047C	0xF002EF53  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0480	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0484	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x0488	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x048A	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x048C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x048E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0490	0xF002EF53  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0494	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x0498	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x049A	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x049C	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x049E	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x04A0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x04A2	0xF002EF65  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x04A6	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x04A8	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x04AA	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x04AC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x04AE	0xF002EF6A  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x04B2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x04B4	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x04B6	0xF002EF6F  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x04BA	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x04BC	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x04BE	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x04C0	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x04C2	0xF002EF5A  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x04C6	0xF002EF6A  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x04CA	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x04CC	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x04CE	0xDE53      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x04D0	0xF002EF72  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x04D4	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x04D6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x04D8	0xDE3D      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x04DA	0xF002EF72  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x04DE	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x04E0	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x04E2	0xDE45      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x04E4	0x0012      	RETURN      0
; end of _NRM3232
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x04E6	0x9051      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x04E8	0xF066C062  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x04EC	0xDE57      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x04EE	0x8051      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x04F0	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x04F2	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x04F4	0x0E80      	MOVLW       128
0x04F6	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x04F8	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x04FA	0x0EC0      	MOVLW       192
0x04FC	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x04FE	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0500	0x0E94      	MOVLW       148
0x0502	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x0504	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0506	0x0ED4      	MOVLW       212
0x0508	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x050A	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x050C	0x0E80      	MOVLW       128
0x050E	0x6E54      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x0510	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0512	0x5054      	MOVF        FARG_Lcd_Out_row, 0 
0x0514	0x0A01      	XORLW       1
0x0516	0xE0EE      	BZ          L_Lcd_Out13
0x0518	0x5054      	MOVF        FARG_Lcd_Out_row, 0 
0x051A	0x0A02      	XORLW       2
0x051C	0xE0EE      	BZ          L_Lcd_Out14
0x051E	0x5054      	MOVF        FARG_Lcd_Out_row, 0 
0x0520	0x0A03      	XORLW       3
0x0522	0xE0EE      	BZ          L_Lcd_Out15
0x0524	0x5054      	MOVF        FARG_Lcd_Out_row, 0 
0x0526	0x0A04      	XORLW       4
0x0528	0xE0EE      	BZ          L_Lcd_Out16
0x052A	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x052C	0x0455      	DECF        FARG_Lcd_Out_column, 0 
0x052E	0x6E00      	MOVWF       R0 
0x0530	0x5054      	MOVF        FARG_Lcd_Out_row, 0 
0x0532	0x2600      	ADDWF       R0, 1 
0x0534	0xF054C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0538	0xF066C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x053C	0xDE2F      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x053E	0x9051      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0540	0x6A58      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0542	0x5058      	MOVF        Lcd_Out_i_L0, 0 
0x0544	0x2456      	ADDWF       FARG_Lcd_Out_text, 0 
0x0546	0x6EE9      	MOVWF       FSR0L 
0x0548	0x0E00      	MOVLW       0
0x054A	0x2057      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x054C	0x6EEA      	MOVWF       FSR0H 
0x054E	0x52EE      	MOVF        POSTINC0, 1 
0x0550	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0552	0x5058      	MOVF        Lcd_Out_i_L0, 0 
0x0554	0x2456      	ADDWF       FARG_Lcd_Out_text, 0 
0x0556	0x6EE9      	MOVWF       FSR0L 
0x0558	0x0E00      	MOVLW       0
0x055A	0x2057      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x055C	0x6EEA      	MOVWF       FSR0H 
0x055E	0xF062CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0562	0xDFC1      	RCALL       _Lcd_Chr_CP
0x0564	0x2A58      	INCF        Lcd_Out_i_L0, 1 
0x0566	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0568	0x8051      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x056A	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x056C	0x9695      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x056E	0x9495      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0570	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x0572	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x0574	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0576	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0578	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x057A	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x057C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x057E	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0580	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x0582	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x0584	0xDDD7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0586	0xDDD6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0588	0xDDD5      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x058A	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x058C	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x058E	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0590	0xDDCE      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x0592	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x0594	0xDDCF      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0596	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0598	0xDDCA      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x059A	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x059C	0xDDCB      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x059E	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x05A0	0xDDC6      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x05A2	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x05A4	0xDDC7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x05A6	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x05A8	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x05AA	0xDDC1      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x05AC	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x05AE	0xDDC2      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x05B0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x05B2	0xDDBD      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x05B4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x05B6	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x05B8	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x05BA	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x05BC	0xDDB8      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x05BE	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x05C0	0xDDB9      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x05C2	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x05C4	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x05C6	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x05C8	0xDDB2      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x05CA	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x05CC	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x05CE	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x05D0	0xDDAE      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x05D2	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x05D4	0xDDAF      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x05D6	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x05D8	0xDDAA      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x05DA	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x05DC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x05DE	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x05E0	0xDDA6      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x05E2	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x05E4	0xDDA7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x05E6	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x05E8	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x05EA	0xDDA1      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x05EC	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x05EE	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x05F0	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x05F2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x05F4	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x05F6	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x05F8	0xDD9A      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x05FA	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x05FC	0xDD9B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x05FE	0x8051      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0600	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0602	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0604	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0608	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x060A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x060C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x060E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0610	0x0012      	RETURN      0
; end of ___CC2DW
_word2double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x0612	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x0614	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x0616	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x0618	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x061A	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x061C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x061E	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x0620	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x0622	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x0624	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x0626	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x0628	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x062A	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x062E	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x0632	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x0634	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x0636	0xDF1E      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
L_end_word2double:
0x0638	0x0012      	RETURN      0
; end of _word2double
_FloatToStr:
;__Lib_Conversions.c,472 :: 		
;__Lib_Conversions.c,474 :: 		
0x063A	0x0100      	MOVLB       0
0x063C	0x6B60      	CLRF        FloatToStr_bpoint_L0, 1
0x063E	0x6B61      	CLRF        FloatToStr_dexpon_L0, 1
;__Lib_Conversions.c,479 :: 		
0x0640	0xF05CC054  	MOVFF       FARG_FloatToStr_fnum, FloatToStr_un_L0
0x0644	0xF05DC055  	MOVFF       FARG_FloatToStr_fnum+1, FloatToStr_un_L0+1
0x0648	0xF05EC056  	MOVFF       FARG_FloatToStr_fnum+2, FloatToStr_un_L0+2
0x064C	0xF05FC057  	MOVFF       FARG_FloatToStr_fnum+3, FloatToStr_un_L0+3
;__Lib_Conversions.c,480 :: 		
0x0650	0x505F      	MOVF        FloatToStr_un_L0+3, 0 
0x0652	0x0AFF      	XORLW       255
0x0654	0xE108      	BNZ         L__FloatToStr145
0x0656	0x505E      	MOVF        FloatToStr_un_L0+2, 0 
0x0658	0x0AFF      	XORLW       255
0x065A	0xE105      	BNZ         L__FloatToStr145
0x065C	0x505D      	MOVF        FloatToStr_un_L0+1, 0 
0x065E	0x0AFF      	XORLW       255
0x0660	0xE102      	BNZ         L__FloatToStr145
0x0662	0x505C      	MOVF        FloatToStr_un_L0, 0 
0x0664	0x0AFF      	XORLW       255
L__FloatToStr145:
0x0666	0xE10C      	BNZ         L_FloatToStr76
;__Lib_Conversions.c,481 :: 		
0x0668	0xF062C058  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x066C	0xF063C059  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x0670	0x0E31      	MOVLW       ?lstr1___Lib_Conversions
0x0672	0x6F64      	MOVWF       FARG_strcpy_from, 1
0x0674	0x0E00      	MOVLW       hi_addr(?lstr1___Lib_Conversions)
0x0676	0x6F65      	MOVWF       FARG_strcpy_from+1, 1
0x0678	0xDE6F      	RCALL       _strcpy
;__Lib_Conversions.c,482 :: 		
0x067A	0x0E03      	MOVLW       3
0x067C	0x6E00      	MOVWF       R0 
0x067E	0xD1E6      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,483 :: 		
L_FloatToStr76:
;__Lib_Conversions.c,484 :: 		
0x0680	0x0E01      	MOVLW       1
0x0682	0x6E5A      	MOVWF       FloatToStr_i_L0 
;__Lib_Conversions.c,485 :: 		
0x0684	0xAE5E      	BTFSS       FloatToStr_un_L0+2, 7 
0x0686	0xD00E      	BRA         L_FloatToStr77
;__Lib_Conversions.c,486 :: 		
0x0688	0x0E80      	MOVLW       128
0x068A	0x185E      	XORWF       FloatToStr_un_L0+2, 0 
0x068C	0x6E00      	MOVWF       R0 
0x068E	0xF05EC000  	MOVFF       R0, FloatToStr_un_L0+2
;__Lib_Conversions.c,487 :: 		
0x0692	0x2A5A      	INCF        FloatToStr_i_L0, 1 
;__Lib_Conversions.c,488 :: 		
0x0694	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0698	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x069C	0x0E2D      	MOVLW       45
0x069E	0x6EE6      	MOVWF       POSTINC1 
0x06A0	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x06A2	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,489 :: 		
L_FloatToStr77:
;__Lib_Conversions.c,490 :: 		
0x06A4	0x0E00      	MOVLW       0
0x06A6	0x6E00      	MOVWF       R0 
0x06A8	0x185F      	XORWF       FloatToStr_un_L0+3, 0 
0x06AA	0xE108      	BNZ         L__FloatToStr146
0x06AC	0x5000      	MOVF        R0, 0 
0x06AE	0x185E      	XORWF       FloatToStr_un_L0+2, 0 
0x06B0	0xE105      	BNZ         L__FloatToStr146
0x06B2	0x5000      	MOVF        R0, 0 
0x06B4	0x185D      	XORWF       FloatToStr_un_L0+1, 0 
0x06B6	0xE102      	BNZ         L__FloatToStr146
0x06B8	0x505C      	MOVF        FloatToStr_un_L0, 0 
0x06BA	0x0A00      	XORLW       0
L__FloatToStr146:
0x06BC	0xE10B      	BNZ         L_FloatToStr78
;__Lib_Conversions.c,491 :: 		
0x06BE	0xF062C058  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x06C2	0xF063C059  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x06C6	0x0E2F      	MOVLW       ?lstr2___Lib_Conversions
0x06C8	0x6F64      	MOVWF       FARG_strcpy_from, 1
0x06CA	0x0E00      	MOVLW       hi_addr(?lstr2___Lib_Conversions)
0x06CC	0x6F65      	MOVWF       FARG_strcpy_from+1, 1
0x06CE	0xDE44      	RCALL       _strcpy
;__Lib_Conversions.c,492 :: 		
0x06D0	0x6A00      	CLRF        R0 
0x06D2	0xD1BC      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,493 :: 		
L_FloatToStr78:
;__Lib_Conversions.c,494 :: 		
0x06D4	0x505F      	MOVF        FloatToStr_un_L0+3, 0 
0x06D6	0x0AFF      	XORLW       255
0x06D8	0xE108      	BNZ         L__FloatToStr147
0x06DA	0x505E      	MOVF        FloatToStr_un_L0+2, 0 
0x06DC	0x0A00      	XORLW       0
0x06DE	0xE105      	BNZ         L__FloatToStr147
0x06E0	0x505D      	MOVF        FloatToStr_un_L0+1, 0 
0x06E2	0x0A00      	XORLW       0
0x06E4	0xE102      	BNZ         L__FloatToStr147
0x06E6	0x505C      	MOVF        FloatToStr_un_L0, 0 
0x06E8	0x0A00      	XORLW       0
L__FloatToStr147:
0x06EA	0xE10C      	BNZ         L_FloatToStr79
;__Lib_Conversions.c,495 :: 		
0x06EC	0xF062C058  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x06F0	0xF063C059  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x06F4	0x0E2B      	MOVLW       ?lstr3___Lib_Conversions
0x06F6	0x6F64      	MOVWF       FARG_strcpy_from, 1
0x06F8	0x0E00      	MOVLW       hi_addr(?lstr3___Lib_Conversions)
0x06FA	0x6F65      	MOVWF       FARG_strcpy_from+1, 1
0x06FC	0xDE2D      	RCALL       _strcpy
;__Lib_Conversions.c,496 :: 		
0x06FE	0xF000C05A  	MOVFF       FloatToStr_i_L0, R0
0x0702	0xD1A4      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,497 :: 		
L_FloatToStr79:
;__Lib_Conversions.c,505 :: 		
L_FloatToStr80:
0x0704	0x0E00      	MOVLW       0
0x0706	0x6E04      	MOVWF       R4 
0x0708	0x0E00      	MOVLW       0
0x070A	0x6E05      	MOVWF       R5 
0x070C	0x0E00      	MOVLW       0
0x070E	0x6E06      	MOVWF       R6 
0x0710	0x0E7F      	MOVLW       127
0x0712	0x6E07      	MOVWF       R7 
0x0714	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x0718	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x071C	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x0720	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x0724	0xDE40      	RCALL       _Compare_Double
0x0726	0x0E01      	MOVLW       1
0x0728	0xB0D8      	BTFSC       STATUS, 0 
0x072A	0x0E00      	MOVLW       0
0x072C	0x6E00      	MOVWF       R0 
0x072E	0x5200      	MOVF        R0, 1 
0x0730	0xE01B      	BZ          L_FloatToStr81
;__Lib_Conversions.c,506 :: 		
0x0732	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x0736	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x073A	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x073E	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x0742	0x0E00      	MOVLW       0
0x0744	0x6E04      	MOVWF       R4 
0x0746	0x0E00      	MOVLW       0
0x0748	0x6E05      	MOVWF       R5 
0x074A	0x0E20      	MOVLW       32
0x074C	0x6E06      	MOVWF       R6 
0x074E	0x0E82      	MOVLW       130
0x0750	0x6E07      	MOVWF       R7 
0x0752	0xDD72      	RCALL       _Mul_32x32_FP
0x0754	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x0758	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x075C	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x0760	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,507 :: 		
0x0764	0x0761      	DECF        FloatToStr_dexpon_L0, 1, 1
;__Lib_Conversions.c,508 :: 		
0x0766	0xD7CE      	BRA         L_FloatToStr80
L_FloatToStr81:
;__Lib_Conversions.c,513 :: 		
L_FloatToStr82:
0x0768	0x0E00      	MOVLW       0
0x076A	0x6E04      	MOVWF       R4 
0x076C	0x0E00      	MOVLW       0
0x076E	0x6E05      	MOVWF       R5 
0x0770	0x0E20      	MOVLW       32
0x0772	0x6E06      	MOVWF       R6 
0x0774	0x0E82      	MOVLW       130
0x0776	0x6E07      	MOVWF       R7 
0x0778	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x077C	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x0780	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x0784	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x0788	0xDE0E      	RCALL       _Compare_Double
0x078A	0x0E00      	MOVLW       0
0x078C	0xB0D8      	BTFSC       STATUS, 0 
0x078E	0x0E01      	MOVLW       1
0x0790	0x6E00      	MOVWF       R0 
0x0792	0x5200      	MOVF        R0, 1 
0x0794	0xE01B      	BZ          L_FloatToStr83
;__Lib_Conversions.c,514 :: 		
0x0796	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x079A	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x079E	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x07A2	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x07A6	0x0ECD      	MOVLW       205
0x07A8	0x6E04      	MOVWF       R4 
0x07AA	0x0ECC      	MOVLW       204
0x07AC	0x6E05      	MOVWF       R5 
0x07AE	0x0E4C      	MOVLW       76
0x07B0	0x6E06      	MOVWF       R6 
0x07B2	0x0E7B      	MOVLW       123
0x07B4	0x6E07      	MOVWF       R7 
0x07B6	0xDD40      	RCALL       _Mul_32x32_FP
0x07B8	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x07BC	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x07C0	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x07C4	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,515 :: 		
0x07C8	0x2B61      	INCF        FloatToStr_dexpon_L0, 1, 1
;__Lib_Conversions.c,516 :: 		
0x07CA	0xD7CE      	BRA         L_FloatToStr82
L_FloatToStr83:
;__Lib_Conversions.c,525 :: 		
0x07CC	0x0EFF      	MOVLW       255
0x07CE	0x145C      	ANDWF       FloatToStr_un_L0, 0 
0x07D0	0x6E08      	MOVWF       R8 
0x07D2	0x0EFF      	MOVLW       255
0x07D4	0x145D      	ANDWF       FloatToStr_un_L0+1, 0 
0x07D6	0x6E09      	MOVWF       R9 
0x07D8	0x0E7F      	MOVLW       127
0x07DA	0x145E      	ANDWF       FloatToStr_un_L0+2, 0 
0x07DC	0x6E0A      	MOVWF       R10 
0x07DE	0x0E00      	MOVLW       0
0x07E0	0x145F      	ANDWF       FloatToStr_un_L0+3, 0 
0x07E2	0x6E0B      	MOVWF       R11 
;__Lib_Conversions.c,526 :: 		
0x07E4	0xF004C008  	MOVFF       R8, R4
0x07E8	0xF005C009  	MOVFF       R9, R5
0x07EC	0xF006C00A  	MOVFF       R10, R6
0x07F0	0xF007C00B  	MOVFF       R11, R7
0x07F4	0x3604      	RLCF        R4, 1 
0x07F6	0x9004      	BCF         R4, 0 
0x07F8	0x3605      	RLCF        R5, 1 
0x07FA	0x3606      	RLCF        R6, 1 
0x07FC	0x3607      	RLCF        R7, 1 
;__Lib_Conversions.c,527 :: 		
0x07FE	0x0E00      	MOVLW       0
0x0800	0x145C      	ANDWF       FloatToStr_un_L0, 0 
0x0802	0x6E00      	MOVWF       R0 
0x0804	0x0E00      	MOVLW       0
0x0806	0x145D      	ANDWF       FloatToStr_un_L0+1, 0 
0x0808	0x6E01      	MOVWF       R1 
0x080A	0x0E00      	MOVLW       0
0x080C	0x145E      	ANDWF       FloatToStr_un_L0+2, 0 
0x080E	0x6E02      	MOVWF       R2 
0x0810	0x0EFF      	MOVLW       255
0x0812	0x145F      	ANDWF       FloatToStr_un_L0+3, 0 
0x0814	0x6E03      	MOVWF       R3 
0x0816	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x081A	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x081E	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x0822	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,528 :: 		
0x0826	0x5004      	MOVF        R4, 0 
0x0828	0x105C      	IORWF       FloatToStr_un_L0, 0 
0x082A	0x6E00      	MOVWF       R0 
0x082C	0x5005      	MOVF        R5, 0 
0x082E	0x105D      	IORWF       FloatToStr_un_L0+1, 0 
0x0830	0x6E01      	MOVWF       R1 
0x0832	0x5006      	MOVF        R6, 0 
0x0834	0x105E      	IORWF       FloatToStr_un_L0+2, 0 
0x0836	0x6E02      	MOVWF       R2 
0x0838	0x5007      	MOVF        R7, 0 
0x083A	0x105F      	IORWF       FloatToStr_un_L0+3, 0 
0x083C	0x6E03      	MOVWF       R3 
0x083E	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x0842	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x0846	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x084A	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,530 :: 		
0x084E	0x0E7F      	MOVLW       127
0x0850	0x5C5F      	SUBWF       FloatToStr_un_L0+3, 0 
0x0852	0x6E00      	MOVWF       R0 
0x0854	0xF05BC000  	MOVFF       R0, FloatToStr_d_L0
;__Lib_Conversions.c,533 :: 		
0x0858	0x0E01      	MOVLW       1
0x085A	0x6E5F      	MOVWF       FloatToStr_un_L0+3 
;__Lib_Conversions.c,534 :: 		
0x085C	0xF004C000  	MOVFF       R0, R4
0x0860	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x0864	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x0868	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x086C	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x0870	0x5004      	MOVF        R4, 0 
L__FloatToStr148:
0x0872	0xE007      	BZ          L__FloatToStr149
0x0874	0x3600      	RLCF        R0, 1 
0x0876	0x9000      	BCF         R0, 0 
0x0878	0x3601      	RLCF        R1, 1 
0x087A	0x3602      	RLCF        R2, 1 
0x087C	0x3603      	RLCF        R3, 1 
0x087E	0x0FFF      	ADDLW       255
0x0880	0xD7F8      	BRA         L__FloatToStr148
L__FloatToStr149:
0x0882	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x0886	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x088A	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x088E	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,535 :: 		
0x0892	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0896	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x089A	0x505F      	MOVF        FloatToStr_un_L0+3, 0 
0x089C	0x0F30      	ADDLW       48
0x089E	0x6EE6      	MOVWF       POSTINC1 
0x08A0	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x08A2	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,536 :: 		
0x08A4	0x0E80      	MOVLW       128
0x08A6	0x1961      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x08A8	0x6E00      	MOVWF       R0 
0x08AA	0x0E80      	MOVLW       128
0x08AC	0x0A01      	XORLW       1
0x08AE	0x5C00      	SUBWF       R0, 0 
0x08B0	0xE308      	BNC         L__FloatToStr100
0x08B2	0x0E80      	MOVLW       128
0x08B4	0x0A06      	XORLW       6
0x08B6	0x6E00      	MOVWF       R0 
0x08B8	0x0E80      	MOVLW       128
0x08BA	0x1961      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x08BC	0x5C00      	SUBWF       R0, 0 
0x08BE	0xE301      	BNC         L__FloatToStr100
0x08C0	0xD00A      	BRA         L_FloatToStr86
L__FloatToStr100:
;__Lib_Conversions.c,537 :: 		
0x08C2	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x08C6	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x08CA	0x0E2E      	MOVLW       46
0x08CC	0x6EE6      	MOVWF       POSTINC1 
0x08CE	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x08D0	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,538 :: 		
0x08D2	0x0E01      	MOVLW       1
0x08D4	0x6F60      	MOVWF       FloatToStr_bpoint_L0, 1
;__Lib_Conversions.c,539 :: 		
L_FloatToStr86:
;__Lib_Conversions.c,540 :: 		
0x08D6	0x0E06      	MOVLW       6
0x08D8	0x6E5B      	MOVWF       FloatToStr_d_L0 
L_FloatToStr87:
0x08DA	0x505B      	MOVF        FloatToStr_d_L0, 0 
0x08DC	0x0A00      	XORLW       0
0x08DE	0xE054      	BZ          L_FloatToStr88
;__Lib_Conversions.c,541 :: 		
0x08E0	0x6A5F      	CLRF        FloatToStr_un_L0+3 
;__Lib_Conversions.c,542 :: 		
0x08E2	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x08E6	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x08EA	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x08EE	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x08F2	0x3600      	RLCF        R0, 1 
0x08F4	0x9000      	BCF         R0, 0 
0x08F6	0x3601      	RLCF        R1, 1 
0x08F8	0x3602      	RLCF        R2, 1 
0x08FA	0x3603      	RLCF        R3, 1 
0x08FC	0x3600      	RLCF        R0, 1 
0x08FE	0x9000      	BCF         R0, 0 
0x0900	0x3601      	RLCF        R1, 1 
0x0902	0x3602      	RLCF        R2, 1 
0x0904	0x3603      	RLCF        R3, 1 
0x0906	0x505C      	MOVF        FloatToStr_un_L0, 0 
0x0908	0x2600      	ADDWF       R0, 1 
0x090A	0x505D      	MOVF        FloatToStr_un_L0+1, 0 
0x090C	0x2201      	ADDWFC      R1, 1 
0x090E	0x505E      	MOVF        FloatToStr_un_L0+2, 0 
0x0910	0x2202      	ADDWFC      R2, 1 
0x0912	0x505F      	MOVF        FloatToStr_un_L0+3, 0 
0x0914	0x2203      	ADDWFC      R3, 1 
0x0916	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x091A	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x091E	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x0922	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,543 :: 		
0x0926	0xF000C05C  	MOVFF       FloatToStr_un_L0, R0
0x092A	0xF001C05D  	MOVFF       FloatToStr_un_L0+1, R1
0x092E	0xF002C05E  	MOVFF       FloatToStr_un_L0+2, R2
0x0932	0xF003C05F  	MOVFF       FloatToStr_un_L0+3, R3
0x0936	0x3600      	RLCF        R0, 1 
0x0938	0x9000      	BCF         R0, 0 
0x093A	0x3601      	RLCF        R1, 1 
0x093C	0x3602      	RLCF        R2, 1 
0x093E	0x3603      	RLCF        R3, 1 
0x0940	0xF05CC000  	MOVFF       R0, FloatToStr_un_L0
0x0944	0xF05DC001  	MOVFF       R1, FloatToStr_un_L0+1
0x0948	0xF05EC002  	MOVFF       R2, FloatToStr_un_L0+2
0x094C	0xF05FC003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,544 :: 		
0x0950	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0954	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0958	0x505F      	MOVF        FloatToStr_un_L0+3, 0 
0x095A	0x0F30      	ADDLW       48
0x095C	0x6EE6      	MOVWF       POSTINC1 
0x095E	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x0960	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,545 :: 		
0x0962	0x5160      	MOVF        FloatToStr_bpoint_L0, 0, 1
0x0964	0x0A00      	XORLW       0
0x0966	0xE10E      	BNZ         L_FloatToStr90
;__Lib_Conversions.c,546 :: 		
0x0968	0x0761      	DECF        FloatToStr_dexpon_L0, 1, 1
0x096A	0x5161      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x096C	0x0A00      	XORLW       0
0x096E	0xE10A      	BNZ         L_FloatToStr91
;__Lib_Conversions.c,547 :: 		
0x0970	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0974	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0978	0x0E2E      	MOVLW       46
0x097A	0x6EE6      	MOVWF       POSTINC1 
0x097C	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x097E	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,548 :: 		
0x0980	0x0E01      	MOVLW       1
0x0982	0x6F60      	MOVWF       FloatToStr_bpoint_L0, 1
;__Lib_Conversions.c,549 :: 		
L_FloatToStr91:
L_FloatToStr90:
;__Lib_Conversions.c,540 :: 		
0x0984	0x065B      	DECF        FloatToStr_d_L0, 1 
;__Lib_Conversions.c,550 :: 		
0x0986	0xD7A9      	BRA         L_FloatToStr87
L_FloatToStr88:
;__Lib_Conversions.c,551 :: 		
L_FloatToStr92:
0x0988	0x0EFF      	MOVLW       255
0x098A	0x2458      	ADDWF       FARG_FloatToStr_str, 0 
0x098C	0x6EE9      	MOVWF       FSR0L 
0x098E	0x0EFF      	MOVLW       255
0x0990	0x2059      	ADDWFC      FARG_FloatToStr_str+1, 0 
0x0992	0x6EEA      	MOVWF       FSR0H 
0x0994	0x50EE      	MOVF        POSTINC0, 0 
0x0996	0x0A30      	XORLW       48
0x0998	0xE105      	BNZ         L_FloatToStr93
;__Lib_Conversions.c,552 :: 		
0x099A	0x0E01      	MOVLW       1
0x099C	0x5E58      	SUBWF       FARG_FloatToStr_str, 1 
0x099E	0x0E00      	MOVLW       0
0x09A0	0x5A59      	SUBWFB      FARG_FloatToStr_str+1, 1 
0x09A2	0xD7F2      	BRA         L_FloatToStr92
L_FloatToStr93:
;__Lib_Conversions.c,553 :: 		
0x09A4	0x0EFF      	MOVLW       255
0x09A6	0x2458      	ADDWF       FARG_FloatToStr_str, 0 
0x09A8	0x6EE9      	MOVWF       FSR0L 
0x09AA	0x0EFF      	MOVLW       255
0x09AC	0x2059      	ADDWFC      FARG_FloatToStr_str+1, 0 
0x09AE	0x6EEA      	MOVWF       FSR0H 
0x09B0	0x50EE      	MOVF        POSTINC0, 0 
0x09B2	0x0A2E      	XORLW       46
0x09B4	0xE104      	BNZ         L_FloatToStr94
;__Lib_Conversions.c,554 :: 		
0x09B6	0x0E01      	MOVLW       1
0x09B8	0x5E58      	SUBWF       FARG_FloatToStr_str, 1 
0x09BA	0x0E00      	MOVLW       0
0x09BC	0x5A59      	SUBWFB      FARG_FloatToStr_str+1, 1 
L_FloatToStr94:
;__Lib_Conversions.c,555 :: 		
0x09BE	0x5161      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x09C0	0x0A00      	XORLW       0
0x09C2	0xE03E      	BZ          L_FloatToStr95
;__Lib_Conversions.c,556 :: 		
0x09C4	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x09C8	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x09CC	0x0E65      	MOVLW       101
0x09CE	0x6EE6      	MOVWF       POSTINC1 
0x09D0	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x09D2	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,557 :: 		
0x09D4	0x0E80      	MOVLW       128
0x09D6	0x1961      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x09D8	0x6E00      	MOVWF       R0 
0x09DA	0x0E80      	MOVLW       128
0x09DC	0x0A00      	XORLW       0
0x09DE	0x5C00      	SUBWF       R0, 0 
0x09E0	0xE20B      	BC          L_FloatToStr96
;__Lib_Conversions.c,558 :: 		
0x09E2	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x09E6	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x09EA	0x0E2D      	MOVLW       45
0x09EC	0x6EE6      	MOVWF       POSTINC1 
0x09EE	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x09F0	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,559 :: 		
0x09F2	0x5161      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x09F4	0x0800      	SUBLW       0
0x09F6	0x6F61      	MOVWF       FloatToStr_dexpon_L0, 1
;__Lib_Conversions.c,560 :: 		
L_FloatToStr96:
;__Lib_Conversions.c,561 :: 		
0x09F8	0xF05BC061  	MOVFF       FloatToStr_dexpon_L0, FloatToStr_d_L0
;__Lib_Conversions.c,562 :: 		
0x09FC	0x5161      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x09FE	0x0809      	SUBLW       9
0x0A00	0xE20E      	BC          L_FloatToStr97
;__Lib_Conversions.c,563 :: 		
0x0A02	0x0E0A      	MOVLW       10
0x0A04	0x6E04      	MOVWF       R4 
0x0A06	0xF000C05B  	MOVFF       FloatToStr_d_L0, R0
0x0A0A	0xDC07      	RCALL       _Div_8X8_U
0x0A0C	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0A10	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0A14	0x5000      	MOVF        R0, 0 
0x0A16	0x0F30      	ADDLW       48
0x0A18	0x6EE6      	MOVWF       POSTINC1 
0x0A1A	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x0A1C	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
L_FloatToStr97:
;__Lib_Conversions.c,564 :: 		
0x0A1E	0x0E0A      	MOVLW       10
0x0A20	0x6E04      	MOVWF       R4 
0x0A22	0xF000C05B  	MOVFF       FloatToStr_d_L0, R0
0x0A26	0xF001EC0D  	CALL        _Div_8X8_U, 0
0x0A2A	0xF000C008  	MOVFF       R8, R0
0x0A2E	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0A32	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0A36	0x5000      	MOVF        R0, 0 
0x0A38	0x0F30      	ADDLW       48
0x0A3A	0x6EE6      	MOVWF       POSTINC1 
0x0A3C	0x4A58      	INFSNZ      FARG_FloatToStr_str, 1 
0x0A3E	0x2A59      	INCF        FARG_FloatToStr_str+1, 1 
;__Lib_Conversions.c,565 :: 		
L_FloatToStr95:
;__Lib_Conversions.c,566 :: 		
0x0A40	0xFFE1C058  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0A44	0xFFE2C059  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0A48	0x6AE6      	CLRF        POSTINC1 
;__Lib_Conversions.c,567 :: 		
0x0A4A	0x6A00      	CLRF        R0 
;__Lib_Conversions.c,568 :: 		
L_end_FloatToStr:
0x0A4C	0x0012      	RETURN      0
; end of _FloatToStr
_Lcd_Out_CP:
;__Lib_Lcd.c,57 :: 		
;__Lib_Lcd.c,59 :: 		
0x0A4E	0x6A56      	CLRF        Lcd_Out_CP_i_L0 
;__Lib_Lcd.c,60 :: 		
L_Lcd_Out_CP2:
0x0A50	0x5056      	MOVF        Lcd_Out_CP_i_L0, 0 
0x0A52	0x2454      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x0A54	0x6EE9      	MOVWF       FSR0L 
0x0A56	0x0E00      	MOVLW       0
0x0A58	0x2055      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0A5A	0x6EEA      	MOVWF       FSR0H 
0x0A5C	0x52EE      	MOVF        POSTINC0, 1 
0x0A5E	0xE00B      	BZ          L_Lcd_Out_CP3
;__Lib_Lcd.c,61 :: 		
0x0A60	0x5056      	MOVF        Lcd_Out_CP_i_L0, 0 
0x0A62	0x2454      	ADDWF       FARG_Lcd_Out_CP_text, 0 
0x0A64	0x6EE9      	MOVWF       FSR0L 
0x0A66	0x0E00      	MOVLW       0
0x0A68	0x2055      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0 
0x0A6A	0x6EEA      	MOVWF       FSR0H 
0x0A6C	0xF062CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0A70	0xDD3A      	RCALL       _Lcd_Chr_CP
0x0A72	0x2A56      	INCF        Lcd_Out_CP_i_L0, 1 
;__Lib_Lcd.c,62 :: 		
0x0A74	0xD7ED      	BRA         L_Lcd_Out_CP2
L_Lcd_Out_CP3:
;__Lib_Lcd.c,63 :: 		
L_end_Lcd_Out_CP:
0x0A76	0x0012      	RETURN      0
; end of _Lcd_Out_CP
_main:
0x0A78	0xF005ECC6  	CALL        2956, 0
;APESW.c,118 :: 		void main() {
;APESW.c,120 :: 		INTCON.GIE = 1;                             //Habilita las interrupciones globales
0x0A7C	0x8EF2      	BSF         INTCON, 7 
;APESW.c,121 :: 		INTCON.PEIE = 1;                            //Habilita las interrupciones perifericas
0x0A7E	0x8CF2      	BSF         INTCON, 6 
;APESW.c,123 :: 		INTCON.INT0IE = 1;                          //Habilita la interrupcion externas en INT0
0x0A80	0x88F2      	BSF         INTCON, 4 
;APESW.c,124 :: 		INTCON2.RBPU = 1;                           //PORTB pull-ups are enabled by individual port latch values
0x0A82	0x8EF1      	BSF         INTCON2, 7 
;APESW.c,125 :: 		INTCON2.INTEDG0 = 1;                        //Habilita la interrupcion por flanco de subida
0x0A84	0x8CF1      	BSF         INTCON2, 6 
;APESW.c,127 :: 		ADCON1 = 0b00010111;                        //Configuracion ADCON1
0x0A86	0x0E17      	MOVLW       23
0x0A88	0x6EC1      	MOVWF       ADCON1 
;APESW.c,128 :: 		CMCON = 0b00000111;
0x0A8A	0x0E07      	MOVLW       7
0x0A8C	0x6EB4      	MOVWF       CMCON 
;APESW.c,130 :: 		T1CON=0x00;                                 //Configuracion T1CON: 16 bits, Timer1 On, Pre-escalador 1:1
0x0A8E	0x6ACD      	CLRF        T1CON 
;APESW.c,131 :: 		TMR1IE_bit = 1;                             //Habilita la interrupcion por desborde de Timer1
0x0A90	0x809D      	BSF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;APESW.c,133 :: 		T2CON = 0x04;                               //Configuracion T2CON: Post-escalador 1:1, Timer2 On, Pre-escalador 1:1
0x0A92	0x0E04      	MOVLW       4
0x0A94	0x6ECA      	MOVWF       T2CON 
;APESW.c,134 :: 		PIE1.TMR2IE = 1;                            //Habilita la interrupcion por desborde de Timer2
0x0A96	0x829D      	BSF         PIE1, 1 
;APESW.c,135 :: 		PR2 = 149;                                  //Produce una interrupcion cada 12,5us
0x0A98	0x0E95      	MOVLW       149
0x0A9A	0x6ECB      	MOVWF       PR2 
;APESW.c,137 :: 		TRISD0_bit = 0;                             //Establece el pin D0 como salida
0x0A9C	0x9095      	BCF         TRISD0_bit, BitPos(TRISD0_bit+0) 
;APESW.c,138 :: 		TRISD1_bit = 0;                             //Establece el pin D1 como salida
0x0A9E	0x9295      	BCF         TRISD1_bit, BitPos(TRISD1_bit+0) 
;APESW.c,140 :: 		TRISB = 0x07;                               //Establece los pines B0, B1 y B2 como entradas
0x0AA0	0x0E07      	MOVLW       7
0x0AA2	0x6E93      	MOVWF       TRISB 
;APESW.c,142 :: 		RD0_bit = 0;                                //Limpia el pin D0
0x0AA4	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
;APESW.c,143 :: 		RD1_bit = 0;                                //Limpia el pin D1
0x0AA6	0x9283      	BCF         RD1_bit, BitPos(RD1_bit+0) 
;APESW.c,144 :: 		PORTB = 0;                                  //Limpia el puerto B
0x0AA8	0x6A81      	CLRF        PORTB 
;APESW.c,146 :: 		punT1 = &contT;                             //Asocia el puntero punT1 con la direccion de memoria de la variable contT de tipo entero
0x0AAA	0x0E47      	MOVLW       _contT
0x0AAC	0x6E49      	MOVWF       _punT1 
0x0AAE	0x0E00      	MOVLW       hi_addr(_contT)
0x0AB0	0x6E4A      	MOVWF       _punT1+1 
;APESW.c,148 :: 		contw = 0;                                  //Limpia todas las variables
0x0AB2	0x6A45      	CLRF        _contw 
0x0AB4	0x6A46      	CLRF        _contw+1 
;APESW.c,149 :: 		contT1 = 0;
0x0AB6	0x6A4B      	CLRF        _contT1 
0x0AB8	0x6A4C      	CLRF        _contT1+1 
;APESW.c,150 :: 		BS = 0;
0x0ABA	0x6A50      	CLRF        _BS 
;APESW.c,151 :: 		FP = 0;
0x0ABC	0x6A4F      	CLRF        _FP 
;APESW.c,152 :: 		T1 = 0;
0x0ABE	0x6A4D      	CLRF        _T1 
0x0AC0	0x6A4E      	CLRF        _T1+1 
;APESW.c,153 :: 		T2 = 0;
0x0AC2	0x6A43      	CLRF        _T2 
0x0AC4	0x6A44      	CLRF        _T2+1 
;APESW.c,154 :: 		TOFT = 0;
0x0AC6	0x6A3F      	CLRF        _TOFT 
0x0AC8	0x6A40      	CLRF        _TOFT+1 
0x0ACA	0x6A41      	CLRF        _TOFT+2 
0x0ACC	0x6A42      	CLRF        _TOFT+3 
;APESW.c,156 :: 		Lcd_init();                                 //Inicializa el LCD
0x0ACE	0xDD4E      	RCALL       _Lcd_Init
;APESW.c,157 :: 		Lcd_Out(1,1,"INICIANDO...");
0x0AD0	0x0E01      	MOVLW       1
0x0AD2	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x0AD4	0x0E01      	MOVLW       1
0x0AD6	0x6E55      	MOVWF       FARG_Lcd_Out_column 
0x0AD8	0x0E18      	MOVLW       ?lstr1_APESW
0x0ADA	0x6E56      	MOVWF       FARG_Lcd_Out_text 
0x0ADC	0x0E00      	MOVLW       hi_addr(?lstr1_APESW)
0x0ADE	0x6E57      	MOVWF       FARG_Lcd_Out_text+1 
0x0AE0	0xDD08      	RCALL       _Lcd_Out
;APESW.c,158 :: 		Lcd_Cmd(_LCD_CLEAR);                        //Limpia el LCD
0x0AE2	0x0E01      	MOVLW       1
0x0AE4	0x6F66      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0AE6	0xF000ECCE  	CALL        _Lcd_Cmd, 0
;APESW.c,159 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                   //Apaga el cursor del LCD
0x0AEA	0x0E0C      	MOVLW       12
0x0AEC	0x6F66      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0AEE	0xF000ECCE  	CALL        _Lcd_Cmd, 0
;APESW.c,161 :: 		while (1){
L_main13:
;APESW.c,163 :: 		TOFT = (contT1)*(4./48);          //Calcula el valor de TOF
0x0AF2	0xF000C04B  	MOVFF       _contT1, R0
0x0AF6	0xF001C04C  	MOVFF       _contT1+1, R1
0x0AFA	0xDD8B      	RCALL       _word2double
0x0AFC	0x0EAB      	MOVLW       171
0x0AFE	0x6E04      	MOVWF       R4 
0x0B00	0x0EAA      	MOVLW       170
0x0B02	0x6E05      	MOVWF       R5 
0x0B04	0x0E2A      	MOVLW       42
0x0B06	0x6E06      	MOVWF       R6 
0x0B08	0x0E7B      	MOVLW       123
0x0B0A	0x6E07      	MOVWF       R7 
0x0B0C	0xF001EC1C  	CALL        _Mul_32x32_FP, 0
0x0B10	0xF03FC000  	MOVFF       R0, _TOFT
0x0B14	0xF040C001  	MOVFF       R1, _TOFT+1
0x0B18	0xF041C002  	MOVFF       R2, _TOFT+2
0x0B1C	0xF042C003  	MOVFF       R3, _TOFT+3
;APESW.c,165 :: 		FloatToStr(TOFT, txt1);               //Convierte el valor del TOF en string
0x0B20	0xF054C000  	MOVFF       R0, FARG_FloatToStr_fnum
0x0B24	0xF055C001  	MOVFF       R1, FARG_FloatToStr_fnum+1
0x0B28	0xF056C002  	MOVFF       R2, FARG_FloatToStr_fnum+2
0x0B2C	0xF057C003  	MOVFF       R3, FARG_FloatToStr_fnum+3
0x0B30	0x0E35      	MOVLW       _txt1
0x0B32	0x6E58      	MOVWF       FARG_FloatToStr_str 
0x0B34	0x0E00      	MOVLW       hi_addr(_txt1)
0x0B36	0x6E59      	MOVWF       FARG_FloatToStr_str+1 
0x0B38	0xDD80      	RCALL       _FloatToStr
;APESW.c,166 :: 		Lcd_Out(1,1,"TOF: ");
0x0B3A	0x0E01      	MOVLW       1
0x0B3C	0x6E54      	MOVWF       FARG_Lcd_Out_row 
0x0B3E	0x0E01      	MOVLW       1
0x0B40	0x6E55      	MOVWF       FARG_Lcd_Out_column 
0x0B42	0x0E25      	MOVLW       ?lstr2_APESW
0x0B44	0x6E56      	MOVWF       FARG_Lcd_Out_text 
0x0B46	0x0E00      	MOVLW       hi_addr(?lstr2_APESW)
0x0B48	0x6E57      	MOVWF       FARG_Lcd_Out_text+1 
0x0B4A	0xDCD3      	RCALL       _Lcd_Out
;APESW.c,167 :: 		Lcd_Out_Cp(txt1);                     //Visualiza el valor del TOF en el LCD
0x0B4C	0x0E35      	MOVLW       _txt1
0x0B4E	0x6E54      	MOVWF       FARG_Lcd_Out_CP_text 
0x0B50	0x0E00      	MOVLW       hi_addr(_txt1)
0x0B52	0x6E55      	MOVWF       FARG_Lcd_Out_CP_text+1 
0x0B54	0xDF7C      	RCALL       _Lcd_Out_CP
;APESW.c,169 :: 		delay_ms(1);
0x0B56	0x0E03      	MOVLW       3
0x0B58	0x6E0C      	MOVWF       R12, 0
0x0B5A	0x0E97      	MOVLW       151
0x0B5C	0x6E0D      	MOVWF       R13, 0
L_main15:
0x0B5E	0x2E0D      	DECFSZ      R13, 1, 0
0x0B60	0xD7FE      	BRA         L_main15
0x0B62	0x2E0C      	DECFSZ      R12, 1, 0
0x0B64	0xD7FC      	BRA         L_main15
0x0B66	0x0000      	NOP
0x0B68	0x0000      	NOP
;APESW.c,171 :: 		}
0x0B6A	0xD7C3      	BRA         L_main13
;APESW.c,172 :: 		}
L_end_main:
0x0B6C	0xD7FF      	BRA         $+0
; end of _main
0x0B8C	0xF018EE10  	LFSR        1, 24
0x0B90	0x0E1D      	MOVLW       29
0x0B92	0x6E00      	MOVWF       R0 
0x0B94	0x0E01      	MOVLW       1
0x0B96	0x6E01      	MOVWF       R1 
0x0B98	0x0E6E      	MOVLW       110
0x0B9A	0x6EF6      	MOVWF       4086 
0x0B9C	0x0E0B      	MOVLW       11
0x0B9E	0x6EF7      	MOVWF       TBLPTRH 
0x0BA0	0x0E00      	MOVLW       0
0x0BA2	0x6EF8      	MOVWF       TBLPTRU 
0x0BA4	0xF003EC01  	CALL        1538, 0
0x0BA8	0x0012      	RETURN      0
;APESW.c,0 :: ?ICS?lstr1_APESW
0x0B6E	0x4E49 ;?ICS?lstr1_APESW+0
0x0B70	0x4349 ;?ICS?lstr1_APESW+2
0x0B72	0x4149 ;?ICS?lstr1_APESW+4
0x0B74	0x444E ;?ICS?lstr1_APESW+6
0x0B76	0x2E4F ;?ICS?lstr1_APESW+8
0x0B78	0x2E2E ;?ICS?lstr1_APESW+10
0x0B7A	0x00 ;?ICS?lstr1_APESW+12
; end of ?ICS?lstr1_APESW
;APESW.c,0 :: ?ICS?lstr2_APESW
0x0B7B	0x4F54 ;?ICS?lstr2_APESW+0
0x0B7D	0x3A46 ;?ICS?lstr2_APESW+2
0x0B7F	0x0020 ;?ICS?lstr2_APESW+4
; end of ?ICS?lstr2_APESW
;__Lib_Conversions.c,0 :: ?ICS?lstr3___Lib_Conversions
0x0B81	0x4E49 ;?ICS?lstr3___Lib_Conversions+0
0x0B83	0x0046 ;?ICS?lstr3___Lib_Conversions+2
; end of ?ICS?lstr3___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr2___Lib_Conversions
0x0B85	0x0030 ;?ICS?lstr2___Lib_Conversions+0
; end of ?ICS?lstr2___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr1___Lib_Conversions
0x0B87	0x614E ;?ICS?lstr1___Lib_Conversions+0
0x0B89	0x004E ;?ICS?lstr1___Lib_Conversions+2
; end of ?ICS?lstr1___Lib_Conversions
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [294]    _Interrupt
0x012E       [6]    _Delay_1us
0x0134      [22]    _Delay_5500us
0x014A      [10]    _Delay_50us
0x0154      [26]    _SETFUN32
0x016E       [8]    _FIXSIGN32
0x0176      [14]    _RES032
0x0184      [24]    _SETFOV32
0x019C     [126]    _Lcd_Cmd
0x021A      [30]    _Div_8X8_U
0x0238     [288]    _Mul_32x32_FP
0x0358      [78]    _strcpy
0x03A6     [206]    _Compare_Double
0x0474     [114]    _NRM3232
0x04E6      [12]    _Lcd_Chr_CP
0x04F2     [122]    _Lcd_Out
0x056C     [150]    _Lcd_Init
0x0602      [16]    ___CC2DW
0x0612      [40]    _word2double
0x063A    [1044]    _FloatToStr
0x0A4E      [42]    _Lcd_Out_CP
0x0A78     [246]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0003       [1]    R3
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0018      [13]    ?lstr1_APESW
0x0025       [6]    ?lstr2_APESW
0x002B       [4]    ?lstr3___Lib_Conversions
0x002F       [2]    ?lstr2___Lib_Conversions
0x0031       [4]    ?lstr1___Lib_Conversions
0x0035      [10]    _txt1
0x003F       [4]    _TOFT
0x0043       [2]    _T2
0x0045       [2]    _contw
0x0047       [2]    _contT
0x0049       [2]    _punT1
0x004B       [2]    _contT1
0x004D       [2]    _T1
0x004F       [1]    _FP
0x0050       [1]    _BS
0x0051       [0]    __Lib_Lcd_cmd_status
0x0052       [2]    _DT
0x0054       [4]    FARG_FloatToStr_fnum
0x0054       [1]    FARG_Lcd_Out_row
0x0054       [2]    FARG_Lcd_Out_CP_text
0x0055       [1]    FARG_Lcd_Out_column
0x0056       [2]    FARG_Lcd_Out_text
0x0056       [1]    Lcd_Out_CP_i_L0
0x0058       [2]    FARG_FloatToStr_str
0x0058       [1]    Lcd_Out_i_L0
0x005A       [1]    FloatToStr_i_L0
0x005B       [1]    FloatToStr_d_L0
0x005C       [4]    FloatToStr_un_L0
0x0060       [1]    FloatToStr_bpoint_L0
0x0061       [1]    FloatToStr_dexpon_L0
0x0062       [2]    FARG_strcpy_to
0x0062       [1]    FARG_Lcd_Chr_CP_out_char
0x0064       [2]    FARG_strcpy_from
0x0066       [1]    FARG_Lcd_Cmd_out_char
0x0F81       [1]    PORTB
0x0F83       [0]    LCD_D7
0x0F83       [0]    RD5_bit
0x0F83       [0]    LCD_D6
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    LCD_D5
0x0F83       [0]    RD0_bit
0x0F83       [0]    LCD_RS
0x0F83       [0]    LCD_D4
0x0F83       [0]    LCD_EN
0x0F93       [1]    TRISB
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    LCD_EN_Direction
0x0F95       [0]    LCD_RS_Direction
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD0_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    TMR1IE_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0FB4       [1]    CMCON
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1ON_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0B6E      [13]    ?ICS?lstr1_APESW
0x0B7B       [6]    ?ICS?lstr2_APESW
0x0B81       [4]    ?ICS?lstr3___Lib_Conversions
0x0B85       [2]    ?ICS?lstr2___Lib_Conversions
0x0B87       [4]    ?ICS?lstr1___Lib_Conversions
