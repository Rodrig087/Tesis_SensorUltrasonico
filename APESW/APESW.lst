;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09/12/2016 16:38:45
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF007EF3F  	GOTO        3710
_Interrupt:
;APESW.c,72 :: 		void Interrupt(){
0x0008	0xF018C000  	MOVFF       R0, 24
0x000C	0xF017C001  	MOVFF       R1, 23
0x0010	0xF016C002  	MOVFF       R2, 22
0x0014	0xF015C003  	MOVFF       R3, 21
;APESW.c,75 :: 		if (TMR2IF_bit){                             //Verifica si ocurrio una interrupcion por desbordamiento del TMR2.
0x0018	0xF01BCFE1  	MOVFF       FSR1L, 27
0x001C	0xF01CCFE2  	MOVFF       FSR1H, 28
0x0020	0xF019CFF3  	MOVFF       PROD, 25
0x0024	0xF01ACFF4  	MOVFF       PRODH, 26
0x0028	0xA29E      	BTFSS       TMR2IF_bit, BitPos(TMR2IF_bit+0) 
0x002A	0xD029      	BRA         L_Interrupt0
;APESW.c,76 :: 		RD1_bit = ~RD1_bit;
0x002C	0x7283      	BTG         RD1_bit, BitPos(RD1_bit+0) 
;APESW.c,77 :: 		if (contp<=23){                           //Controla el numero total de pulsos de exitacion del transductor ultrasonico. (42)
0x002E	0x0E00      	MOVLW       0
0x0030	0x6E00      	MOVWF       R0 
0x0032	0x5046      	MOVF        _contp+1, 0 
0x0034	0x5C00      	SUBWF       R0, 0 
0x0036	0xE102      	BNZ         L__Interrupt35
0x0038	0x5045      	MOVF        _contp, 0 
0x003A	0x0817      	SUBLW       23
L__Interrupt35:
0x003C	0xE319      	BNC         L_Interrupt1
;APESW.c,78 :: 		BS = ~BS;                              //Variable auxiliar para establecer el cambio de estado en el bit RD0.
0x003E	0x1C54      	COMF        _BS, 0 
0x0040	0x6E00      	MOVWF       R0 
0x0042	0xF054C000  	MOVFF       R0, _BS
;APESW.c,79 :: 		RD0_bit = BS;
0x0046	0xB000      	BTFSC       R0, 0 
0x0048	0xD002      	BRA         L__Interrupt36
0x004A	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
0x004C	0xD001      	BRA         L__Interrupt37
L__Interrupt36:
0x004E	0x8083      	BSF         RD0_bit, BitPos(RD0_bit+0) 
L__Interrupt37:
;APESW.c,80 :: 		if ((contp==9)){                        //Cambia el valor de la variable auxiliar para producir  (20)
0x0050	0x0E00      	MOVLW       0
0x0052	0x1846      	XORWF       _contp+1, 0 
0x0054	0xE102      	BNZ         L__Interrupt38
0x0056	0x0E09      	MOVLW       9
0x0058	0x1845      	XORWF       _contp, 0 
L__Interrupt38:
0x005A	0xE102      	BNZ         L_Interrupt2
;APESW.c,81 :: 		BS = 1;                             //el primer cambio de fase en la siguiente iteracion.
0x005C	0x0E01      	MOVLW       1
0x005E	0x6E54      	MOVWF       _BS 
;APESW.c,82 :: 		}
L_Interrupt2:
;APESW.c,83 :: 		if ((contp==11)){                        //Cambia el valor de la variable auxiliar para producir  (20)
0x0060	0x0E00      	MOVLW       0
0x0062	0x1846      	XORWF       _contp+1, 0 
0x0064	0xE102      	BNZ         L__Interrupt39
0x0066	0x0E0B      	MOVLW       11
0x0068	0x1845      	XORWF       _contp, 0 
L__Interrupt39:
0x006A	0xB4D8      	BTFSC       STATUS, 2 
;APESW.c,84 :: 		BS = 0;                             //el primer cambio de fase en la siguiente iteracion.
0x006C	0x6A54      	CLRF        _BS 
;APESW.c,85 :: 		}
L_Interrupt3:
;APESW.c,88 :: 		} else {
0x006E	0xD004      	BRA         L_Interrupt4
L_Interrupt1:
;APESW.c,90 :: 		RD0_bit = 0;                           //Pone a cero despues de enviar todos los pulsos de exitacion.
0x0070	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
;APESW.c,91 :: 		TMR1ON_bit=1;                          //Enciende el TMR1.
0x0072	0x80CD      	BSF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;APESW.c,92 :: 		TMR1L=0X00;                            //Limpia los bits menos significativos del TMR1.
0x0074	0x6ACE      	CLRF        TMR1L 
;APESW.c,93 :: 		TMR1H=0X00;                            //Limpia los bits mas significativos del TMR1.
0x0076	0x6ACF      	CLRF        TMR1H 
;APESW.c,94 :: 		}
L_Interrupt4:
;APESW.c,96 :: 		contp++;                                  //Aumenta el contador en una unidad.
0x0078	0x4A45      	INFSNZ      _contp, 1 
0x007A	0x2A46      	INCF        _contp+1, 1 
;APESW.c,97 :: 		TMR2IF_bit = 0;                           //Limpia la bandera de interrupcion de Timer2
0x007C	0x929E      	BCF         TMR2IF_bit, BitPos(TMR2IF_bit+0) 
;APESW.c,99 :: 		}
L_Interrupt0:
;APESW.c,102 :: 		if (INTCON.INT0IF == 1){                     //Verifica si ocurrio una interrupcion externa en INT0.
0x007E	0xA2F2      	BTFSS       INTCON, 1 
0x0080	0xD0BE      	BRA         L_Interrupt5
;APESW.c,105 :: 		*(punT1) = TMR1L;                         //Carga el valor actual de TMR1L en los 8 bits menos significativos de la variable contT de tipo entero.
0x0082	0xFFE1C049  	MOVFF       _punT1, FSR1L
0x0086	0xFFE2C04A  	MOVFF       _punT1+1, FSR1H
0x008A	0xFFE6CFCE  	MOVFF       TMR1L, POSTINC1
;APESW.c,106 :: 		*(punT1+1) = TMR1H;                       //Carga el valor actual de TMR1H en los 8 bits mas significativos de la variable  contT de tipo entero.
0x008E	0x0E01      	MOVLW       1
0x0090	0x2449      	ADDWF       _punT1, 0 
0x0092	0x6EE1      	MOVWF       FSR1L 
0x0094	0x0E00      	MOVLW       0
0x0096	0x204A      	ADDWFC      _punT1+1, 0 
0x0098	0x6EE2      	MOVWF       FSR1H 
0x009A	0xFFE6CFCF  	MOVFF       TMR1H, POSTINC1
;APESW.c,108 :: 		T2 = contT;                               //Carga el contenido actual de la variable contT en la variable T2.
0x009E	0xF04FC04B  	MOVFF       _contT, _T2
0x00A2	0xF050C04C  	MOVFF       _contT+1, _T2+1
;APESW.c,109 :: 		DT = (T2-T1);                             //Halla la diferencia entre los valores actual y anterior de la variable contT (en nanosegundos).
0x00A6	0x504D      	MOVF        _T1, 0 
0x00A8	0x5C4B      	SUBWF       _contT, 0 
0x00AA	0x0100      	MOVLB       0
0x00AC	0x6F71      	MOVWF       _DT, 1
0x00AE	0x504E      	MOVF        _T1+1, 0 
0x00B0	0x584C      	SUBWFB      _contT+1, 0 
0x00B2	0x6F72      	MOVWF       _DT+1, 1
;APESW.c,111 :: 		if (F1<=3){
0x00B4	0x5036      	MOVF        _F1, 0 
0x00B6	0x0803      	SUBLW       3
0x00B8	0xE325      	BNC         L_Interrupt6
;APESW.c,112 :: 		if (DT>(300-Tht)&&DT<(300+Tht)){      //Realiza una comparacion para verificar cuando se estabilice la primera fase de la senal
0x00BA	0x502D      	MOVF        _ThT, 0 
0x00BC	0x082C      	SUBLW       44
0x00BE	0x6E01      	MOVWF       R1 
0x00C0	0x0E00      	MOVLW       0
0x00C2	0x6E02      	MOVWF       R2 
0x00C4	0x0E01      	MOVLW       1
0x00C6	0x5602      	SUBFWB      R2, 1 
0x00C8	0x5172      	MOVF        _DT+1, 0, 1
0x00CA	0x5C02      	SUBWF       R2, 0 
0x00CC	0xE102      	BNZ         L__Interrupt40
0x00CE	0x5171      	MOVF        _DT, 0, 1
0x00D0	0x5C01      	SUBWF       R1, 0 
L__Interrupt40:
0x00D2	0xE217      	BC          L_Interrupt9
0x00D4	0x0E2C      	MOVLW       44
0x00D6	0x6E01      	MOVWF       R1 
0x00D8	0x0E01      	MOVLW       1
0x00DA	0x6E02      	MOVWF       R2 
0x00DC	0x502D      	MOVF        _ThT, 0 
0x00DE	0x2601      	ADDWF       R1, 1 
0x00E0	0xB0D8      	BTFSC       STATUS, 0 
0x00E2	0x2A02      	INCF        R2, 1 
0x00E4	0x5002      	MOVF        R2, 0 
0x00E6	0x5D72      	SUBWF       _DT+1, 0, 1
0x00E8	0xE102      	BNZ         L__Interrupt41
0x00EA	0x5001      	MOVF        R1, 0 
0x00EC	0x5D71      	SUBWF       _DT, 0, 1
L__Interrupt41:
0x00EE	0xE209      	BC          L_Interrupt9
L__Interrupt32:
;APESW.c,113 :: 		F1++;
0x00F0	0x2A36      	INCF        _F1, 1 
;APESW.c,114 :: 		if (F1==3) {                       //Si 3 intervalos consecutivos cumplen con la condicion de estabilizacion, se empieza con el proceso de busqueda de cambio de fase
0x00F2	0x5036      	MOVF        _F1, 0 
0x00F4	0x0A03      	XORLW       3
0x00F6	0xE104      	BNZ         L_Interrupt10
;APESW.c,115 :: 		DF1 = T2;                       //Almacena el valor actual de la variable T2 para la referencia de inicio de deteccion de fase
0x00F8	0xF073C04F  	MOVFF       _T2, _DF1
;APESW.c,116 :: 		BF1 = 1;                        //Activa la bandera de deteccion de la fase 1
0x00FC	0x0E01      	MOVLW       1
0x00FE	0x6E40      	MOVWF       _BF1 
;APESW.c,117 :: 		}
L_Interrupt10:
;APESW.c,118 :: 		} else {
0x0100	0xD001      	BRA         L_Interrupt11
L_Interrupt9:
;APESW.c,119 :: 		F1=0;                              //Resetea el contador si no encuentra 3 intervalos iguales
0x0102	0x6A36      	CLRF        _F1 
;APESW.c,120 :: 		}
L_Interrupt11:
;APESW.c,121 :: 		}
L_Interrupt6:
;APESW.c,123 :: 		if (BF1==1){                                     //Inicia  la deteccion del primer cambio de fase
0x0104	0x5040      	MOVF        _BF1, 0 
0x0106	0x0A01      	XORLW       1
0x0108	0xE137      	BNZ         L_Interrupt12
;APESW.c,124 :: 		F2++;
0x010A	0x2A34      	INCF        _F2, 1 
;APESW.c,125 :: 		DF2 = (T2-DF1);
0x010C	0x5173      	MOVF        _DF1, 0, 1
0x010E	0x5C4F      	SUBWF       _T2, 0 
0x0110	0x6E02      	MOVWF       R2 
0x0112	0xF060C002  	MOVFF       R2, _DF2
;APESW.c,126 :: 		DFT1 = ((F2*2)-1)*150;
0x0116	0xF000C034  	MOVFF       _F2, R0
0x011A	0x3600      	RLCF        R0, 1 
0x011C	0x9000      	BCF         R0, 0 
0x011E	0x0600      	DECF        R0, 1 
0x0120	0x0E96      	MOVLW       150
0x0122	0x0200      	MULWF       R0 
0x0124	0xF003CFF3  	MOVFF       PRODL, R3
0x0128	0xF03CC003  	MOVFF       R3, _DFT1
;APESW.c,127 :: 		if ((DFT1>(DF2-Tht))&&(DFT1<(DF2+Tht))){
0x012C	0x502D      	MOVF        _ThT, 0 
0x012E	0x5C02      	SUBWF       R2, 0 
0x0130	0x6E01      	MOVWF       R1 
0x0132	0x6A02      	CLRF        R2 
0x0134	0x0E00      	MOVLW       0
0x0136	0x5A02      	SUBWFB      R2, 1 
0x0138	0x0E80      	MOVLW       128
0x013A	0x1802      	XORWF       R2, 0 
0x013C	0x6E00      	MOVWF       R0 
0x013E	0x0E80      	MOVLW       128
0x0140	0x5C00      	SUBWF       R0, 0 
0x0142	0xE102      	BNZ         L__Interrupt42
0x0144	0x5003      	MOVF        R3, 0 
0x0146	0x5C01      	SUBWF       R1, 0 
L__Interrupt42:
0x0148	0xE217      	BC          L_Interrupt15
0x014A	0x502D      	MOVF        _ThT, 0 
0x014C	0x2560      	ADDWF       _DF2, 0, 1
0x014E	0x6E01      	MOVWF       R1 
0x0150	0x6A02      	CLRF        R2 
0x0152	0x0E00      	MOVLW       0
0x0154	0x2202      	ADDWFC      R2, 1 
0x0156	0x0E80      	MOVLW       128
0x0158	0x6E00      	MOVWF       R0 
0x015A	0x0E80      	MOVLW       128
0x015C	0x1802      	XORWF       R2, 0 
0x015E	0x5C00      	SUBWF       R0, 0 
0x0160	0xE102      	BNZ         L__Interrupt43
0x0162	0x5001      	MOVF        R1, 0 
0x0164	0x5C3C      	SUBWF       _DFT1, 0 
L__Interrupt43:
0x0166	0xE208      	BC          L_Interrupt15
L__Interrupt31:
;APESW.c,128 :: 		RE1_bit = 1;
0x0168	0x8284      	BSF         RE1_bit, BitPos(RE1_bit+0) 
;APESW.c,129 :: 		DF2 = T2;
0x016A	0xF060C04F  	MOVFF       _T2, _DF2
;APESW.c,130 :: 		BF2 = 1;
0x016E	0x0E01      	MOVLW       1
0x0170	0x6E41      	MOVWF       _BF2 
0x0172	0x0E00      	MOVLW       0
0x0174	0x6E42      	MOVWF       _BF2+1 
;APESW.c,131 :: 		BF1 = 0;
0x0176	0x6A40      	CLRF        _BF1 
;APESW.c,132 :: 		}
L_Interrupt15:
;APESW.c,133 :: 		}
L_Interrupt12:
;APESW.c,135 :: 		if (BF2==1){
0x0178	0x0E00      	MOVLW       0
0x017A	0x1842      	XORWF       _BF2+1, 0 
0x017C	0xE102      	BNZ         L__Interrupt44
0x017E	0x0E01      	MOVLW       1
0x0180	0x1841      	XORWF       _BF2, 0 
L__Interrupt44:
0x0182	0xE138      	BNZ         L_Interrupt16
;APESW.c,136 :: 		F3++;
0x0184	0x0100      	MOVLB       0
0x0186	0x2A35      	INCF        _F3, 1 
;APESW.c,137 :: 		DF3 = (T2-DF2);
0x0188	0x5160      	MOVF        _DF2, 0, 1
0x018A	0x5C4F      	SUBWF       _T2, 0 
0x018C	0x6E02      	MOVWF       R2 
0x018E	0xF05FC002  	MOVFF       R2, _DF3
;APESW.c,138 :: 		DFT2 = ((F3*2)-1)*150;                       //!!!!!
0x0192	0xF000C035  	MOVFF       _F3, R0
0x0196	0x3600      	RLCF        R0, 1 
0x0198	0x9000      	BCF         R0, 0 
0x019A	0x0600      	DECF        R0, 1 
0x019C	0x0E96      	MOVLW       150
0x019E	0x0200      	MULWF       R0 
0x01A0	0xF003CFF3  	MOVFF       PRODL, R3
0x01A4	0xF03DC003  	MOVFF       R3, _DFT2
;APESW.c,139 :: 		if ((DFT2>(DF3-Tht))&&(DFT2<(DF3+Tht))){
0x01A8	0x502D      	MOVF        _ThT, 0 
0x01AA	0x5C02      	SUBWF       R2, 0 
0x01AC	0x6E01      	MOVWF       R1 
0x01AE	0x6A02      	CLRF        R2 
0x01B0	0x0E00      	MOVLW       0
0x01B2	0x5A02      	SUBWFB      R2, 1 
0x01B4	0x0E80      	MOVLW       128
0x01B6	0x1802      	XORWF       R2, 0 
0x01B8	0x6E00      	MOVWF       R0 
0x01BA	0x0E80      	MOVLW       128
0x01BC	0x5C00      	SUBWF       R0, 0 
0x01BE	0xE102      	BNZ         L__Interrupt45
0x01C0	0x5003      	MOVF        R3, 0 
0x01C2	0x5C01      	SUBWF       R1, 0 
L__Interrupt45:
0x01C4	0xE217      	BC          L_Interrupt19
0x01C6	0x502D      	MOVF        _ThT, 0 
0x01C8	0x245F      	ADDWF       _DF3, 0 
0x01CA	0x6E01      	MOVWF       R1 
0x01CC	0x6A02      	CLRF        R2 
0x01CE	0x0E00      	MOVLW       0
0x01D0	0x2202      	ADDWFC      R2, 1 
0x01D2	0x0E80      	MOVLW       128
0x01D4	0x6E00      	MOVWF       R0 
0x01D6	0x0E80      	MOVLW       128
0x01D8	0x1802      	XORWF       R2, 0 
0x01DA	0x5C00      	SUBWF       R0, 0 
0x01DC	0xE102      	BNZ         L__Interrupt46
0x01DE	0x5001      	MOVF        R1, 0 
0x01E0	0x5C3D      	SUBWF       _DFT2, 0 
L__Interrupt46:
0x01E2	0xE208      	BC          L_Interrupt19
L__Interrupt30:
;APESW.c,140 :: 		RE1_bit = 0;
0x01E4	0x9284      	BCF         RE1_bit, BitPos(RE1_bit+0) 
;APESW.c,141 :: 		DF3 = T2;
0x01E6	0xF05FC04F  	MOVFF       _T2, _DF3
;APESW.c,142 :: 		BF2 = 0;
0x01EA	0x6A41      	CLRF        _BF2 
0x01EC	0x6A42      	CLRF        _BF2+1 
;APESW.c,143 :: 		TMR1ON_bit = 0;                          //Apaga el TMR1.
0x01EE	0x90CD      	BCF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;APESW.c,144 :: 		contT = 0;                               //Limpia el contenido de la variable contT.
0x01F0	0x6A4B      	CLRF        _contT 
0x01F2	0x6A4C      	CLRF        _contT+1 
;APESW.c,145 :: 		}
L_Interrupt19:
;APESW.c,146 :: 		}
L_Interrupt16:
;APESW.c,148 :: 		T1 = contT;                                     //Actualiza T1 con el valor actual del contador contT.
0x01F4	0xF04DC04B  	MOVFF       _contT, _T1
0x01F8	0xF04EC04C  	MOVFF       _contT+1, _T1+1
;APESW.c,149 :: 		INTCON.INT0IF = 0;                              //Limpia la bandera de interrupcion de INT0.
0x01FC	0x92F2      	BCF         INTCON, 1 
;APESW.c,151 :: 		}
L_Interrupt5:
;APESW.c,153 :: 		if (TMR1IF_bit){
0x01FE	0xB09E      	BTFSC       TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;APESW.c,154 :: 		TMR1IF_bit=0;                             //Limpia la bandera de interrupcion de Timer1.
0x0200	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;APESW.c,155 :: 		}
L_Interrupt20:
;APESW.c,157 :: 		}
L_end_Interrupt:
L__Interrupt34:
0x0202	0xFFF3C019  	MOVFF       25, PROD
0x0206	0xFFF4C01A  	MOVFF       26, PRODH
0x020A	0xF000C018  	MOVFF       24, R0
0x020E	0xF001C017  	MOVFF       23, R1
0x0212	0xF002C016  	MOVFF       22, R2
0x0216	0xF003C015  	MOVFF       21, R3
0x021A	0xFFE1C01B  	MOVFF       27, FSR1L
0x021E	0xFFE2C01C  	MOVFF       28, FSR1H
0x0222	0x0011      	RETFIE      1
; end of _Interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0224	0x0E56      	MOVLW       86
0x0226	0x6E0C      	MOVWF       R12, 0
0x0228	0x0EB5      	MOVLW       181
0x022A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us6:
0x022C	0x2E0D      	DECFSZ      R13, 1, 0
0x022E	0xD7FE      	BRA         L_Delay_5500us6
0x0230	0x2E0C      	DECFSZ      R12, 1, 0
0x0232	0xD7FC      	BRA         L_Delay_5500us6
0x0234	0x0000      	NOP
0x0236	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0238	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x023A	0x0E03      	MOVLW       3
0x023C	0x6E0D      	MOVWF       R13, 0
L_Delay_1us0:
0x023E	0x2E0D      	DECFSZ      R13, 1, 0
0x0240	0xD7FE      	BRA         L_Delay_1us0
0x0242	0x0000      	NOP
0x0244	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0246	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0248	0x0EC7      	MOVLW       199
0x024A	0x6E0D      	MOVWF       R13, 0
L_Delay_50us3:
0x024C	0x2E0D      	DECFSZ      R13, 1, 0
0x024E	0xD7FE      	BRA         L_Delay_50us3
0x0250	0x0000      	NOP
0x0252	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0254	0x0012      	RETURN      0
; end of _Delay_50us
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0256	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0258	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x025A	0xF001EF36  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x025E	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x0260	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x0262	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x0264	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0266	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0268	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x026A	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x026C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x026E	0x0012      	RETURN      0
; end of _SETFUN32
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x0270	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x0272	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0274	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x0276	0x0012      	RETURN      0
; end of _FIXSIGN32
_SETFOV32:
;__Lib_MathDouble.c,82 :: 		
;__Lib_MathDouble.c,90 :: 		
0x0278	0x820B      	BSF         R11, 1, 0
;__Lib_MathDouble.c,91 :: 		
0x027A	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,92 :: 		
0x027C	0xF001EF46  	GOTO        SETFOV32EEE
;__Lib_MathDouble.c,94 :: 		
0x0280	0x6803      	SETF        R3, 0
;__Lib_MathDouble.c,95 :: 		
0x0282	0x6802      	SETF        R2, 0
;__Lib_MathDouble.c,96 :: 		
0x0284	0x6801      	SETF        R1, 0
;__Lib_MathDouble.c,97 :: 		
0x0286	0x6800      	SETF        R0, 0
;__Lib_MathDouble.c,98 :: 		
0x0288	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,99 :: 		
0x028A	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,100 :: 		
SETFOV32EEE:
;__Lib_MathDouble.c,101 :: 		
0x028C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,103 :: 		
L_end_SETFOV32:
0x028E	0x0012      	RETURN      0
; end of _SETFOV32
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0290	0x0100      	MOVLB       0
0x0292	0xBF9B      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0294	0xD002      	BRA         L__Lcd_Cmd21
0x0296	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0298	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x029A	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x029C	0xBD9B      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x029E	0xD002      	BRA         L__Lcd_Cmd23
0x02A0	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x02A2	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x02A4	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x02A6	0xBB9B      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x02A8	0xD002      	BRA         L__Lcd_Cmd25
0x02AA	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x02AC	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x02AE	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x02B0	0xB99B      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x02B2	0xD002      	BRA         L__Lcd_Cmd27
0x02B4	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x02B6	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x02B8	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x02BA	0xB05A      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x02BC	0xD002      	BRA         L__Lcd_Cmd29
0x02BE	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x02C0	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x02C2	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x02C4	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x02C6	0xDFB9      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x02C8	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x02CA	0xB79B      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x02CC	0xD002      	BRA         L__Lcd_Cmd31
0x02CE	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x02D0	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x02D2	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x02D4	0xB59B      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x02D6	0xD002      	BRA         L__Lcd_Cmd33
0x02D8	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x02DA	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x02DC	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x02DE	0xB39B      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x02E0	0xD002      	BRA         L__Lcd_Cmd35
0x02E2	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x02E4	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x02E6	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x02E8	0xB19B      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x02EA	0xD002      	BRA         L__Lcd_Cmd37
0x02EC	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x02EE	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x02F0	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x02F2	0xB05A      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x02F4	0xD002      	BRA         L__Lcd_Cmd39
0x02F6	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x02F8	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x02FA	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x02FC	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x02FE	0xDF9D      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0300	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x0302	0xA05A      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0304	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0306	0xDF8E      	RCALL       _Delay_5500us
0x0308	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x030A	0xDF9E      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x030C	0x0012      	RETURN      0
; end of _Lcd_Cmd
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x030E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x0310	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x0312	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x0314	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x0316	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x0318	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x031A	0x0012      	RETURN      0
; end of _RES032
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x031C	0x905A      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x031E	0xF09BC097  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0322	0xDFB6      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0324	0x805A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0326	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_SETFDZ32:
;__Lib_MathDouble.c,106 :: 		
;__Lib_MathDouble.c,110 :: 		
0x0328	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,111 :: 		
0x032A	0x860B      	BSF         R11, 3, 0
;__Lib_MathDouble.c,112 :: 		
0x032C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,114 :: 		
L_end_SETFDZ32:
0x032E	0x0012      	RETURN      0
; end of _SETFDZ32
_Compare_Double:
;__Lib_MathDouble.c,2518 :: 		
;__Lib_MathDouble.c,2529 :: 		
0x0330	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2530 :: 		
0x0332	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2531 :: 		
0x0334	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2532 :: 		
0x0336	0x800A      	BSF         R10, 0, 0
;__Lib_MathDouble.c,2533 :: 		
0x0338	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2534 :: 		
0x033A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2535 :: 		
0x033C	0x820A      	BSF         R10, 1, 0
;__Lib_MathDouble.c,2537 :: 		
0x033E	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2538 :: 		
0x0340	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2539 :: 		
0x0342	0xF001EFFB  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2540 :: 		
0x0346	0x0A03      	XORLW       3
;__Lib_MathDouble.c,2541 :: 		
0x0348	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2542 :: 		
0x034A	0xF001EFB4  	GOTO        COMPARE_NOTZERO
;__Lib_MathDouble.c,2544 :: 		
0x034E	0xB00A      	BTFSC       R10, 0, 0
;__Lib_MathDouble.c,2545 :: 		
0x0350	0xF001EFAF  	GOTO        COMPARE_XNOTZERO
;__Lib_MathDouble.c,2547 :: 		
0x0354	0xAE06      	BTFSS       R6, 7, 0
;__Lib_MathDouble.c,2548 :: 		
0x0356	0xF001EFF9  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2549 :: 		
0x035A	0xF001EFF7  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2550 :: 		
COMPARE_XNOTZERO:
;__Lib_MathDouble.c,2551 :: 		
0x035E	0xAE02      	BTFSS       R2, 7, 0
;__Lib_MathDouble.c,2552 :: 		
0x0360	0xF001EFF7  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2553 :: 		
0x0364	0xF001EFF9  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2555 :: 		
COMPARE_NOTZERO:
;__Lib_MathDouble.c,2556 :: 		
0x0368	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2557 :: 		
0x036A	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2558 :: 		
0x036C	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,2559 :: 		
0x036E	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,2561 :: 		
0x0370	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2562 :: 		
0x0372	0x0B80      	ANDLW       128
;__Lib_MathDouble.c,2563 :: 		
0x0374	0x9E06      	BCF         R6, 7, 0
;__Lib_MathDouble.c,2565 :: 		
0x0376	0x180A      	XORWF       R10, 0, 0
;__Lib_MathDouble.c,2566 :: 		
0x0378	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2567 :: 		
0x037A	0xF001EFC5  	GOTO        COMPARE_TESTALL
;__Lib_MathDouble.c,2569 :: 		
0x037E	0x500A      	MOVF        R10, 0, 0
;__Lib_MathDouble.c,2570 :: 		
0x0380	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2571 :: 		
0x0382	0xF001EFF7  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2572 :: 		
0x0386	0xF001EFF9  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2574 :: 		
COMPARE_TESTALL:
;__Lib_MathDouble.c,2575 :: 		
0x038A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,2576 :: 		
0x038C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2577 :: 		
0x038E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2578 :: 		
0x0390	0xF001EFCF  	GOTO        COMPARE_C1
;__Lib_MathDouble.c,2579 :: 		
0x0394	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2580 :: 		
0x0396	0xF001EFEB  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2581 :: 		
0x039A	0xF001EFF1  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2582 :: 		
COMPARE_C1:
;__Lib_MathDouble.c,2583 :: 		
0x039E	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,2584 :: 		
0x03A0	0x5C02      	SUBWF       R2, 0, 0
;__Lib_MathDouble.c,2585 :: 		
0x03A2	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2586 :: 		
0x03A4	0xF001EFD9  	GOTO        COMPARE_C2
;__Lib_MathDouble.c,2587 :: 		
0x03A8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2588 :: 		
0x03AA	0xF001EFEB  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2589 :: 		
0x03AE	0xF001EFF1  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2590 :: 		
COMPARE_C2:
;__Lib_MathDouble.c,2591 :: 		
0x03B2	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,2592 :: 		
0x03B4	0x5C01      	SUBWF       R1, 0, 0
;__Lib_MathDouble.c,2593 :: 		
0x03B6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2594 :: 		
0x03B8	0xF001EFE3  	GOTO        COMPARE_C3
;__Lib_MathDouble.c,2595 :: 		
0x03BC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2596 :: 		
0x03BE	0xF001EFEB  	GOTO        GT_FALSE
;__Lib_MathDouble.c,2597 :: 		
0x03C2	0xF001EFF1  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2598 :: 		
COMPARE_C3:
;__Lib_MathDouble.c,2599 :: 		
0x03C6	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,2600 :: 		
0x03C8	0x5C00      	SUBWF       R0, 0, 0
;__Lib_MathDouble.c,2601 :: 		
0x03CA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2602 :: 		
0x03CC	0xF001EFFB  	GOTO        COMPARE_EQU
;__Lib_MathDouble.c,2603 :: 		
0x03D0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,2604 :: 		
0x03D2	0xF001EFF1  	GOTO        GT_TRUE
;__Lib_MathDouble.c,2606 :: 		
GT_FALSE:
;__Lib_MathDouble.c,2607 :: 		
0x03D6	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2608 :: 		
0x03D8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2609 :: 		
0x03DA	0xF001EFF9  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2610 :: 		
0x03DE	0xF001EFF7  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2611 :: 		
GT_TRUE:
;__Lib_MathDouble.c,2612 :: 		
0x03E2	0x520A      	MOVF        R10, 1, 0
;__Lib_MathDouble.c,2613 :: 		
0x03E4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2614 :: 		
0x03E6	0xF001EFF7  	GOTO        COMPARE_GT
;__Lib_MathDouble.c,2615 :: 		
0x03EA	0xF001EFF9  	GOTO        COMPARE_LT
;__Lib_MathDouble.c,2617 :: 		
COMPARE_GT:
;__Lib_MathDouble.c,2620 :: 		
0x03EE	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2621 :: 		
0x03F0	0x0012      	RETURN      0
;__Lib_MathDouble.c,2622 :: 		
COMPARE_LT:
;__Lib_MathDouble.c,2625 :: 		
0x03F2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2626 :: 		
0x03F4	0x0012      	RETURN      0
;__Lib_MathDouble.c,2627 :: 		
COMPARE_EQU:
;__Lib_MathDouble.c,2630 :: 		
0x03F6	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,2631 :: 		
0x03F8	0x84D8      	BSF         STATUS, 2, 0
;__Lib_MathDouble.c,2632 :: 		
0x03FA	0x0012      	RETURN      0
;__Lib_MathDouble.c,2634 :: 		
L_end_Compare_Double:
0x03FC	0x0012      	RETURN      0
; end of _Compare_Double
_Div_8X8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x03FE	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0400	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x0402	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x0404	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x0406	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0408	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x040A	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x040C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x040E	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0410	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x0412	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x0414	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x0416	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0418	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8X8_U:
0x041A	0x0012      	RETURN      0
; end of _Div_8X8_U
_Mul_32x32_FP:
;__Lib_MathDouble.c,1130 :: 		
;__Lib_MathDouble.c,1148 :: 		
0x041C	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1149 :: 		
0x041E	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1151 :: 		
0x0420	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1152 :: 		
0x0422	0x6207      	CPFSEQ      R7, 0
;__Lib_MathDouble.c,1153 :: 		
0x0424	0x6403      	CPFSGT      R3, 0
;__Lib_MathDouble.c,1154 :: 		
0x0426	0xF002EF93  	GOTO        MULJPRES032
;__Lib_MathDouble.c,1157 :: 		
0x042A	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1158 :: 		
0x042C	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1159 :: 		
0x042E	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1161 :: 		
0x0430	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1162 :: 		
0x0432	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1163 :: 		
0x0434	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1164 :: 		
0x0436	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1165 :: 		
0x0438	0xF002EF24  	GOTO        MTUN32
;__Lib_MathDouble.c,1167 :: 		
0x043C	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1168 :: 		
0x043E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1169 :: 		
0x0440	0xF002EF97  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1170 :: 		
0x0444	0xF002EF28  	GOTO        MOK32
;__Lib_MathDouble.c,1172 :: 		
MTUN32:
;__Lib_MathDouble.c,1173 :: 		
0x0448	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1174 :: 		
0x044A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1175 :: 		
0x044C	0xF002EF9B  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1177 :: 		
MOK32:
;__Lib_MathDouble.c,1178 :: 		
0x0450	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1179 :: 		
0x0452	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1181 :: 		
0x0454	0xF00EC002  	MOVFF       R2, R14
;__Lib_MathDouble.c,1182 :: 		
0x0458	0xF00BC001  	MOVFF       R1, R11
;__Lib_MathDouble.c,1183 :: 		
0x045C	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1185 :: 		
0x0460	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,1186 :: 		
0x0462	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1187 :: 		
0x0464	0xF00CCFF4  	MOVFF       PRODH, R12
;__Lib_MathDouble.c,1189 :: 		
0x0468	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,1190 :: 		
0x046A	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1191 :: 		
0x046C	0xF000CFF4  	MOVFF       PRODH, R0
;__Lib_MathDouble.c,1192 :: 		
0x0470	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_MathDouble.c,1194 :: 		
0x0474	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1195 :: 		
0x0476	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1196 :: 		
0x0478	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1197 :: 		
0x047A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1198 :: 		
0x047C	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1199 :: 		
0x047E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1200 :: 		
0x0480	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1202 :: 		
0x0482	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1203 :: 		
0x0484	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1204 :: 		
0x0486	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1205 :: 		
0x0488	0x260C      	ADDWF       R12, 1, 0
;__Lib_MathDouble.c,1206 :: 		
0x048A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1207 :: 		
0x048C	0x2208      	ADDWFC      R8, 1, 0
;__Lib_MathDouble.c,1208 :: 		
0x048E	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1209 :: 		
0x0490	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1211 :: 		
0x0492	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1212 :: 		
0x0494	0x0204      	MULWF       R4, 0
;__Lib_MathDouble.c,1213 :: 		
0x0496	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1214 :: 		
0x0498	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1215 :: 		
0x049A	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1216 :: 		
0x049C	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1217 :: 		
0x049E	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1218 :: 		
0x04A0	0x0205      	MULWF       R5, 0
;__Lib_MathDouble.c,1219 :: 		
0x04A2	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,1220 :: 		
0x04A4	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1221 :: 		
0x04A6	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1222 :: 		
0x04A8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1223 :: 		
0x04AA	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1224 :: 		
0x04AC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1225 :: 		
0x04AE	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1227 :: 		
0x04B0	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1228 :: 		
0x04B2	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1229 :: 		
0x04B4	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1230 :: 		
0x04B6	0x2608      	ADDWF       R8, 1, 0
;__Lib_MathDouble.c,1231 :: 		
0x04B8	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1232 :: 		
0x04BA	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1233 :: 		
0x04BC	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,1234 :: 		
0x04BE	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1235 :: 		
0x04C0	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1236 :: 		
0x04C2	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1238 :: 		
0x04C4	0x500B      	MOVF        R11, 0, 0
;__Lib_MathDouble.c,1239 :: 		
0x04C6	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1240 :: 		
0x04C8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1241 :: 		
0x04CA	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1242 :: 		
0x04CC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1243 :: 		
0x04CE	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1244 :: 		
0x04D0	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1245 :: 		
0x04D2	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1247 :: 		
0x04D4	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,1248 :: 		
0x04D6	0x0206      	MULWF       R6, 0
;__Lib_MathDouble.c,1249 :: 		
0x04D8	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_MathDouble.c,1250 :: 		
0x04DA	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1251 :: 		
0x04DC	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_MathDouble.c,1252 :: 		
0x04DE	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1254 :: 		
0x04E0	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,1255 :: 		
0x04E2	0xF002EF7B  	GOTO        MROUND32
;__Lib_MathDouble.c,1256 :: 		
0x04E6	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1257 :: 		
0x04E8	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1258 :: 		
0x04EA	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1259 :: 		
0x04EC	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1260 :: 		
0x04EE	0x0603      	DECF        R3, 1, 0
;__Lib_MathDouble.c,1261 :: 		
0x04F0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1262 :: 		
0x04F2	0xF002EF9B  	GOTO        MULJPSETFUN32
;__Lib_MathDouble.c,1264 :: 		
MROUND32:
;__Lib_MathDouble.c,1267 :: 		
0x04F6	0xF002EF8E  	GOTO        MUL32OK
;__Lib_MathDouble.c,1268 :: 		
0x04FA	0x80D8      	BSF         STATUS, 0, 0
;__Lib_MathDouble.c,1269 :: 		
0x04FC	0x0E80      	MOVLW       128
;__Lib_MathDouble.c,1270 :: 		
0x04FE	0x6408      	CPFSGT      R8, 0
;__Lib_MathDouble.c,1271 :: 		
0x0500	0x3000      	RRCF        R0, 0, 0
;__Lib_MathDouble.c,1272 :: 		
0x0502	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1273 :: 		
0x0504	0x2200      	ADDWFC      R0, 1, 0
;__Lib_MathDouble.c,1274 :: 		
0x0506	0x2201      	ADDWFC      R1, 1, 0
;__Lib_MathDouble.c,1275 :: 		
0x0508	0x2202      	ADDWFC      R2, 1, 0
;__Lib_MathDouble.c,1277 :: 		
0x050A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1278 :: 		
0x050C	0xF002EF8E  	GOTO        MUL32OK
;__Lib_MathDouble.c,1279 :: 		
0x0510	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1280 :: 		
0x0512	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1281 :: 		
0x0514	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1282 :: 		
0x0516	0x4A03      	INFSNZ      R3, 1, 0
;__Lib_MathDouble.c,1283 :: 		
0x0518	0xF002EF97  	GOTO        MULJPSETFOV32
;__Lib_MathDouble.c,1285 :: 		
MUL32OK:
;__Lib_MathDouble.c,1286 :: 		
0x051C	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1287 :: 		
0x051E	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,1289 :: 		
0x0520	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,1290 :: 		
0x0522	0xF002EF9D  	GOTO        MULEEE
;__Lib_MathDouble.c,1291 :: 		
MULJPRES032:
;__Lib_MathDouble.c,1292 :: 		
0x0526	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1295 :: 		
0x0528	0xDEF2      	RCALL       _RES032
;__Lib_MathDouble.c,1297 :: 		
0x052A	0xF002EF9D  	GOTO        MULEEE
;__Lib_MathDouble.c,1298 :: 		
MULJPSETFOV32:
;__Lib_MathDouble.c,1299 :: 		
0x052E	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1302 :: 		
0x0530	0xDEA3      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1304 :: 		
0x0532	0xF002EF9D  	GOTO        MULEEE
;__Lib_MathDouble.c,1305 :: 		
MULJPSETFUN32:
;__Lib_MathDouble.c,1306 :: 		
0x0536	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1309 :: 		
0x0538	0xDE8E      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1311 :: 		
MULEEE:
;__Lib_MathDouble.c,1318 :: 		
L_end_Mul_32x32_FP:
0x053A	0x0012      	RETURN      0
; end of _Mul_32x32_FP
_SETIOV3224:
;__Lib_MathDouble.c,530 :: 		
;__Lib_MathDouble.c,537 :: 		
0x053C	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,538 :: 		
0x053E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,539 :: 		
0x0540	0xF002EFAA  	GOTO        SETIOV3224EEE
;__Lib_MathDouble.c,541 :: 		
0x0544	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,542 :: 		
0x0546	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,543 :: 		
0x0548	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,544 :: 		
0x054A	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,545 :: 		
0x054C	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,546 :: 		
0x054E	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,547 :: 		
0x0550	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,548 :: 		
0x0552	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,549 :: 		
SETIOV3224EEE:
;__Lib_MathDouble.c,550 :: 		
0x0554	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,552 :: 		
L_end_SETIOV3224:
0x0556	0x0012      	RETURN      0
; end of _SETIOV3224
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x0558	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x055A	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x055C	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x055E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x0560	0xF002EFC5  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0564	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x0568	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x056C	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x056E	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x0570	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x0572	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0574	0xF002EFC5  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x0578	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x057C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x057E	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x0580	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x0582	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x0584	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x0586	0xF002EFD7  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x058A	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x058C	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x058E	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x0590	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x0592	0xF002EFDC  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x0596	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x0598	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x059A	0xF002EFE1  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x059E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x05A0	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x05A2	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x05A4	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x05A6	0xF002EFCC  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x05AA	0xF002EFDC  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x05AE	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x05B0	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x05B2	0xDEAD      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x05B4	0xF002EFE4  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x05B8	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x05BA	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x05BC	0xDE4C      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x05BE	0xF002EFE4  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x05C2	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x05C4	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x05C6	0xDE54      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x05C8	0x0012      	RETURN      0
; end of _NRM3232
_strcpy:
;__Lib_CString.c,133 :: 		
;__Lib_CString.c,136 :: 		
0x05CA	0xF004C097  	MOVFF       FARG_strcpy_to, R4
0x05CE	0xF005C098  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,137 :: 		
L_strcpy34:
0x05D2	0xF002C004  	MOVFF       R4, R2
0x05D6	0xF003C005  	MOVFF       R5, R3
0x05DA	0x4A04      	INFSNZ      R4, 1 
0x05DC	0x2A05      	INCF        R5, 1 
0x05DE	0xF000C099  	MOVFF       FARG_strcpy_from, R0
0x05E2	0xF001C09A  	MOVFF       FARG_strcpy_from+1, R1
0x05E6	0x0100      	MOVLB       0
0x05E8	0x4B99      	INFSNZ      FARG_strcpy_from, 1, 1
0x05EA	0x2B9A      	INCF        FARG_strcpy_from+1, 1, 1
0x05EC	0xFFE9C000  	MOVFF       R0, FSR0L
0x05F0	0xFFEAC001  	MOVFF       R1, FSR0H
0x05F4	0xFFE1C002  	MOVFF       R2, FSR1L
0x05F8	0xFFE2C003  	MOVFF       R3, FSR1H
0x05FC	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0600	0xFFE9C002  	MOVFF       R2, FSR0L
0x0604	0xFFEAC003  	MOVFF       R3, FSR0H
0x0608	0x52EE      	MOVF        POSTINC0, 1 
0x060A	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,138 :: 		
0x060C	0xD7E2      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,139 :: 		
0x060E	0xF000C097  	MOVFF       FARG_strcpy_to, R0
0x0612	0xF001C098  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,140 :: 		
L_end_strcpy:
0x0616	0x0012      	RETURN      0
; end of _strcpy
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0618	0x0EFF      	MOVLW       _UART1_Write
0x061A	0x0100      	MOVLB       0
0x061C	0x6F65      	MOVWF       _UART_Wr_Ptr, 1
0x061E	0x0EFF      	MOVLW       hi_addr(_UART1_Write)
0x0620	0x6F66      	MOVWF       _UART_Wr_Ptr+1, 1
0x0622	0x0EFF      	MOVLW       FARG_UART1_Write_data_
0x0624	0x6F67      	MOVWF       _UART_Wr_Ptr+2, 1
0x0626	0x0EFF      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0628	0x6F68      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x062A	0x0EFF      	MOVLW       _UART1_Read
0x062C	0x6F69      	MOVWF       _UART_Rd_Ptr, 1
0x062E	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x0630	0x6F6A      	MOVWF       _UART_Rd_Ptr+1, 1
0x0632	0x0E00      	MOVLW       0
0x0634	0x6F6B      	MOVWF       _UART_Rd_Ptr+2, 1
0x0636	0x0E00      	MOVLW       0
0x0638	0x6F6C      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x063A	0x0EFF      	MOVLW       _UART1_Data_Ready
0x063C	0x6F61      	MOVWF       _UART_Rdy_Ptr, 1
0x063E	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0640	0x6F62      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0642	0x0E00      	MOVLW       0
0x0644	0x6F63      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0646	0x0E00      	MOVLW       0
0x0648	0x6F64      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x064A	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x064C	0x6E5B      	MOVWF       _UART_Tx_Idle_Ptr 
0x064E	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0650	0x6E5C      	MOVWF       _UART_Tx_Idle_Ptr+1 
0x0652	0x0E00      	MOVLW       0
0x0654	0x6E5D      	MOVWF       _UART_Tx_Idle_Ptr+2 
0x0656	0x0E00      	MOVLW       0
0x0658	0x6E5E      	MOVWF       _UART_Tx_Idle_Ptr+3 
;__Lib_UART_c67.c,23 :: 		
0x065A	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x065C	0x0E90      	MOVLW       144
0x065E	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0660	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0662	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0664	0xAA9E      	BTFSS       PIR1, 5 
0x0666	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0668	0xF000CFAE  	MOVFF       RCREG, R0
0x066C	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x066E	0x0012      	RETURN      0
; end of _UART1_Init
_word2double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x0670	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x0672	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x0674	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x0676	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x0678	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x067A	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x067C	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x067E	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x0680	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x0682	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x0684	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x0686	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x0688	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x068C	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x0690	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x0692	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x0694	0xDF61      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
L_end_word2double:
0x0696	0x0012      	RETURN      0
; end of _word2double
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0698	0x9695      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x069A	0x9495      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x069C	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x069E	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x06A0	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x06A2	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x06A4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x06A6	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x06A8	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x06AA	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x06AC	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x06AE	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x06B0	0xDDB9      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x06B2	0xDDB8      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x06B4	0xDDB7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x06B6	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x06B8	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x06BA	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x06BC	0xDDBE      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x06BE	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x06C0	0xDDB1      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x06C2	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x06C4	0xDDBA      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x06C6	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x06C8	0xDDAD      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x06CA	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x06CC	0xDDB6      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x06CE	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x06D0	0xDDA9      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x06D2	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x06D4	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x06D6	0xDDB1      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x06D8	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x06DA	0xDDA4      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x06DC	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x06DE	0xDDAD      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x06E0	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x06E2	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x06E4	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x06E6	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x06E8	0xDDA8      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x06EA	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x06EC	0xDD9B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x06EE	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x06F0	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x06F2	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x06F4	0xDDA2      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x06F6	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x06F8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x06FA	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x06FC	0xDD9E      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x06FE	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0700	0xDD91      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0702	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0704	0xDD9A      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0706	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0708	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x070A	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x070C	0xDD96      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x070E	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0710	0xDD89      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0712	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x0714	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0716	0xDD91      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0718	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x071A	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x071C	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x071E	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0720	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x0722	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x0724	0xDD8A      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0726	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0728	0xDD7D      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x072A	0x805A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x072C	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x072E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0730	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0734	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0736	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0738	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x073A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x073C	0x0012      	RETURN      0
; end of ___CC2DW
_Configuracion:
;APESW.c,191 :: 		void Configuracion() {
;APESW.c,193 :: 		INTCON.GIE = 1;                             //Habilita las interrupciones globales
0x073E	0x8EF2      	BSF         INTCON, 7 
;APESW.c,194 :: 		INTCON.PEIE = 1;                            //Habilita las interrupciones perifericas
0x0740	0x8CF2      	BSF         INTCON, 6 
;APESW.c,196 :: 		INTCON.INT0IE = 1;                          //Habilita la interrupcion externas en INT0  !!!
0x0742	0x88F2      	BSF         INTCON, 4 
;APESW.c,197 :: 		INTCON2.RBPU = 1;                           //PORTB pull-ups are enabled by individual port latch values
0x0744	0x8EF1      	BSF         INTCON2, 7 
;APESW.c,198 :: 		INTCON2.INTEDG0 = 1;                        //Habilita la interrupcion por flanco de subida
0x0746	0x8CF1      	BSF         INTCON2, 6 
;APESW.c,200 :: 		ADCON1 = 0b00001111;                        //Configuracion ADCON1
0x0748	0x0E0F      	MOVLW       15
0x074A	0x6EC1      	MOVWF       ADCON1 
;APESW.c,201 :: 		CMCON = 0b00000111;
0x074C	0x0E07      	MOVLW       7
0x074E	0x6EB4      	MOVWF       CMCON 
;APESW.c,203 :: 		T1CON=0x00;                                 //Configuracion T1CON: 16 bits, Timer1 Off, Pre-escalador 1:1
0x0750	0x6ACD      	CLRF        T1CON 
;APESW.c,204 :: 		TMR1IE_bit = 1;                             //Habilita la interrupcion por desborde de Timer1
0x0752	0x809D      	BSF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;APESW.c,206 :: 		T2CON = 0x00;                               //Configuracion T2CON: Post-escalador 1:1, Timer2 Off, Pre-escalador 1:1
0x0754	0x6ACA      	CLRF        T2CON 
;APESW.c,207 :: 		PIE1.TMR2IE = 1;                            //Habilita la interrupcion por desborde de Timer2                        ====> La interrupcion del TMR2 interfiere con la conversion del DHT22
0x0756	0x829D      	BSF         PIE1, 1 
;APESW.c,208 :: 		PR2 = 149;                                  //Produce una interrupcion cada 12,5us
0x0758	0x0E95      	MOVLW       149
0x075A	0x6ECB      	MOVWF       PR2 
;APESW.c,209 :: 		TMR2ON_bit=1;
0x075C	0x84CA      	BSF         TMR2ON_bit, BitPos(TMR2ON_bit+0) 
;APESW.c,211 :: 		TRISD0_bit = 0;                             //Establece el pin D0 como salida
0x075E	0x9095      	BCF         TRISD0_bit, BitPos(TRISD0_bit+0) 
;APESW.c,212 :: 		TRISD1_bit = 0;                             //Establece el pin D1 como salida
0x0760	0x9295      	BCF         TRISD1_bit, BitPos(TRISD1_bit+0) 
;APESW.c,214 :: 		TRISE0_bit = 0;
0x0762	0x9096      	BCF         TRISE0_bit, BitPos(TRISE0_bit+0) 
;APESW.c,215 :: 		TRISE1_bit = 0;
0x0764	0x9296      	BCF         TRISE1_bit, BitPos(TRISE1_bit+0) 
;APESW.c,217 :: 		TRISB = 0x07;                               //Establece los pines B0, B1 y B2 como entradas
0x0766	0x0E07      	MOVLW       7
0x0768	0x6E93      	MOVWF       TRISB 
;APESW.c,219 :: 		}
L_end_Configuracion:
0x076A	0x0012      	RETURN      0
; end of _Configuracion
_Div_32x32_FP:
;__Lib_MathDouble.c,1325 :: 		
;__Lib_MathDouble.c,1339 :: 		
0x076C	0x5004      	MOVF        R4, 0 
0x076E	0x0A00      	XORLW       0
0x0770	0xE112      	BNZ         L_Div_32x32_FP11
;__Lib_MathDouble.c,1340 :: 		
0x0772	0x5005      	MOVF        R5, 0 
0x0774	0x0A00      	XORLW       0
0x0776	0xE10F      	BNZ         L_Div_32x32_FP12
;__Lib_MathDouble.c,1341 :: 		
0x0778	0x5006      	MOVF        R6, 0 
0x077A	0x0A00      	XORLW       0
0x077C	0xE10C      	BNZ         L_Div_32x32_FP13
;__Lib_MathDouble.c,1342 :: 		
0x077E	0x5007      	MOVF        R7, 0 
0x0780	0x0A00      	XORLW       0
0x0782	0xE109      	BNZ         L_Div_32x32_FP14
;__Lib_MathDouble.c,1343 :: 		
0x0784	0x0EFF      	MOVLW       255
0x0786	0x6E00      	MOVWF       R0 
;__Lib_MathDouble.c,1344 :: 		
0x0788	0x0EFF      	MOVLW       255
0x078A	0x6E01      	MOVWF       R1 
;__Lib_MathDouble.c,1345 :: 		
0x078C	0x0E7F      	MOVLW       127
0x078E	0x6E02      	MOVWF       R2 
;__Lib_MathDouble.c,1346 :: 		
0x0790	0x0EFF      	MOVLW       255
0x0792	0x6E03      	MOVWF       R3 
;__Lib_MathDouble.c,1347 :: 		
0x0794	0xD0A4      	BRA         L_end_Div_32x32_FP
;__Lib_MathDouble.c,1348 :: 		
L_Div_32x32_FP14:
L_Div_32x32_FP13:
L_Div_32x32_FP12:
L_Div_32x32_FP11:
;__Lib_MathDouble.c,1353 :: 		
0x0796	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1354 :: 		
0x0798	0x6A09      	CLRF        R9, 0
;__Lib_MathDouble.c,1356 :: 		
0x079A	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1357 :: 		
0x079C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1358 :: 		
0x079E	0xF004EF61  	GOTO        JPDSETFDZ32
;__Lib_MathDouble.c,1360 :: 		
0x07A2	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,1361 :: 		
0x07A4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1362 :: 		
0x07A6	0xF004EF65  	GOTO        JPDRES032
;__Lib_MathDouble.c,1364 :: 		
0x07AA	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,1365 :: 		
0x07AC	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,1366 :: 		
0x07AE	0x6E0A      	MOVWF       R10, 0
;__Lib_MathDouble.c,1367 :: 		
0x07B0	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,1368 :: 		
0x07B2	0x8E06      	BSF         R6, 7, 0
;__Lib_MathDouble.c,1370 :: 		
0x07B4	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,1371 :: 		
0x07B6	0xF008C002  	MOVFF       R2, R8
;__Lib_MathDouble.c,1372 :: 		
0x07BA	0xF00CC001  	MOVFF       R1, R12
;__Lib_MathDouble.c,1373 :: 		
0x07BE	0xF00DC000  	MOVFF       R0, R13
;__Lib_MathDouble.c,1375 :: 		
0x07C2	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1376 :: 		
0x07C4	0x5E0D      	SUBWF       R13, 1, 0
;__Lib_MathDouble.c,1377 :: 		
0x07C6	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1378 :: 		
0x07C8	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1379 :: 		
0x07CA	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1381 :: 		
0x07CC	0x5E0C      	SUBWF       R12, 1, 0
;__Lib_MathDouble.c,1382 :: 		
0x07CE	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1383 :: 		
0x07D0	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1384 :: 		
0x07D2	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1386 :: 		
0x07D4	0x5E08      	SUBWF       R8, 1, 0
;__Lib_MathDouble.c,1387 :: 		
0x07D6	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,1388 :: 		
0x07D8	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,1389 :: 		
0x07DA	0x6A0D      	CLRF        R13, 0
;__Lib_MathDouble.c,1390 :: 		
0x07DC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1391 :: 		
0x07DE	0xF003EFF8  	GOTO        DALIGN32OK
;__Lib_MathDouble.c,1393 :: 		
0x07E2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1394 :: 		
0x07E4	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,1395 :: 		
0x07E6	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,1396 :: 		
0x07E8	0x3200      	RRCF        R0, 1, 0
;__Lib_MathDouble.c,1397 :: 		
0x07EA	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1398 :: 		
0x07EC	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1399 :: 		
0x07EE	0x6E0E      	MOVWF       R14, 0
;__Lib_MathDouble.c,1400 :: 		
DALIGN32OK:
;__Lib_MathDouble.c,1401 :: 		
0x07F0	0x5007      	MOVF        R7, 0, 0
;__Lib_MathDouble.c,1402 :: 		
0x07F2	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,1403 :: 		
0x07F4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1404 :: 		
0x07F6	0xF004EF05  	GOTO        ALTB32
;__Lib_MathDouble.c,1406 :: 		
0x07FA	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1407 :: 		
0x07FC	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1408 :: 		
0x07FE	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1409 :: 		
0x0800	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1410 :: 		
0x0802	0xF004EF69  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1411 :: 		
0x0806	0xF004EF0B  	GOTO        DARGOK32
;__Lib_MathDouble.c,1412 :: 		
ALTB32:
;__Lib_MathDouble.c,1413 :: 		
0x080A	0x0E7E      	MOVLW       126
;__Lib_MathDouble.c,1414 :: 		
0x080C	0x240E      	ADDWF       R14, 0, 0
;__Lib_MathDouble.c,1415 :: 		
0x080E	0x2603      	ADDWF       R3, 1, 0
;__Lib_MathDouble.c,1416 :: 		
0x0810	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1417 :: 		
0x0812	0xF004EF6D  	GOTO        JPDSETFUN32
;__Lib_MathDouble.c,1418 :: 		
DARGOK32:
;__Lib_MathDouble.c,1419 :: 		
0x0816	0x0E18      	MOVLW       24
;__Lib_MathDouble.c,1420 :: 		
0x0818	0x6E0B      	MOVWF       R11, 0
;__Lib_MathDouble.c,1421 :: 		
DLOOP32:
;__Lib_MathDouble.c,1422 :: 		
0x081A	0x360D      	RLCF        R13, 1, 0
;__Lib_MathDouble.c,1423 :: 		
0x081C	0x360C      	RLCF        R12, 1, 0
;__Lib_MathDouble.c,1424 :: 		
0x081E	0x3608      	RLCF        R8, 1, 0
;__Lib_MathDouble.c,1425 :: 		
0x0820	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1426 :: 		
0x0822	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1427 :: 		
0x0824	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1428 :: 		
0x0826	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1430 :: 		
0x0828	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1431 :: 		
0x082A	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1432 :: 		
0x082C	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1433 :: 		
0x082E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1434 :: 		
0x0830	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1436 :: 		
0x0832	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1437 :: 		
0x0834	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1438 :: 		
0x0836	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1439 :: 		
0x0838	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1441 :: 		
0x083A	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1442 :: 		
0x083C	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1443 :: 		
0x083E	0x120E      	IORWF       R14, 1, 0
;__Lib_MathDouble.c,1444 :: 		
0x0840	0xA00E      	BTFSS       R14, 0, 0
;__Lib_MathDouble.c,1445 :: 		
0x0842	0xF004EF26  	GOTO        DREST32
;__Lib_MathDouble.c,1446 :: 		
0x0846	0x800D      	BSF         R13, 0, 0
;__Lib_MathDouble.c,1447 :: 		
0x0848	0xF004EF31  	GOTO        DOK32
;__Lib_MathDouble.c,1448 :: 		
DREST32:
;__Lib_MathDouble.c,1449 :: 		
0x084C	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1450 :: 		
0x084E	0x2600      	ADDWF       R0, 1, 0
;__Lib_MathDouble.c,1451 :: 		
0x0850	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1452 :: 		
0x0852	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1453 :: 		
0x0854	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1455 :: 		
0x0856	0x2601      	ADDWF       R1, 1, 0
;__Lib_MathDouble.c,1456 :: 		
0x0858	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1457 :: 		
0x085A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1458 :: 		
0x085C	0x2806      	INCF        R6, 0, 0
;__Lib_MathDouble.c,1459 :: 		
0x085E	0x2602      	ADDWF       R2, 1, 0
;__Lib_MathDouble.c,1460 :: 		
0x0860	0x900D      	BCF         R13, 0, 0
;__Lib_MathDouble.c,1461 :: 		
DOK32:
;__Lib_MathDouble.c,1462 :: 		
0x0862	0x2E0B      	DECFSZ      R11, 1, 0
;__Lib_MathDouble.c,1463 :: 		
0x0864	0xF004EF0D  	GOTO        DLOOP32
;__Lib_MathDouble.c,1467 :: 		
0x0868	0xF004EF57  	GOTO        DIV32OK
;__Lib_MathDouble.c,1468 :: 		
0x086C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,1469 :: 		
0x086E	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,1470 :: 		
0x0870	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,1471 :: 		
0x0872	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,1472 :: 		
0x0874	0x360E      	RLCF        R14, 1, 0
;__Lib_MathDouble.c,1474 :: 		
0x0876	0x5004      	MOVF        R4, 0, 0
;__Lib_MathDouble.c,1475 :: 		
0x0878	0x5E00      	SUBWF       R0, 1, 0
;__Lib_MathDouble.c,1476 :: 		
0x087A	0x5005      	MOVF        R5, 0, 0
;__Lib_MathDouble.c,1477 :: 		
0x087C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1478 :: 		
0x087E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_MathDouble.c,1479 :: 		
0x0880	0x5E01      	SUBWF       R1, 1, 0
;__Lib_MathDouble.c,1480 :: 		
0x0882	0x5006      	MOVF        R6, 0, 0
;__Lib_MathDouble.c,1481 :: 		
0x0884	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,1482 :: 		
0x0886	0x3C06      	INCFSZ      R6, 0, 0
;__Lib_MathDouble.c,1483 :: 		
0x0888	0x5E02      	SUBWF       R2, 1, 0
;__Lib_MathDouble.c,1484 :: 		
0x088A	0x3406      	RLCF        R6, 0, 0
;__Lib_MathDouble.c,1485 :: 		
0x088C	0x100E      	IORWF       R14, 0, 0
;__Lib_MathDouble.c,1486 :: 		
0x088E	0x0B01      	ANDLW       1
;__Lib_MathDouble.c,1487 :: 		
0x0890	0x260D      	ADDWF       R13, 1, 0
;__Lib_MathDouble.c,1488 :: 		
0x0892	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_MathDouble.c,1489 :: 		
0x0894	0x2A0C      	INCF        R12, 1, 0
;__Lib_MathDouble.c,1490 :: 		
0x0896	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1491 :: 		
0x0898	0x2A08      	INCF        R8, 1, 0
;__Lib_MathDouble.c,1492 :: 		
0x089A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,1493 :: 		
0x089C	0xF004EF57  	GOTO        DIV32OK
;__Lib_MathDouble.c,1494 :: 		
0x08A0	0x3208      	RRCF        R8, 1, 0
;__Lib_MathDouble.c,1495 :: 		
0x08A2	0x320C      	RRCF        R12, 1, 0
;__Lib_MathDouble.c,1496 :: 		
0x08A4	0x320D      	RRCF        R13, 1, 0
;__Lib_MathDouble.c,1497 :: 		
0x08A6	0x2A03      	INCF        R3, 1, 0
;__Lib_MathDouble.c,1498 :: 		
0x08A8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,1499 :: 		
0x08AA	0xF004EF69  	GOTO        JPDSETFOV32
;__Lib_MathDouble.c,1500 :: 		
DIV32OK:
;__Lib_MathDouble.c,1501 :: 		
0x08AE	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,1502 :: 		
0x08B0	0x9E08      	BCF         R8, 7, 0
;__Lib_MathDouble.c,1503 :: 		
0x08B2	0x5008      	MOVF        R8, 0, 0
;__Lib_MathDouble.c,1504 :: 		
0x08B4	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,1505 :: 		
0x08B6	0x500C      	MOVF        R12, 0, 0
;__Lib_MathDouble.c,1506 :: 		
0x08B8	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,1507 :: 		
0x08BA	0x500D      	MOVF        R13, 0, 0
;__Lib_MathDouble.c,1508 :: 		
0x08BC	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,1511 :: 		
0x08BE	0xF004EF6F  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1512 :: 		
JPDSETFDZ32:
;__Lib_MathDouble.c,1513 :: 		
0x08C2	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,1516 :: 		
0x08C4	0xDD31      	RCALL       _SETFDZ32
;__Lib_MathDouble.c,1518 :: 		
0x08C6	0xF004EF6F  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1519 :: 		
JPDRES032:
;__Lib_MathDouble.c,1520 :: 		
0x08CA	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,1523 :: 		
0x08CC	0xDD20      	RCALL       _RES032
;__Lib_MathDouble.c,1525 :: 		
0x08CE	0xF004EF6F  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1526 :: 		
JPDSETFOV32:
;__Lib_MathDouble.c,1527 :: 		
0x08D2	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,1530 :: 		
0x08D4	0xDCD1      	RCALL       _SETFOV32
;__Lib_MathDouble.c,1532 :: 		
0x08D6	0xF004EF6F  	GOTO        DIV32EEE
;__Lib_MathDouble.c,1533 :: 		
JPDSETFUN32:
;__Lib_MathDouble.c,1534 :: 		
0x08DA	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,1537 :: 		
0x08DC	0xDCBC      	RCALL       _SETFUN32
;__Lib_MathDouble.c,1539 :: 		
DIV32EEE:
;__Lib_MathDouble.c,1547 :: 		
L_end_Div_32x32_FP:
0x08DE	0x0012      	RETURN      0
; end of _Div_32x32_FP
_double2word:
;__Lib_MathDouble.c,2023 :: 		
;__Lib_MathDouble.c,2032 :: 		
0x08E0	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2033 :: 		
0x08E2	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2034 :: 		
0x08E4	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2036 :: 		
0x08E6	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2037 :: 		
0x08E8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2038 :: 		
0x08EA	0xF004EFBA  	GOTO        IRES016U
;__Lib_MathDouble.c,2040 :: 		
0x08EE	0x8E02      	BSF         R2, 7, 0
;__Lib_MathDouble.c,2042 :: 		
0x08F0	0x0E8E      	MOVLW       142
;__Lib_MathDouble.c,2043 :: 		
0x08F2	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,2044 :: 		
0x08F4	0xBE03      	BTFSC       R3, 7, 0
;__Lib_MathDouble.c,2045 :: 		
0x08F6	0xF004EF82  	GOTO        SETEXP16U
;__Lib_MathDouble.c,2046 :: 		
0x08FA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2047 :: 		
0x08FC	0xF004EF82  	GOTO        SETEXP16U
;__Lib_MathDouble.c,2048 :: 		
0x0900	0xF004EFBE  	GOTO        SETIOV16U
;__Lib_MathDouble.c,2049 :: 		
SETEXP16U:
;__Lib_MathDouble.c,2050 :: 		
0x0904	0x6C03      	NEGF        R3, 0
;__Lib_MathDouble.c,2052 :: 		
0x0906	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,2053 :: 		
0x0908	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2054 :: 		
0x090A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2055 :: 		
0x090C	0xF004EF99  	GOTO        TSHIFT3216U
;__Lib_MathDouble.c,2056 :: 		
0x0910	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2057 :: 		
0x0912	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,2058 :: 		
0x0914	0xF001C002  	MOVFF       R2, R1
;__Lib_MathDouble.c,2059 :: 		
0x0918	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2061 :: 		
0x091A	0x0E08      	MOVLW       8
;__Lib_MathDouble.c,2062 :: 		
0x091C	0x5C03      	SUBWF       R3, 0, 0
;__Lib_MathDouble.c,2063 :: 		
0x091E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2064 :: 		
0x0920	0xF004EF99  	GOTO        TSHIFT3216U
;__Lib_MathDouble.c,2065 :: 		
0x0924	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,2066 :: 		
0x0926	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2068 :: 		
0x0928	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2069 :: 		
0x092A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2070 :: 		
0x092C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2071 :: 		
0x092E	0xF004EFA3  	GOTO        SHIFT3216UOK
;__Lib_MathDouble.c,2072 :: 		
TSHIFT3216U:
;__Lib_MathDouble.c,2073 :: 		
0x0932	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2074 :: 		
0x0934	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2075 :: 		
0x0936	0xF004EFA3  	GOTO        SHIFT3216UOK
;__Lib_MathDouble.c,2076 :: 		
SHIFT3216U:
;__Lib_MathDouble.c,2077 :: 		
0x093A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,2078 :: 		
0x093C	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,2079 :: 		
0x093E	0x3201      	RRCF        R1, 1, 0
;__Lib_MathDouble.c,2080 :: 		
0x0940	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,2081 :: 		
0x0942	0xF004EF9D  	GOTO        SHIFT3216U
;__Lib_MathDouble.c,2082 :: 		
SHIFT3216UOK:
;__Lib_MathDouble.c,2083 :: 		
0x0946	0xBC0B      	BTFSC       R11, 6, 0
;__Lib_MathDouble.c,2084 :: 		
0x0948	0xA001      	BTFSS       R1, 0, 0
;__Lib_MathDouble.c,2085 :: 		
0x094A	0xF004EFB0  	GOTO        INT3216UOK
;__Lib_MathDouble.c,2086 :: 		
0x094E	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,2087 :: 		
0x0950	0xF004EFB0  	GOTO        INT3216UOK
;__Lib_MathDouble.c,2088 :: 		
0x0954	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,2089 :: 		
0x0956	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2090 :: 		
0x0958	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,2091 :: 		
0x095A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,2092 :: 		
0x095C	0xF004EFCD  	GOTO        JPKSETIOV3224
;__Lib_MathDouble.c,2093 :: 		
INT3216UOK:
;__Lib_MathDouble.c,2094 :: 		
0x0960	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,2095 :: 		
0x0962	0xF004EFD2  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2097 :: 		
0x0966	0x1E02      	COMF        R2, 1, 0
;__Lib_MathDouble.c,2098 :: 		
0x0968	0x1E01      	COMF        R1, 1, 0
;__Lib_MathDouble.c,2099 :: 		
0x096A	0x2A01      	INCF        R1, 1, 0
;__Lib_MathDouble.c,2100 :: 		
0x096C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2101 :: 		
0x096E	0x2A02      	INCF        R2, 1, 0
;__Lib_MathDouble.c,2102 :: 		
0x0970	0xF004EFD2  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2104 :: 		
IRES016U:
;__Lib_MathDouble.c,2105 :: 		
0x0974	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2106 :: 		
0x0976	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2107 :: 		
0x0978	0xF004EFD2  	GOTO        INT3216UEOK
;__Lib_MathDouble.c,2108 :: 		
SETIOV16U:
;__Lib_MathDouble.c,2109 :: 		
0x097C	0x800B      	BSF         R11, 0, 0
;__Lib_MathDouble.c,2110 :: 		
0x097E	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,2111 :: 		
0x0980	0xF004EFD6  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2113 :: 		
0x0984	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2114 :: 		
0x0986	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,2115 :: 		
0x0988	0xF004EFD6  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2116 :: 		
0x098C	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2117 :: 		
0x098E	0x6E02      	MOVWF       R2, 0
;__Lib_MathDouble.c,2118 :: 		
0x0990	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2119 :: 		
0x0992	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,2120 :: 		
0x0994	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,2121 :: 		
0x0996	0xF004EFD6  	GOTO        INT3216UEER
;__Lib_MathDouble.c,2123 :: 		
JPKSETIOV3224:
;__Lib_MathDouble.c,2124 :: 		
0x099A	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,2125 :: 		
0x099C	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2127 :: 		
0x099E	0xDDCE      	RCALL       _SETIOV3224
;__Lib_MathDouble.c,2129 :: 		
0x09A0	0xF004EFD8  	GOTO        INT3216UEEE
;__Lib_MathDouble.c,2130 :: 		
INT3216UEOK:
;__Lib_MathDouble.c,2131 :: 		
0x09A4	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,2132 :: 		
0x09A6	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2133 :: 		
0x09A8	0xF004EFD8  	GOTO        INT3216UEEE
;__Lib_MathDouble.c,2134 :: 		
INT3216UEER:
;__Lib_MathDouble.c,2135 :: 		
0x09AC	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,2136 :: 		
0x09AE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,2137 :: 		
INT3216UEEE:
;__Lib_MathDouble.c,2138 :: 		
0x09B0	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2139 :: 		
0x09B2	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2140 :: 		
0x09B4	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2141 :: 		
0x09B6	0x6E01      	MOVWF       R1, 0
;__Lib_MathDouble.c,2146 :: 		
L_end_double2word:
0x09B8	0x0012      	RETURN      0
; end of _double2word
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x09BA	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x09BC	0x0E80      	MOVLW       128
0x09BE	0x0100      	MOVLB       0
0x09C0	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x09C2	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x09C4	0x0EC0      	MOVLW       192
0x09C6	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x09C8	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x09CA	0x0E94      	MOVLW       148
0x09CC	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x09CE	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x09D0	0x0ED4      	MOVLW       212
0x09D2	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x09D4	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x09D6	0x0E80      	MOVLW       128
0x09D8	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x09DA	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x09DC	0x0100      	MOVLB       0
0x09DE	0x5189      	MOVF        FARG_Lcd_Out_row, 0, 1
0x09E0	0x0A01      	XORLW       1
0x09E2	0xE0EC      	BZ          L_Lcd_Out13
0x09E4	0x5189      	MOVF        FARG_Lcd_Out_row, 0, 1
0x09E6	0x0A02      	XORLW       2
0x09E8	0xE0ED      	BZ          L_Lcd_Out14
0x09EA	0x5189      	MOVF        FARG_Lcd_Out_row, 0, 1
0x09EC	0x0A03      	XORLW       3
0x09EE	0xE0ED      	BZ          L_Lcd_Out15
0x09F0	0x5189      	MOVF        FARG_Lcd_Out_row, 0, 1
0x09F2	0x0A04      	XORLW       4
0x09F4	0xE0ED      	BZ          L_Lcd_Out16
0x09F6	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x09F8	0x058A      	DECF        FARG_Lcd_Out_column, 0, 1
0x09FA	0x6E00      	MOVWF       R0 
0x09FC	0x5189      	MOVF        FARG_Lcd_Out_row, 0, 1
0x09FE	0x2600      	ADDWF       R0, 1 
0x0A00	0xF089C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0A04	0xF09BC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0A08	0xDC43      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0A0A	0x905A      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0A0C	0x6B8D      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0A0E	0x518D      	MOVF        Lcd_Out_i_L0, 0, 1
0x0A10	0x258B      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0A12	0x6EE9      	MOVWF       FSR0L 
0x0A14	0x0E00      	MOVLW       0
0x0A16	0x218C      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0A18	0x6EEA      	MOVWF       FSR0H 
0x0A1A	0x52EE      	MOVF        POSTINC0, 1 
0x0A1C	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0A1E	0x518D      	MOVF        Lcd_Out_i_L0, 0, 1
0x0A20	0x258B      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0A22	0x6EE9      	MOVWF       FSR0L 
0x0A24	0x0E00      	MOVLW       0
0x0A26	0x218C      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0A28	0x6EEA      	MOVWF       FSR0H 
0x0A2A	0xF097CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0A2E	0xDC76      	RCALL       _Lcd_Chr_CP
0x0A30	0x2B8D      	INCF        Lcd_Out_i_L0, 1, 1
0x0A32	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0A34	0x805A      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0A36	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Out_CP:
;__Lib_Lcd.c,57 :: 		
;__Lib_Lcd.c,59 :: 		
0x0A38	0x0100      	MOVLB       0
0x0A3A	0x6B8B      	CLRF        Lcd_Out_CP_i_L0, 1
;__Lib_Lcd.c,60 :: 		
L_Lcd_Out_CP2:
0x0A3C	0x518B      	MOVF        Lcd_Out_CP_i_L0, 0, 1
0x0A3E	0x2589      	ADDWF       FARG_Lcd_Out_CP_text, 0, 1
0x0A40	0x6EE9      	MOVWF       FSR0L 
0x0A42	0x0E00      	MOVLW       0
0x0A44	0x218A      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0, 1
0x0A46	0x6EEA      	MOVWF       FSR0H 
0x0A48	0x52EE      	MOVF        POSTINC0, 1 
0x0A4A	0xE00B      	BZ          L_Lcd_Out_CP3
;__Lib_Lcd.c,61 :: 		
0x0A4C	0x518B      	MOVF        Lcd_Out_CP_i_L0, 0, 1
0x0A4E	0x2589      	ADDWF       FARG_Lcd_Out_CP_text, 0, 1
0x0A50	0x6EE9      	MOVWF       FSR0L 
0x0A52	0x0E00      	MOVLW       0
0x0A54	0x218A      	ADDWFC      FARG_Lcd_Out_CP_text+1, 0, 1
0x0A56	0x6EEA      	MOVWF       FSR0H 
0x0A58	0xF097CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0A5C	0xDC5F      	RCALL       _Lcd_Chr_CP
0x0A5E	0x2B8B      	INCF        Lcd_Out_CP_i_L0, 1, 1
;__Lib_Lcd.c,62 :: 		
0x0A60	0xD7ED      	BRA         L_Lcd_Out_CP2
L_Lcd_Out_CP3:
;__Lib_Lcd.c,63 :: 		
L_end_Lcd_Out_CP:
0x0A62	0x0012      	RETURN      0
; end of _Lcd_Out_CP
_FloatToStr:
;__Lib_Conversions.c,472 :: 		
;__Lib_Conversions.c,474 :: 		
0x0A64	0x0100      	MOVLB       0
0x0A66	0x6B95      	CLRF        FloatToStr_bpoint_L0, 1
0x0A68	0x6B96      	CLRF        FloatToStr_dexpon_L0, 1
;__Lib_Conversions.c,479 :: 		
0x0A6A	0xF091C089  	MOVFF       FARG_FloatToStr_fnum, FloatToStr_un_L0
0x0A6E	0xF092C08A  	MOVFF       FARG_FloatToStr_fnum+1, FloatToStr_un_L0+1
0x0A72	0xF093C08B  	MOVFF       FARG_FloatToStr_fnum+2, FloatToStr_un_L0+2
0x0A76	0xF094C08C  	MOVFF       FARG_FloatToStr_fnum+3, FloatToStr_un_L0+3
;__Lib_Conversions.c,480 :: 		
0x0A7A	0x5194      	MOVF        FloatToStr_un_L0+3, 0, 1
0x0A7C	0x0AFF      	XORLW       255
0x0A7E	0xE108      	BNZ         L__FloatToStr145
0x0A80	0x5193      	MOVF        FloatToStr_un_L0+2, 0, 1
0x0A82	0x0AFF      	XORLW       255
0x0A84	0xE105      	BNZ         L__FloatToStr145
0x0A86	0x5192      	MOVF        FloatToStr_un_L0+1, 0, 1
0x0A88	0x0AFF      	XORLW       255
0x0A8A	0xE102      	BNZ         L__FloatToStr145
0x0A8C	0x5191      	MOVF        FloatToStr_un_L0, 0, 1
0x0A8E	0x0AFF      	XORLW       255
L__FloatToStr145:
0x0A90	0xE10C      	BNZ         L_FloatToStr76
;__Lib_Conversions.c,481 :: 		
0x0A92	0xF097C08D  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x0A96	0xF098C08E  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x0A9A	0x0E29      	MOVLW       ?lstr1___Lib_Conversions
0x0A9C	0x6F99      	MOVWF       FARG_strcpy_from, 1
0x0A9E	0x0E00      	MOVLW       hi_addr(?lstr1___Lib_Conversions)
0x0AA0	0x6F9A      	MOVWF       FARG_strcpy_from+1, 1
0x0AA2	0xDD93      	RCALL       _strcpy
;__Lib_Conversions.c,482 :: 		
0x0AA4	0x0E03      	MOVLW       3
0x0AA6	0x6E00      	MOVWF       R0 
0x0AA8	0xD1E9      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,483 :: 		
L_FloatToStr76:
;__Lib_Conversions.c,484 :: 		
0x0AAA	0x0E01      	MOVLW       1
0x0AAC	0x6F8F      	MOVWF       FloatToStr_i_L0, 1
;__Lib_Conversions.c,485 :: 		
0x0AAE	0xAF93      	BTFSS       FloatToStr_un_L0+2, 7, 1
0x0AB0	0xD00E      	BRA         L_FloatToStr77
;__Lib_Conversions.c,486 :: 		
0x0AB2	0x0E80      	MOVLW       128
0x0AB4	0x1993      	XORWF       FloatToStr_un_L0+2, 0, 1
0x0AB6	0x6E00      	MOVWF       R0 
0x0AB8	0xF093C000  	MOVFF       R0, FloatToStr_un_L0+2
;__Lib_Conversions.c,487 :: 		
0x0ABC	0x2B8F      	INCF        FloatToStr_i_L0, 1, 1
;__Lib_Conversions.c,488 :: 		
0x0ABE	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0AC2	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0AC6	0x0E2D      	MOVLW       45
0x0AC8	0x6EE6      	MOVWF       POSTINC1 
0x0ACA	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0ACC	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,489 :: 		
L_FloatToStr77:
;__Lib_Conversions.c,490 :: 		
0x0ACE	0x0E00      	MOVLW       0
0x0AD0	0x6E00      	MOVWF       R0 
0x0AD2	0x1994      	XORWF       FloatToStr_un_L0+3, 0, 1
0x0AD4	0xE108      	BNZ         L__FloatToStr146
0x0AD6	0x5000      	MOVF        R0, 0 
0x0AD8	0x1993      	XORWF       FloatToStr_un_L0+2, 0, 1
0x0ADA	0xE105      	BNZ         L__FloatToStr146
0x0ADC	0x5000      	MOVF        R0, 0 
0x0ADE	0x1992      	XORWF       FloatToStr_un_L0+1, 0, 1
0x0AE0	0xE102      	BNZ         L__FloatToStr146
0x0AE2	0x5191      	MOVF        FloatToStr_un_L0, 0, 1
0x0AE4	0x0A00      	XORLW       0
L__FloatToStr146:
0x0AE6	0xE10B      	BNZ         L_FloatToStr78
;__Lib_Conversions.c,491 :: 		
0x0AE8	0xF097C08D  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x0AEC	0xF098C08E  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x0AF0	0x0E21      	MOVLW       ?lstr2___Lib_Conversions
0x0AF2	0x6F99      	MOVWF       FARG_strcpy_from, 1
0x0AF4	0x0E00      	MOVLW       hi_addr(?lstr2___Lib_Conversions)
0x0AF6	0x6F9A      	MOVWF       FARG_strcpy_from+1, 1
0x0AF8	0xDD68      	RCALL       _strcpy
;__Lib_Conversions.c,492 :: 		
0x0AFA	0x6A00      	CLRF        R0 
0x0AFC	0xD1BF      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,493 :: 		
L_FloatToStr78:
;__Lib_Conversions.c,494 :: 		
0x0AFE	0x5194      	MOVF        FloatToStr_un_L0+3, 0, 1
0x0B00	0x0AFF      	XORLW       255
0x0B02	0xE108      	BNZ         L__FloatToStr147
0x0B04	0x5193      	MOVF        FloatToStr_un_L0+2, 0, 1
0x0B06	0x0A00      	XORLW       0
0x0B08	0xE105      	BNZ         L__FloatToStr147
0x0B0A	0x5192      	MOVF        FloatToStr_un_L0+1, 0, 1
0x0B0C	0x0A00      	XORLW       0
0x0B0E	0xE102      	BNZ         L__FloatToStr147
0x0B10	0x5191      	MOVF        FloatToStr_un_L0, 0, 1
0x0B12	0x0A00      	XORLW       0
L__FloatToStr147:
0x0B14	0xE10C      	BNZ         L_FloatToStr79
;__Lib_Conversions.c,495 :: 		
0x0B16	0xF097C08D  	MOVFF       FARG_FloatToStr_str, FARG_strcpy_to
0x0B1A	0xF098C08E  	MOVFF       FARG_FloatToStr_str+1, FARG_strcpy_to+1
0x0B1E	0x0E1D      	MOVLW       ?lstr3___Lib_Conversions
0x0B20	0x6F99      	MOVWF       FARG_strcpy_from, 1
0x0B22	0x0E00      	MOVLW       hi_addr(?lstr3___Lib_Conversions)
0x0B24	0x6F9A      	MOVWF       FARG_strcpy_from+1, 1
0x0B26	0xDD51      	RCALL       _strcpy
;__Lib_Conversions.c,496 :: 		
0x0B28	0xF000C08F  	MOVFF       FloatToStr_i_L0, R0
0x0B2C	0xD1A7      	BRA         L_end_FloatToStr
;__Lib_Conversions.c,497 :: 		
L_FloatToStr79:
;__Lib_Conversions.c,505 :: 		
L_FloatToStr80:
0x0B2E	0x0E00      	MOVLW       0
0x0B30	0x6E04      	MOVWF       R4 
0x0B32	0x0E00      	MOVLW       0
0x0B34	0x6E05      	MOVWF       R5 
0x0B36	0x0E00      	MOVLW       0
0x0B38	0x6E06      	MOVWF       R6 
0x0B3A	0x0E7F      	MOVLW       127
0x0B3C	0x6E07      	MOVWF       R7 
0x0B3E	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0B42	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0B46	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0B4A	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0B4E	0xF001EC98  	CALL        _Compare_Double, 0
0x0B52	0x0E01      	MOVLW       1
0x0B54	0xB0D8      	BTFSC       STATUS, 0 
0x0B56	0x0E00      	MOVLW       0
0x0B58	0x6E00      	MOVWF       R0 
0x0B5A	0x5200      	MOVF        R0, 1 
0x0B5C	0xE01B      	BZ          L_FloatToStr81
;__Lib_Conversions.c,506 :: 		
0x0B5E	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0B62	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0B66	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0B6A	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0B6E	0x0E00      	MOVLW       0
0x0B70	0x6E04      	MOVWF       R4 
0x0B72	0x0E00      	MOVLW       0
0x0B74	0x6E05      	MOVWF       R5 
0x0B76	0x0E20      	MOVLW       32
0x0B78	0x6E06      	MOVWF       R6 
0x0B7A	0x0E82      	MOVLW       130
0x0B7C	0x6E07      	MOVWF       R7 
0x0B7E	0xDC4E      	RCALL       _Mul_32x32_FP
0x0B80	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0B84	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0B88	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0B8C	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,507 :: 		
0x0B90	0x0796      	DECF        FloatToStr_dexpon_L0, 1, 1
;__Lib_Conversions.c,508 :: 		
0x0B92	0xD7CD      	BRA         L_FloatToStr80
L_FloatToStr81:
;__Lib_Conversions.c,513 :: 		
L_FloatToStr82:
0x0B94	0x0E00      	MOVLW       0
0x0B96	0x6E04      	MOVWF       R4 
0x0B98	0x0E00      	MOVLW       0
0x0B9A	0x6E05      	MOVWF       R5 
0x0B9C	0x0E20      	MOVLW       32
0x0B9E	0x6E06      	MOVWF       R6 
0x0BA0	0x0E82      	MOVLW       130
0x0BA2	0x6E07      	MOVWF       R7 
0x0BA4	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0BA8	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0BAC	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0BB0	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0BB4	0xF001EC98  	CALL        _Compare_Double, 0
0x0BB8	0x0E00      	MOVLW       0
0x0BBA	0xB0D8      	BTFSC       STATUS, 0 
0x0BBC	0x0E01      	MOVLW       1
0x0BBE	0x6E00      	MOVWF       R0 
0x0BC0	0x5200      	MOVF        R0, 1 
0x0BC2	0xE01B      	BZ          L_FloatToStr83
;__Lib_Conversions.c,514 :: 		
0x0BC4	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0BC8	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0BCC	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0BD0	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0BD4	0x0ECD      	MOVLW       205
0x0BD6	0x6E04      	MOVWF       R4 
0x0BD8	0x0ECC      	MOVLW       204
0x0BDA	0x6E05      	MOVWF       R5 
0x0BDC	0x0E4C      	MOVLW       76
0x0BDE	0x6E06      	MOVWF       R6 
0x0BE0	0x0E7B      	MOVLW       123
0x0BE2	0x6E07      	MOVWF       R7 
0x0BE4	0xDC1B      	RCALL       _Mul_32x32_FP
0x0BE6	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0BEA	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0BEE	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0BF2	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,515 :: 		
0x0BF6	0x2B96      	INCF        FloatToStr_dexpon_L0, 1, 1
;__Lib_Conversions.c,516 :: 		
0x0BF8	0xD7CD      	BRA         L_FloatToStr82
L_FloatToStr83:
;__Lib_Conversions.c,525 :: 		
0x0BFA	0x0EFF      	MOVLW       255
0x0BFC	0x1591      	ANDWF       FloatToStr_un_L0, 0, 1
0x0BFE	0x6E08      	MOVWF       R8 
0x0C00	0x0EFF      	MOVLW       255
0x0C02	0x1592      	ANDWF       FloatToStr_un_L0+1, 0, 1
0x0C04	0x6E09      	MOVWF       R9 
0x0C06	0x0E7F      	MOVLW       127
0x0C08	0x1593      	ANDWF       FloatToStr_un_L0+2, 0, 1
0x0C0A	0x6E0A      	MOVWF       R10 
0x0C0C	0x0E00      	MOVLW       0
0x0C0E	0x1594      	ANDWF       FloatToStr_un_L0+3, 0, 1
0x0C10	0x6E0B      	MOVWF       R11 
;__Lib_Conversions.c,526 :: 		
0x0C12	0xF004C008  	MOVFF       R8, R4
0x0C16	0xF005C009  	MOVFF       R9, R5
0x0C1A	0xF006C00A  	MOVFF       R10, R6
0x0C1E	0xF007C00B  	MOVFF       R11, R7
0x0C22	0x3604      	RLCF        R4, 1 
0x0C24	0x9004      	BCF         R4, 0 
0x0C26	0x3605      	RLCF        R5, 1 
0x0C28	0x3606      	RLCF        R6, 1 
0x0C2A	0x3607      	RLCF        R7, 1 
;__Lib_Conversions.c,527 :: 		
0x0C2C	0x0E00      	MOVLW       0
0x0C2E	0x1591      	ANDWF       FloatToStr_un_L0, 0, 1
0x0C30	0x6E00      	MOVWF       R0 
0x0C32	0x0E00      	MOVLW       0
0x0C34	0x1592      	ANDWF       FloatToStr_un_L0+1, 0, 1
0x0C36	0x6E01      	MOVWF       R1 
0x0C38	0x0E00      	MOVLW       0
0x0C3A	0x1593      	ANDWF       FloatToStr_un_L0+2, 0, 1
0x0C3C	0x6E02      	MOVWF       R2 
0x0C3E	0x0EFF      	MOVLW       255
0x0C40	0x1594      	ANDWF       FloatToStr_un_L0+3, 0, 1
0x0C42	0x6E03      	MOVWF       R3 
0x0C44	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0C48	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0C4C	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0C50	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,528 :: 		
0x0C54	0x5004      	MOVF        R4, 0 
0x0C56	0x1191      	IORWF       FloatToStr_un_L0, 0, 1
0x0C58	0x6E00      	MOVWF       R0 
0x0C5A	0x5005      	MOVF        R5, 0 
0x0C5C	0x1192      	IORWF       FloatToStr_un_L0+1, 0, 1
0x0C5E	0x6E01      	MOVWF       R1 
0x0C60	0x5006      	MOVF        R6, 0 
0x0C62	0x1193      	IORWF       FloatToStr_un_L0+2, 0, 1
0x0C64	0x6E02      	MOVWF       R2 
0x0C66	0x5007      	MOVF        R7, 0 
0x0C68	0x1194      	IORWF       FloatToStr_un_L0+3, 0, 1
0x0C6A	0x6E03      	MOVWF       R3 
0x0C6C	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0C70	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0C74	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0C78	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,530 :: 		
0x0C7C	0x0E7F      	MOVLW       127
0x0C7E	0x5D94      	SUBWF       FloatToStr_un_L0+3, 0, 1
0x0C80	0x6E00      	MOVWF       R0 
0x0C82	0xF090C000  	MOVFF       R0, FloatToStr_d_L0
;__Lib_Conversions.c,533 :: 		
0x0C86	0x0E01      	MOVLW       1
0x0C88	0x6F94      	MOVWF       FloatToStr_un_L0+3, 1
;__Lib_Conversions.c,534 :: 		
0x0C8A	0xF004C000  	MOVFF       R0, R4
0x0C8E	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0C92	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0C96	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0C9A	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0C9E	0x5004      	MOVF        R4, 0 
L__FloatToStr148:
0x0CA0	0xE007      	BZ          L__FloatToStr149
0x0CA2	0x3600      	RLCF        R0, 1 
0x0CA4	0x9000      	BCF         R0, 0 
0x0CA6	0x3601      	RLCF        R1, 1 
0x0CA8	0x3602      	RLCF        R2, 1 
0x0CAA	0x3603      	RLCF        R3, 1 
0x0CAC	0x0FFF      	ADDLW       255
0x0CAE	0xD7F8      	BRA         L__FloatToStr148
L__FloatToStr149:
0x0CB0	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0CB4	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0CB8	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0CBC	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,535 :: 		
0x0CC0	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0CC4	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0CC8	0x5194      	MOVF        FloatToStr_un_L0+3, 0, 1
0x0CCA	0x0F30      	ADDLW       48
0x0CCC	0x6EE6      	MOVWF       POSTINC1 
0x0CCE	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0CD0	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,536 :: 		
0x0CD2	0x0E80      	MOVLW       128
0x0CD4	0x1996      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x0CD6	0x6E00      	MOVWF       R0 
0x0CD8	0x0E80      	MOVLW       128
0x0CDA	0x0A01      	XORLW       1
0x0CDC	0x5C00      	SUBWF       R0, 0 
0x0CDE	0xE308      	BNC         L__FloatToStr100
0x0CE0	0x0E80      	MOVLW       128
0x0CE2	0x0A06      	XORLW       6
0x0CE4	0x6E00      	MOVWF       R0 
0x0CE6	0x0E80      	MOVLW       128
0x0CE8	0x1996      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x0CEA	0x5C00      	SUBWF       R0, 0 
0x0CEC	0xE301      	BNC         L__FloatToStr100
0x0CEE	0xD00A      	BRA         L_FloatToStr86
L__FloatToStr100:
;__Lib_Conversions.c,537 :: 		
0x0CF0	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0CF4	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0CF8	0x0E2E      	MOVLW       46
0x0CFA	0x6EE6      	MOVWF       POSTINC1 
0x0CFC	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0CFE	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,538 :: 		
0x0D00	0x0E01      	MOVLW       1
0x0D02	0x6F95      	MOVWF       FloatToStr_bpoint_L0, 1
;__Lib_Conversions.c,539 :: 		
L_FloatToStr86:
;__Lib_Conversions.c,540 :: 		
0x0D04	0x0E06      	MOVLW       6
0x0D06	0x6F90      	MOVWF       FloatToStr_d_L0, 1
L_FloatToStr87:
0x0D08	0x5190      	MOVF        FloatToStr_d_L0, 0, 1
0x0D0A	0x0A00      	XORLW       0
0x0D0C	0xE054      	BZ          L_FloatToStr88
;__Lib_Conversions.c,541 :: 		
0x0D0E	0x6B94      	CLRF        FloatToStr_un_L0+3, 1
;__Lib_Conversions.c,542 :: 		
0x0D10	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0D14	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0D18	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0D1C	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0D20	0x3600      	RLCF        R0, 1 
0x0D22	0x9000      	BCF         R0, 0 
0x0D24	0x3601      	RLCF        R1, 1 
0x0D26	0x3602      	RLCF        R2, 1 
0x0D28	0x3603      	RLCF        R3, 1 
0x0D2A	0x3600      	RLCF        R0, 1 
0x0D2C	0x9000      	BCF         R0, 0 
0x0D2E	0x3601      	RLCF        R1, 1 
0x0D30	0x3602      	RLCF        R2, 1 
0x0D32	0x3603      	RLCF        R3, 1 
0x0D34	0x5191      	MOVF        FloatToStr_un_L0, 0, 1
0x0D36	0x2600      	ADDWF       R0, 1 
0x0D38	0x5192      	MOVF        FloatToStr_un_L0+1, 0, 1
0x0D3A	0x2201      	ADDWFC      R1, 1 
0x0D3C	0x5193      	MOVF        FloatToStr_un_L0+2, 0, 1
0x0D3E	0x2202      	ADDWFC      R2, 1 
0x0D40	0x5194      	MOVF        FloatToStr_un_L0+3, 0, 1
0x0D42	0x2203      	ADDWFC      R3, 1 
0x0D44	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0D48	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0D4C	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0D50	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,543 :: 		
0x0D54	0xF000C091  	MOVFF       FloatToStr_un_L0, R0
0x0D58	0xF001C092  	MOVFF       FloatToStr_un_L0+1, R1
0x0D5C	0xF002C093  	MOVFF       FloatToStr_un_L0+2, R2
0x0D60	0xF003C094  	MOVFF       FloatToStr_un_L0+3, R3
0x0D64	0x3600      	RLCF        R0, 1 
0x0D66	0x9000      	BCF         R0, 0 
0x0D68	0x3601      	RLCF        R1, 1 
0x0D6A	0x3602      	RLCF        R2, 1 
0x0D6C	0x3603      	RLCF        R3, 1 
0x0D6E	0xF091C000  	MOVFF       R0, FloatToStr_un_L0
0x0D72	0xF092C001  	MOVFF       R1, FloatToStr_un_L0+1
0x0D76	0xF093C002  	MOVFF       R2, FloatToStr_un_L0+2
0x0D7A	0xF094C003  	MOVFF       R3, FloatToStr_un_L0+3
;__Lib_Conversions.c,544 :: 		
0x0D7E	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0D82	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0D86	0x5194      	MOVF        FloatToStr_un_L0+3, 0, 1
0x0D88	0x0F30      	ADDLW       48
0x0D8A	0x6EE6      	MOVWF       POSTINC1 
0x0D8C	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0D8E	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,545 :: 		
0x0D90	0x5195      	MOVF        FloatToStr_bpoint_L0, 0, 1
0x0D92	0x0A00      	XORLW       0
0x0D94	0xE10E      	BNZ         L_FloatToStr90
;__Lib_Conversions.c,546 :: 		
0x0D96	0x0796      	DECF        FloatToStr_dexpon_L0, 1, 1
0x0D98	0x5196      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x0D9A	0x0A00      	XORLW       0
0x0D9C	0xE10A      	BNZ         L_FloatToStr91
;__Lib_Conversions.c,547 :: 		
0x0D9E	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0DA2	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0DA6	0x0E2E      	MOVLW       46
0x0DA8	0x6EE6      	MOVWF       POSTINC1 
0x0DAA	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0DAC	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,548 :: 		
0x0DAE	0x0E01      	MOVLW       1
0x0DB0	0x6F95      	MOVWF       FloatToStr_bpoint_L0, 1
;__Lib_Conversions.c,549 :: 		
L_FloatToStr91:
L_FloatToStr90:
;__Lib_Conversions.c,540 :: 		
0x0DB2	0x0790      	DECF        FloatToStr_d_L0, 1, 1
;__Lib_Conversions.c,550 :: 		
0x0DB4	0xD7A9      	BRA         L_FloatToStr87
L_FloatToStr88:
;__Lib_Conversions.c,551 :: 		
L_FloatToStr92:
0x0DB6	0x0EFF      	MOVLW       255
0x0DB8	0x258D      	ADDWF       FARG_FloatToStr_str, 0, 1
0x0DBA	0x6EE9      	MOVWF       FSR0L 
0x0DBC	0x0EFF      	MOVLW       255
0x0DBE	0x218E      	ADDWFC      FARG_FloatToStr_str+1, 0, 1
0x0DC0	0x6EEA      	MOVWF       FSR0H 
0x0DC2	0x50EE      	MOVF        POSTINC0, 0 
0x0DC4	0x0A30      	XORLW       48
0x0DC6	0xE105      	BNZ         L_FloatToStr93
;__Lib_Conversions.c,552 :: 		
0x0DC8	0x0E01      	MOVLW       1
0x0DCA	0x5F8D      	SUBWF       FARG_FloatToStr_str, 1, 1
0x0DCC	0x0E00      	MOVLW       0
0x0DCE	0x5B8E      	SUBWFB      FARG_FloatToStr_str+1, 1, 1
0x0DD0	0xD7F2      	BRA         L_FloatToStr92
L_FloatToStr93:
;__Lib_Conversions.c,553 :: 		
0x0DD2	0x0EFF      	MOVLW       255
0x0DD4	0x258D      	ADDWF       FARG_FloatToStr_str, 0, 1
0x0DD6	0x6EE9      	MOVWF       FSR0L 
0x0DD8	0x0EFF      	MOVLW       255
0x0DDA	0x218E      	ADDWFC      FARG_FloatToStr_str+1, 0, 1
0x0DDC	0x6EEA      	MOVWF       FSR0H 
0x0DDE	0x50EE      	MOVF        POSTINC0, 0 
0x0DE0	0x0A2E      	XORLW       46
0x0DE2	0xE104      	BNZ         L_FloatToStr94
;__Lib_Conversions.c,554 :: 		
0x0DE4	0x0E01      	MOVLW       1
0x0DE6	0x5F8D      	SUBWF       FARG_FloatToStr_str, 1, 1
0x0DE8	0x0E00      	MOVLW       0
0x0DEA	0x5B8E      	SUBWFB      FARG_FloatToStr_str+1, 1, 1
L_FloatToStr94:
;__Lib_Conversions.c,555 :: 		
0x0DEC	0x5196      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x0DEE	0x0A00      	XORLW       0
0x0DF0	0xE03F      	BZ          L_FloatToStr95
;__Lib_Conversions.c,556 :: 		
0x0DF2	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0DF6	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0DFA	0x0E65      	MOVLW       101
0x0DFC	0x6EE6      	MOVWF       POSTINC1 
0x0DFE	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0E00	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,557 :: 		
0x0E02	0x0E80      	MOVLW       128
0x0E04	0x1996      	XORWF       FloatToStr_dexpon_L0, 0, 1
0x0E06	0x6E00      	MOVWF       R0 
0x0E08	0x0E80      	MOVLW       128
0x0E0A	0x0A00      	XORLW       0
0x0E0C	0x5C00      	SUBWF       R0, 0 
0x0E0E	0xE20B      	BC          L_FloatToStr96
;__Lib_Conversions.c,558 :: 		
0x0E10	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0E14	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0E18	0x0E2D      	MOVLW       45
0x0E1A	0x6EE6      	MOVWF       POSTINC1 
0x0E1C	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0E1E	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,559 :: 		
0x0E20	0x5196      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x0E22	0x0800      	SUBLW       0
0x0E24	0x6F96      	MOVWF       FloatToStr_dexpon_L0, 1
;__Lib_Conversions.c,560 :: 		
L_FloatToStr96:
;__Lib_Conversions.c,561 :: 		
0x0E26	0xF090C096  	MOVFF       FloatToStr_dexpon_L0, FloatToStr_d_L0
;__Lib_Conversions.c,562 :: 		
0x0E2A	0x5196      	MOVF        FloatToStr_dexpon_L0, 0, 1
0x0E2C	0x0809      	SUBLW       9
0x0E2E	0xE20F      	BC          L_FloatToStr97
;__Lib_Conversions.c,563 :: 		
0x0E30	0x0E0A      	MOVLW       10
0x0E32	0x6E04      	MOVWF       R4 
0x0E34	0xF000C090  	MOVFF       FloatToStr_d_L0, R0
0x0E38	0xF001ECFF  	CALL        _Div_8X8_U, 0
0x0E3C	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0E40	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0E44	0x5000      	MOVF        R0, 0 
0x0E46	0x0F30      	ADDLW       48
0x0E48	0x6EE6      	MOVWF       POSTINC1 
0x0E4A	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0E4C	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
L_FloatToStr97:
;__Lib_Conversions.c,564 :: 		
0x0E4E	0x0E0A      	MOVLW       10
0x0E50	0x6E04      	MOVWF       R4 
0x0E52	0xF000C090  	MOVFF       FloatToStr_d_L0, R0
0x0E56	0xF001ECFF  	CALL        _Div_8X8_U, 0
0x0E5A	0xF000C008  	MOVFF       R8, R0
0x0E5E	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0E62	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0E66	0x5000      	MOVF        R0, 0 
0x0E68	0x0F30      	ADDLW       48
0x0E6A	0x6EE6      	MOVWF       POSTINC1 
0x0E6C	0x4B8D      	INFSNZ      FARG_FloatToStr_str, 1, 1
0x0E6E	0x2B8E      	INCF        FARG_FloatToStr_str+1, 1, 1
;__Lib_Conversions.c,565 :: 		
L_FloatToStr95:
;__Lib_Conversions.c,566 :: 		
0x0E70	0xFFE1C08D  	MOVFF       FARG_FloatToStr_str, FSR1L
0x0E74	0xFFE2C08E  	MOVFF       FARG_FloatToStr_str+1, FSR1H
0x0E78	0x6AE6      	CLRF        POSTINC1 
;__Lib_Conversions.c,567 :: 		
0x0E7A	0x6A00      	CLRF        R0 
;__Lib_Conversions.c,568 :: 		
L_end_FloatToStr:
0x0E7C	0x0012      	RETURN      0
; end of _FloatToStr
_main:
0x0E7E	0xF008EC4F  	CALL        4254, 0
;APESW.c,222 :: 		void main() {
;APESW.c,224 :: 		Configuracion();
0x0E82	0xDC5D      	RCALL       _Configuracion
;APESW.c,226 :: 		RD0_bit = 0;                                //Limpia el pin D0
0x0E84	0x9083      	BCF         RD0_bit, BitPos(RD0_bit+0) 
;APESW.c,227 :: 		RD1_bit = 1;                                //Limpia el pin D1
0x0E86	0x8283      	BSF         RD1_bit, BitPos(RD1_bit+0) 
;APESW.c,228 :: 		RE1_bit = 0;
0x0E88	0x9284      	BCF         RE1_bit, BitPos(RE1_bit+0) 
;APESW.c,229 :: 		PORTB = 0;                                  //Limpia el puerto B
0x0E8A	0x6A81      	CLRF        PORTB 
;APESW.c,231 :: 		punT1 = &contT;                             //Asocia el puntero punT1 con la direccion de memoria de la variable contT de tipo entero
0x0E8C	0x0E4B      	MOVLW       _contT
0x0E8E	0x6E49      	MOVWF       _punT1 
0x0E90	0x0E00      	MOVLW       hi_addr(_contT)
0x0E92	0x6E4A      	MOVWF       _punT1+1 
;APESW.c,232 :: 		punDt = &Di;                                //Asocia el puntero punDt con la direccion de memoria de la variable Di de tipo entero
0x0E94	0x0E43      	MOVLW       _Di
0x0E96	0x6E47      	MOVWF       _punDt 
0x0E98	0x0E00      	MOVLW       hi_addr(_Di)
0x0E9A	0x6E48      	MOVWF       _punDt+1 
;APESW.c,234 :: 		contp = 0;                                  //Limpia todas las variables
0x0E9C	0x6A45      	CLRF        _contp 
0x0E9E	0x6A46      	CLRF        _contp+1 
;APESW.c,235 :: 		contTOF = 0;
0x0EA0	0x6A52      	CLRF        _contTOF 
0x0EA2	0x6A53      	CLRF        _contTOF+1 
;APESW.c,236 :: 		BS = 0;
0x0EA4	0x6A54      	CLRF        _BS 
;APESW.c,237 :: 		FP = 0;
0x0EA6	0x6A51      	CLRF        _FP 
;APESW.c,238 :: 		T1 = 0;
0x0EA8	0x6A4D      	CLRF        _T1 
0x0EAA	0x6A4E      	CLRF        _T1+1 
;APESW.c,239 :: 		T2 = 0;
0x0EAC	0x6A4F      	CLRF        _T2 
0x0EAE	0x6A50      	CLRF        _T2+1 
;APESW.c,240 :: 		TOF = 0;
0x0EB0	0x6A37      	CLRF        _TOF 
0x0EB2	0x6A38      	CLRF        _TOF+1 
0x0EB4	0x6A39      	CLRF        _TOF+2 
0x0EB6	0x6A3A      	CLRF        _TOF+3 
;APESW.c,241 :: 		Di = 0;
0x0EB8	0x6A43      	CLRF        _Di 
0x0EBA	0x6A44      	CLRF        _Di+1 
;APESW.c,242 :: 		FEC = 0;
0x0EBC	0x6A3B      	CLRF        _FEC 
;APESW.c,243 :: 		F1 = 0;
0x0EBE	0x6A36      	CLRF        _F1 
;APESW.c,244 :: 		F2 = 0;
0x0EC0	0x6A34      	CLRF        _F2 
;APESW.c,245 :: 		F3 = 0;
0x0EC2	0x6A35      	CLRF        _F3 
;APESW.c,246 :: 		BF1 = 0;
0x0EC4	0x6A40      	CLRF        _BF1 
;APESW.c,247 :: 		BF2 = 0;
0x0EC6	0x6A41      	CLRF        _BF2 
0x0EC8	0x6A42      	CLRF        _BF2+1 
;APESW.c,248 :: 		BF3 = 0;
0x0ECA	0x6A3E      	CLRF        _BF3 
0x0ECC	0x6A3F      	CLRF        _BF3+1 
;APESW.c,249 :: 		DFT1 = 0;
0x0ECE	0x6A3C      	CLRF        _DFT1 
;APESW.c,250 :: 		DFT2 = 0;
0x0ED0	0x6A3D      	CLRF        _DFT2 
;APESW.c,252 :: 		Rspt[0] = Hdr;
0x0ED2	0x0E20      	MOVLW       32
0x0ED4	0x6E55      	MOVWF       _Rspt 
;APESW.c,253 :: 		Rspt[1] = idSlv;
0x0ED6	0x0E31      	MOVLW       49
0x0ED8	0x6E56      	MOVWF       _Rspt+1 
;APESW.c,254 :: 		Rspt[4] = End;
0x0EDA	0x0E0D      	MOVLW       13
0x0EDC	0x6E59      	MOVWF       _Rspt+4 
;APESW.c,256 :: 		Lcd_init();                                 //Inicializa el LCD
0x0EDE	0xF003EC4C  	CALL        _Lcd_Init, 0
;APESW.c,257 :: 		Lcd_Cmd(_LCD_CLEAR);                        //Limpia el LCD
0x0EE2	0x0E01      	MOVLW       1
0x0EE4	0x0100      	MOVLB       0
0x0EE6	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0EE8	0xF001EC48  	CALL        _Lcd_Cmd, 0
;APESW.c,258 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);                   //Apaga el cursor del LCD
0x0EEC	0x0E0C      	MOVLW       12
0x0EEE	0x6F9B      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0EF0	0xF001EC48  	CALL        _Lcd_Cmd, 0
;APESW.c,260 :: 		UART1_Init(9600);                           // Inicializa el UART a 9600 bps
0x0EF4	0x86B8      	BSF         BAUDCON, 3, 0
0x0EF6	0x0E04      	MOVLW       4
0x0EF8	0x6EB0      	MOVWF       SPBRGH 
0x0EFA	0x0EE1      	MOVLW       225
0x0EFC	0x6EAF      	MOVWF       SPBRG 
0x0EFE	0x84AC      	BSF         TXSTA, 2, 0
0x0F00	0xF003EC0C  	CALL        _UART1_Init, 0
;APESW.c,261 :: 		Delay_ms(100);                              // Wait for UART module to stabilize
0x0F04	0x0E07      	MOVLW       7
0x0F06	0x6E0B      	MOVWF       R11, 0
0x0F08	0x0E17      	MOVLW       23
0x0F0A	0x6E0C      	MOVWF       R12, 0
0x0F0C	0x0E6A      	MOVLW       106
0x0F0E	0x6E0D      	MOVWF       R13, 0
L_main23:
0x0F10	0x2E0D      	DECFSZ      R13, 1, 0
0x0F12	0xD7FE      	BRA         L_main23
0x0F14	0x2E0C      	DECFSZ      R12, 1, 0
0x0F16	0xD7FC      	BRA         L_main23
0x0F18	0x2E0B      	DECFSZ      R11, 1, 0
0x0F1A	0xD7FA      	BRA         L_main23
0x0F1C	0x0000      	NOP
;APESW.c,263 :: 		while (1){
L_main24:
;APESW.c,268 :: 		BS = 0;
0x0F1E	0x6A54      	CLRF        _BS 
;APESW.c,269 :: 		contp = 0;                            //Limpia los contadores
0x0F20	0x6A45      	CLRF        _contp 
0x0F22	0x6A46      	CLRF        _contp+1 
;APESW.c,270 :: 		contT = 0;
0x0F24	0x6A4B      	CLRF        _contT 
0x0F26	0x6A4C      	CLRF        _contT+1 
;APESW.c,271 :: 		T1 = 0;
0x0F28	0x6A4D      	CLRF        _T1 
0x0F2A	0x6A4E      	CLRF        _T1+1 
;APESW.c,272 :: 		T2 = 0;
0x0F2C	0x6A4F      	CLRF        _T2 
0x0F2E	0x6A50      	CLRF        _T2+1 
;APESW.c,273 :: 		DT = 0;
0x0F30	0x6B71      	CLRF        _DT, 1
0x0F32	0x6B72      	CLRF        _DT+1, 1
;APESW.c,274 :: 		RD1_bit = 1;
0x0F34	0x8283      	BSF         RD1_bit, BitPos(RD1_bit+0) 
;APESW.c,276 :: 		F1 = 0;                               //Limpia las variables utilizadas en la deteccion de cambio de fase
0x0F36	0x6A36      	CLRF        _F1 
;APESW.c,277 :: 		F2 = 0;
0x0F38	0x6A34      	CLRF        _F2 
;APESW.c,278 :: 		F3 = 0;
0x0F3A	0x6A35      	CLRF        _F3 
;APESW.c,279 :: 		BF1 = 0;
0x0F3C	0x6A40      	CLRF        _BF1 
;APESW.c,280 :: 		BF2 = 0;
0x0F3E	0x6A41      	CLRF        _BF2 
0x0F40	0x6A42      	CLRF        _BF2+1 
;APESW.c,281 :: 		BF3 = 0;
0x0F42	0x6A3E      	CLRF        _BF3 
0x0F44	0x6A3F      	CLRF        _BF3+1 
;APESW.c,282 :: 		DF1 = 0;
0x0F46	0x6B73      	CLRF        _DF1, 1
;APESW.c,283 :: 		DF2 = 0;
0x0F48	0x6B60      	CLRF        _DF2, 1
;APESW.c,284 :: 		DF3 = 0;
0x0F4A	0x6A5F      	CLRF        _DF3 
;APESW.c,285 :: 		DFT1 = 0;
0x0F4C	0x6A3C      	CLRF        _DFT1 
;APESW.c,286 :: 		DFT2 = 0;
0x0F4E	0x6A3D      	CLRF        _DFT2 
;APESW.c,291 :: 		TOF = (contTOF)*(4./48);               //Calcula el valor de TOF (en microsegundos)
0x0F50	0xF000C052  	MOVFF       _contTOF, R0
0x0F54	0xF001C053  	MOVFF       _contTOF+1, R1
0x0F58	0xF003EC38  	CALL        _word2double, 0
0x0F5C	0x0EAB      	MOVLW       171
0x0F5E	0x6E04      	MOVWF       R4 
0x0F60	0x0EAA      	MOVLW       170
0x0F62	0x6E05      	MOVWF       R5 
0x0F64	0x0E2A      	MOVLW       42
0x0F66	0x6E06      	MOVWF       R6 
0x0F68	0x0E7B      	MOVLW       123
0x0F6A	0x6E07      	MOVWF       R7 
0x0F6C	0xF002EC0E  	CALL        _Mul_32x32_FP, 0
0x0F70	0xF037C000  	MOVFF       R0, _TOF
0x0F74	0xF038C001  	MOVFF       R1, _TOF+1
0x0F78	0xF039C002  	MOVFF       R2, _TOF+2
0x0F7C	0xF03AC003  	MOVFF       R3, _TOF+3
;APESW.c,292 :: 		Df = ((VSnd * TOF ) / 2000);          //Calcula la distancia en funcion del TOF
0x0F80	0xF004C084  	MOVFF       _VSnd, R4
0x0F84	0xF005C085  	MOVFF       _VSnd+1, R5
0x0F88	0xF006C086  	MOVFF       _VSnd+2, R6
0x0F8C	0xF007C087  	MOVFF       _VSnd+3, R7
0x0F90	0xF002EC0E  	CALL        _Mul_32x32_FP, 0
0x0F94	0x0E00      	MOVLW       0
0x0F96	0x6E04      	MOVWF       R4 
0x0F98	0x0E00      	MOVLW       0
0x0F9A	0x6E05      	MOVWF       R5 
0x0F9C	0x0E7A      	MOVLW       122
0x0F9E	0x6E06      	MOVWF       R6 
0x0FA0	0x0E89      	MOVLW       137
0x0FA2	0x6E07      	MOVWF       R7 
0x0FA4	0xF003ECB6  	CALL        _Div_32x32_FP, 0
0x0FA8	0xF06DC000  	MOVFF       R0, _Df
0x0FAC	0xF06EC001  	MOVFF       R1, _Df+1
0x0FB0	0xF06FC002  	MOVFF       R2, _Df+2
0x0FB4	0xF070C003  	MOVFF       R3, _Df+3
;APESW.c,293 :: 		Di = Df*10;                           //Almacena la distancia en una variable de tipo entero
0x0FB8	0x0E00      	MOVLW       0
0x0FBA	0x6E04      	MOVWF       R4 
0x0FBC	0x0E00      	MOVLW       0
0x0FBE	0x6E05      	MOVWF       R5 
0x0FC0	0x0E20      	MOVLW       32
0x0FC2	0x6E06      	MOVWF       R6 
0x0FC4	0x0E82      	MOVLW       130
0x0FC6	0x6E07      	MOVWF       R7 
0x0FC8	0xF002EC0E  	CALL        _Mul_32x32_FP, 0
0x0FCC	0xDC89      	RCALL       _double2word
0x0FCE	0xF043C000  	MOVFF       R0, _Di
0x0FD2	0xF044C001  	MOVFF       R1, _Di+1
;APESW.c,295 :: 		for (i=2;i<4;i++){                    //Rellena la trama de cuerpo de datos de 4 bytes
0x0FD6	0x0E02      	MOVLW       2
0x0FD8	0x0100      	MOVLB       0
0x0FDA	0x6F88      	MOVWF       _i, 1
L_main26:
0x0FDC	0x0E04      	MOVLW       4
0x0FDE	0x5D88      	SUBWF       _i, 0, 1
0x0FE0	0xE212      	BC          L_main27
;APESW.c,296 :: 		Rspt[i]=(*punDt++);               //El operador * permite acceder al valor de la direccion del puntero,
0x0FE2	0x0E55      	MOVLW       _Rspt
0x0FE4	0x6EE1      	MOVWF       FSR1L 
0x0FE6	0x0E00      	MOVLW       hi_addr(_Rspt)
0x0FE8	0x6EE2      	MOVWF       FSR1H 
0x0FEA	0x5188      	MOVF        _i, 0, 1
0x0FEC	0x26E1      	ADDWF       FSR1L, 1 
0x0FEE	0xB0D8      	BTFSC       STATUS, 0 
0x0FF0	0x2AE2      	INCF        FSR1H, 1 
0x0FF2	0xFFE9C047  	MOVFF       _punDt, FSR0L
0x0FF6	0xFFEAC048  	MOVFF       _punDt+1, FSR0H
0x0FFA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0FFE	0x4A47      	INFSNZ      _punDt, 1 
0x1000	0x2A48      	INCF        _punDt+1, 1 
;APESW.c,295 :: 		for (i=2;i<4;i++){                    //Rellena la trama de cuerpo de datos de 4 bytes
0x1002	0x2B88      	INCF        _i, 1, 1
;APESW.c,297 :: 		}
0x1004	0xD7EB      	BRA         L_main26
L_main27:
;APESW.c,299 :: 		FloatToStr(TOF, txt1);
0x1006	0xF089C037  	MOVFF       _TOF, FARG_FloatToStr_fnum
0x100A	0xF08AC038  	MOVFF       _TOF+1, FARG_FloatToStr_fnum+1
0x100E	0xF08BC039  	MOVFF       _TOF+2, FARG_FloatToStr_fnum+2
0x1012	0xF08CC03A  	MOVFF       _TOF+3, FARG_FloatToStr_fnum+3
0x1016	0x0E7C      	MOVLW       _txt1
0x1018	0x6F8D      	MOVWF       FARG_FloatToStr_str, 1
0x101A	0x0E00      	MOVLW       hi_addr(_txt1)
0x101C	0x6F8E      	MOVWF       FARG_FloatToStr_str+1, 1
0x101E	0xDD22      	RCALL       _FloatToStr
;APESW.c,300 :: 		FloatToStr(Df, txt2);
0x1020	0xF089C06D  	MOVFF       _Df, FARG_FloatToStr_fnum
0x1024	0xF08AC06E  	MOVFF       _Df+1, FARG_FloatToStr_fnum+1
0x1028	0xF08BC06F  	MOVFF       _Df+2, FARG_FloatToStr_fnum+2
0x102C	0xF08CC070  	MOVFF       _Df+3, FARG_FloatToStr_fnum+3
0x1030	0x0E74      	MOVLW       _txt2
0x1032	0x6F8D      	MOVWF       FARG_FloatToStr_str, 1
0x1034	0x0E00      	MOVLW       hi_addr(_txt2)
0x1036	0x6F8E      	MOVWF       FARG_FloatToStr_str+1, 1
0x1038	0xDD15      	RCALL       _FloatToStr
;APESW.c,302 :: 		Lcd_Out(1,1,"TOF: ");
0x103A	0x0E01      	MOVLW       1
0x103C	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x103E	0x0E01      	MOVLW       1
0x1040	0x6F8A      	MOVWF       FARG_Lcd_Out_column, 1
0x1042	0x0E2E      	MOVLW       ?lstr1_APESW
0x1044	0x6F8B      	MOVWF       FARG_Lcd_Out_text, 1
0x1046	0x0E00      	MOVLW       hi_addr(?lstr1_APESW)
0x1048	0x6F8C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x104A	0xDCB7      	RCALL       _Lcd_Out
;APESW.c,303 :: 		Lcd_Out_Cp(txt1);                     //Visualiza el valor del TOF en el LCD*/
0x104C	0x0E7C      	MOVLW       _txt1
0x104E	0x6F89      	MOVWF       FARG_Lcd_Out_CP_text, 1
0x1050	0x0E00      	MOVLW       hi_addr(_txt1)
0x1052	0x6F8A      	MOVWF       FARG_Lcd_Out_CP_text+1, 1
0x1054	0xDCF1      	RCALL       _Lcd_Out_CP
;APESW.c,304 :: 		Lcd_Out(2,1,"Dst: ");
0x1056	0x0E02      	MOVLW       2
0x1058	0x6F89      	MOVWF       FARG_Lcd_Out_row, 1
0x105A	0x0E01      	MOVLW       1
0x105C	0x6F8A      	MOVWF       FARG_Lcd_Out_column, 1
0x105E	0x0E23      	MOVLW       ?lstr2_APESW
0x1060	0x6F8B      	MOVWF       FARG_Lcd_Out_text, 1
0x1062	0x0E00      	MOVLW       hi_addr(?lstr2_APESW)
0x1064	0x6F8C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x1066	0xDCA9      	RCALL       _Lcd_Out
;APESW.c,305 :: 		Lcd_Out_Cp(txt2);                     //Visualiza el valor del TOF en el LCD*/
0x1068	0x0E74      	MOVLW       _txt2
0x106A	0x6F89      	MOVWF       FARG_Lcd_Out_CP_text, 1
0x106C	0x0E00      	MOVLW       hi_addr(_txt2)
0x106E	0x6F8A      	MOVWF       FARG_Lcd_Out_CP_text+1, 1
0x1070	0xDCE3      	RCALL       _Lcd_Out_CP
;APESW.c,307 :: 		delay_ms(15);
0x1072	0x0EEA      	MOVLW       234
0x1074	0x6E0C      	MOVWF       R12, 0
0x1076	0x0EC3      	MOVLW       195
0x1078	0x6E0D      	MOVWF       R13, 0
L_main29:
0x107A	0x2E0D      	DECFSZ      R13, 1, 0
0x107C	0xD7FE      	BRA         L_main29
0x107E	0x2E0C      	DECFSZ      R12, 1, 0
0x1080	0xD7FC      	BRA         L_main29
;APESW.c,309 :: 		}
0x1082	0xD74D      	BRA         L_main24
;APESW.c,310 :: 		}
L_end_main:
0x1084	0xD7FF      	BRA         $+0
; end of _main
0x109E	0xF01DEE10  	LFSR        1, 29
0x10A2	0x0E17      	MOVLW       23
0x10A4	0x6E00      	MOVWF       R0 
0x10A6	0x0E01      	MOVLW       1
0x10A8	0x6E01      	MOVWF       R1 
0x10AA	0x0E86      	MOVLW       134
0x10AC	0x6EF6      	MOVWF       4086 
0x10AE	0x0E10      	MOVLW       16
0x10B0	0x6EF7      	MOVWF       TBLPTRH 
0x10B2	0x0E00      	MOVLW       0
0x10B4	0x6EF8      	MOVWF       TBLPTRU 
0x10B6	0xF003EC97  	CALL        1838, 0
0x10BA	0x0012      	RETURN      0
;__Lib_Conversions.c,0 :: ?ICS?lstr3___Lib_Conversions
0x1086	0x4E49 ;?ICS?lstr3___Lib_Conversions+0
0x1088	0x0046 ;?ICS?lstr3___Lib_Conversions+2
; end of ?ICS?lstr3___Lib_Conversions
;__Lib_Conversions.c,0 :: ?ICS?lstr2___Lib_Conversions
0x108A	0x0030 ;?ICS?lstr2___Lib_Conversions+0
; end of ?ICS?lstr2___Lib_Conversions
;APESW.c,0 :: ?ICS?lstr2_APESW
0x108C	0x7344 ;?ICS?lstr2_APESW+0
0x108E	0x3A74 ;?ICS?lstr2_APESW+2
0x1090	0x0020 ;?ICS?lstr2_APESW+4
; end of ?ICS?lstr2_APESW
;__Lib_Conversions.c,0 :: ?ICS?lstr1___Lib_Conversions
0x1092	0x614E ;?ICS?lstr1___Lib_Conversions+0
0x1094	0x004E ;?ICS?lstr1___Lib_Conversions+2
; end of ?ICS?lstr1___Lib_Conversions
;APESW.c,0 :: ?ICS_ThT
0x1096	0x08 ;?ICS_ThT+0
; end of ?ICS_ThT
;APESW.c,0 :: ?ICS?lstr1_APESW
0x1097	0x4F54 ;?ICS?lstr1_APESW+0
0x1099	0x3A46 ;?ICS?lstr1_APESW+2
0x109B	0x0020 ;?ICS?lstr1_APESW+4
; end of ?ICS?lstr1_APESW
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [540]    _Interrupt
0x0224      [22]    _Delay_5500us
0x023A      [14]    _Delay_1us
0x0248      [14]    _Delay_50us
0x0256      [26]    _SETFUN32
0x0270       [8]    _FIXSIGN32
0x0278      [24]    _SETFOV32
0x0290     [126]    _Lcd_Cmd
0x030E      [14]    _RES032
0x031C      [12]    _Lcd_Chr_CP
0x0328       [8]    _SETFDZ32
0x0330     [206]    _Compare_Double
0x03FE      [30]    _Div_8X8_U
0x041C     [288]    _Mul_32x32_FP
0x053C      [28]    _SETIOV3224
0x0558     [114]    _NRM3232
0x05CA      [78]    _strcpy
0x0618      [88]    _UART1_Init
0x0670      [40]    _word2double
0x0698     [150]    _Lcd_Init
0x072E      [16]    ___CC2DW
0x073E      [46]    _Configuracion
0x076C     [372]    _Div_32x32_FP
0x08E0     [218]    _double2word
0x09BA     [126]    _Lcd_Out
0x0A38      [44]    _Lcd_Out_CP
0x0A64    [1050]    _FloatToStr
0x0E7E     [520]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    R1
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [2]    memchr_s_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001D       [4]    ?lstr3___Lib_Conversions
0x0021       [2]    ?lstr2___Lib_Conversions
0x0023       [6]    ?lstr2_APESW
0x0029       [4]    ?lstr1___Lib_Conversions
0x002D       [1]    _ThT
0x002E       [6]    ?lstr1_APESW
0x0034       [1]    _F2
0x0035       [1]    _F3
0x0036       [1]    _F1
0x0037       [4]    _TOF
0x003B       [1]    _FEC
0x003C       [1]    _DFT1
0x003D       [1]    _DFT2
0x003E       [2]    _BF3
0x0040       [1]    _BF1
0x0041       [2]    _BF2
0x0043       [2]    _Di
0x0045       [2]    _contp
0x0047       [2]    _punDt
0x0049       [2]    _punT1
0x004B       [2]    _contT
0x004D       [2]    _T1
0x004F       [2]    _T2
0x0051       [1]    _FP
0x0052       [2]    _contTOF
0x0054       [1]    _BS
0x0055       [5]    _Rspt
0x005A       [0]    __Lib_Lcd_cmd_status
0x005B       [4]    _UART_Tx_Idle_Ptr
0x005F       [1]    _DF3
0x0060       [1]    _DF2
0x0061       [4]    _UART_Rdy_Ptr
0x0065       [4]    _UART_Wr_Ptr
0x0069       [4]    _UART_Rd_Ptr
0x006D       [4]    _Df
0x0071       [2]    _DT
0x0073       [1]    _DF1
0x0074       [8]    _txt2
0x007C       [8]    _txt1
0x0084       [4]    _VSnd
0x0088       [1]    _i
0x0089       [4]    FARG_FloatToStr_fnum
0x0089       [2]    FARG_Lcd_Out_CP_text
0x0089       [1]    FARG_Lcd_Out_row
0x008A       [1]    FARG_Lcd_Out_column
0x008B       [2]    FARG_Lcd_Out_text
0x008B       [1]    Lcd_Out_CP_i_L0
0x008D       [2]    FARG_FloatToStr_str
0x008D       [1]    Lcd_Out_i_L0
0x008F       [1]    FloatToStr_i_L0
0x0090       [1]    FloatToStr_d_L0
0x0091       [4]    FloatToStr_un_L0
0x0095       [1]    FloatToStr_bpoint_L0
0x0096       [1]    FloatToStr_dexpon_L0
0x0097       [1]    FARG_Lcd_Chr_CP_out_char
0x0097       [2]    FARG_strcpy_to
0x0099       [2]    FARG_strcpy_from
0x009B       [1]    FARG_Lcd_Cmd_out_char
0x0F81       [1]    PORTB
0x0F83       [0]    LCD_D6
0x0F83       [0]    LCD_D7
0x0F83       [0]    LCD_D5
0x0F83       [0]    LCD_RS
0x0F83       [0]    LCD_EN
0x0F83       [0]    LCD_D4
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD6_bit
0x0F84       [0]    RE1_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC7_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    LCD_EN_Direction
0x0F95       [0]    LCD_RS_Direction
0x0F95       [0]    LCD_D5_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    TRISE1_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [1]    PIE1
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCA       [0]    TMR2ON_bit
0x0FCB       [1]    PR2
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1ON_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1086       [4]    ?ICS?lstr3___Lib_Conversions
0x108A       [2]    ?ICS?lstr2___Lib_Conversions
0x108C       [6]    ?ICS?lstr2_APESW
0x1092       [4]    ?ICS?lstr1___Lib_Conversions
0x1096       [1]    ?ICS_ThT
0x1097       [6]    ?ICS?lstr1_APESW
